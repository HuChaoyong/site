{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/E-R.png","path":"img/E-R.png","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/resource-site.png","path":"img/resource-site.png","modified":0,"renderable":0},{"_id":"source/download/autoproxy.zip","path":"download/autoproxy.zip","modified":0,"renderable":0},{"_id":"source/download/theme.zip","path":"download/theme.zip","modified":0,"renderable":0},{"_id":"source/img/sorata.jpeg","path":"img/sorata.jpeg","modified":0,"renderable":0},{"_id":"source/download/theme/favicon.ico","path":"download/theme/favicon.ico","modified":0,"renderable":0},{"_id":"source/download/theme/logo-small.png","path":"download/theme/logo-small.png","modified":0,"renderable":0},{"_id":"themes/anodyne/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"source/download/autoproxy.pac","path":"download/autoproxy.pac","modified":0,"renderable":0},{"_id":"source/img/Ai.png","path":"img/Ai.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1531321392528},{"_id":"source/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1531321392529},{"_id":"themes/anodyne/LICENSE","hash":"283b04655955b9d7904c85b7a4f908de1f529699","modified":1583762260451},{"_id":"themes/anodyne/README.md","hash":"91e55502fdd9d96d3491c56e17ed4a5bfecec99b","modified":1583762260451},{"_id":"themes/anodyne/_config.yml","hash":"53730e01fefa1228809933f725c134dd53deebe1","modified":1590916633162},{"_id":"source/_posts/Angular-ng-template.md","hash":"b8ec96211a4de4c1c4f53c1220bb19fe2c38b5c1","modified":1583764843689},{"_id":"source/_posts/ArcGIS-JS-API.md","hash":"81778c6810933268ebab616a69894282d7a60a88","modified":1551459594526},{"_id":"source/_posts/Basic-Of-Nginx.md","hash":"f93411c02da005d006bdc2f937dbf65e25e0ba86","modified":1556029651731},{"_id":"source/_posts/Arcgis-Server-Mensuration-3D-Publish.md","hash":"495ac3fd2085337de10cebfa1a7371d906753087","modified":1593940157253},{"_id":"source/_posts/Build-ubuntu-boot-usb-By-Mac.md","hash":"cc9c1e6946b11a65422e0ee95ad2984a9c30df65","modified":1582210808132},{"_id":"source/_posts/Home-PC-Server-Build.md","hash":"cea9148db00b4d576e06b706b170c636cf912c82","modified":1581603905701},{"_id":"source/_posts/Init-this-site.md","hash":"30e4086a11d9ffc9fff1ecef06be28634d58aa9b","modified":1531321392529},{"_id":"source/_posts/Linux下创建自定义命令.md","hash":"fbe0c24695e5ddb296414af2533b0f3714594acd","modified":1592384587541},{"_id":"source/_posts/Linux定时执行任务.md","hash":"05fc291df7e020389a6e5b857e4cd9330d2104c6","modified":1590916548857},{"_id":"source/_posts/PostgreSQL.md","hash":"2026ffd4366f07a57c87f52c9ca740c123c5b196","modified":1601348553269},{"_id":"source/_posts/Server-operation-有关服务器操作.md","hash":"57bcdebba1eeff777d31c662692bc84d09913bf8","modified":1540660311584},{"_id":"source/_posts/Ubuntu常用软件安装.md","hash":"bb336b2d410c225dbc867618ba32a602482e9921","modified":1581602923744},{"_id":"source/_posts/UsuallyUsedCommand.md","hash":"79e45bffa454e6bd2ab92f7887c3b77af3b981af","modified":1567910280859},{"_id":"source/_posts/Vi.md","hash":"54ddd404d7ab2ed1eb9f845834b86446ae499af8","modified":1575723552840},{"_id":"source/_posts/ubuntu-install-font.md","hash":"01eeae2ce3eab96b3e490077c4da3be9ca6382a1","modified":1577376867805},{"_id":"source/_posts/常用Linux命令-小松鼠.md","hash":"79a72f8c657b30bc799e64988d926d1585d8ffa1","modified":1531321392627},{"_id":"source/_posts/网络工具.md","hash":"d8f9faa7c01017075a860586e9ff1309868ba434","modified":1540659721113},{"_id":"source/_posts/装机踩坑日常.md","hash":"51fe3f1bf0e74cd022721e38b4f12e1c36ca43e9","modified":1586361192577},{"_id":"source/about/index.md","hash":"7edce3b7c015dfb2351cc9422fc8294feab9da4e","modified":1583763403205},{"_id":"source/archive/index.md","hash":"b9d28f7401765d1199a54b165f826f19a7ffb5c9","modified":1531321392632},{"_id":"source/img/E-R.png","hash":"668ae6b212cbe8e1b4f3bc3f9d9fc6b090a31eec","modified":1553272068145},{"_id":"source/img/favicon.ico","hash":"4bb0032df79a44c758f780cab8f29e777e7b6d97","modified":1531321392658},{"_id":"source/img/resource-site.png","hash":"3f063b917a223ef89577c68cf94f4fff2f851965","modified":1556029647284},{"_id":"source/download/autoproxy.zip","hash":"87562a6b13be62ed65b6d43d48c73d4a306afcd3","modified":1531324694751},{"_id":"source/download/theme.zip","hash":"b94145c9d5880ee90cf292af4ddcdb94a7ec0cc0","modified":1556029242100},{"_id":"source/tags/index.md","hash":"d2445b6751df9d39bd57d243229878830bc1e5f6","modified":1583763135183},{"_id":"themes/anodyne/languages/default.yml","hash":"ca15bcfaf72bcc03f0399adad2ccc1286b7e1f0b","modified":1583762260452},{"_id":"themes/anodyne/languages/fr.yml","hash":"b436688a5a0337018527ed57910fafdc5363afed","modified":1583762260452},{"_id":"themes/anodyne/languages/en.yml","hash":"ca15bcfaf72bcc03f0399adad2ccc1286b7e1f0b","modified":1583762260452},{"_id":"themes/anodyne/languages/ja.yml","hash":"ef896837230aadc20255ba78e950bf9654b75d91","modified":1583762260452},{"_id":"themes/anodyne/languages/nl.yml","hash":"cc155e8af2de51b4bff97400ced85028cdcbce78","modified":1583762260452},{"_id":"themes/anodyne/languages/vi.yml","hash":"c7d0c9e84bd95836ea4f47d5ad367baf689479f6","modified":1583762260452},{"_id":"themes/anodyne/languages/zh-CN.yml","hash":"900ad0d674cd5692ed50e0c0215f4e40a956ecc8","modified":1583762260453},{"_id":"themes/anodyne/languages/zh-TW.yml","hash":"a7779381e1497e072db5cad55b1737bd36dca4b7","modified":1583762260453},{"_id":"themes/anodyne/layout/index.ejs","hash":"bf4f905d19dde85d69393671b30db3d97fe7aff2","modified":1583762260456},{"_id":"themes/anodyne/layout/archive.ejs","hash":"34748b8823e32107497f4e35699b69d0df102ce9","modified":1583762260455},{"_id":"themes/anodyne/layout/layout.ejs","hash":"7047637446a9849592a923e23ca715033a7e6b8a","modified":1583762260456},{"_id":"themes/anodyne/layout/page.ejs","hash":"ea89a436ea73334a46b379a769c4ef56ecbbd4f4","modified":1583762260456},{"_id":"themes/anodyne/layout/post.ejs","hash":"247962030ad0eaf6afe3a6ed0b2735173bbae1a1","modified":1583762260456},{"_id":"themes/anodyne/template/debug.css","hash":"07ad253d498ce573300a544913f9dc61ab0e6528","modified":1583762260459},{"_id":"themes/anodyne/template/index.html","hash":"80e2e0b6574577f3fed6d4e469a40e5da340f081","modified":1583762260479},{"_id":"themes/anodyne/template/logo.svg","hash":"96888554b49b60e3c8484e544a276a79e599c106","modified":1583762260480},{"_id":"themes/anodyne/template/post.html","hash":"5b214697a3dff6176f76986a30533c10ed86601c","modified":1583762260480},{"_id":"themes/anodyne/template/style.css","hash":"1e1c2f5129500746b02280a61b42ff2e86f6c2ef","modified":1583762260480},{"_id":"source/img/sorata.jpeg","hash":"efbb829c62acadd0eacc06557b20386e1b97997d","modified":1531321392773},{"_id":"source/download/theme/favicon.ico","hash":"c2f9c252ab4ea6e769ff9538f99950dd5b98e3cc","modified":1555337988735},{"_id":"source/download/theme/footer.html","hash":"e9fd967fc6b7aa4a1a1bb18582e39887ea5ff055","modified":1556029229814},{"_id":"source/download/theme/header.html","hash":"306dca77615732162f9136b035e5f502c1d64d65","modified":1556028944275},{"_id":"source/download/theme/logo-small.png","hash":"2807316513411f9d6e6cf0d95f46076840974bb4","modified":1555259736394},{"_id":"themes/anodyne/layout/_partial/after-footer.ejs","hash":"a56ee353c8adab93c6ec5fa7937b03672256b42b","modified":1583762260453},{"_id":"themes/anodyne/layout/_partial/article-archive.ejs","hash":"2f1d19a948a61784b161ae20b60d6bfe144fa355","modified":1583762260453},{"_id":"themes/anodyne/layout/_partial/article-short.ejs","hash":"ab72e80371f46ed65b9e0832241418c2d1727025","modified":1583762260453},{"_id":"themes/anodyne/layout/_partial/banner.ejs","hash":"51fd0b72e5264d7d0dbbd9cd9f77df31f46aee47","modified":1583762260454},{"_id":"themes/anodyne/layout/_partial/comments.ejs","hash":"132a80fc6bc88377c1b338f423f0716ce9186d17","modified":1583762260454},{"_id":"themes/anodyne/layout/_partial/footer.ejs","hash":"50e9f569d0dd3232bef4028a9a07dc256792c5a8","modified":1583762260454},{"_id":"themes/anodyne/layout/_partial/google-analytics.ejs","hash":"4e6e8de9becea5a1636a4dcadcf7a10c06e2426e","modified":1583762260454},{"_id":"themes/anodyne/layout/_partial/head.ejs","hash":"cfc3b3376d563550de24dcf5a64cad8d7e15101c","modified":1583762260455},{"_id":"themes/anodyne/layout/_partial/pagination.ejs","hash":"b7909df49fdff5943c2b93821a2ba6b4ed10de95","modified":1583762260455},{"_id":"themes/anodyne/layout/_partial/tag-category-index.ejs","hash":"39de576e2ebf41f53c9b1e94f0cad981a6355d2c","modified":1583762260455},{"_id":"themes/anodyne/layout/_partial/widget-about.ejs","hash":"3aa8a1143f0e5184111f93b2c21b0c30d905771d","modified":1583762260455},{"_id":"themes/anodyne/layout/_partial/widget-categories.ejs","hash":"928234e98047366bcda7e2b9c88728b0a101f350","modified":1583762260455},{"_id":"themes/anodyne/layout/_partial/widget-recent-posts.ejs","hash":"b127b23113bcdee2d4eb030bbfa9cc6acd732c3a","modified":1583762260455},{"_id":"themes/anodyne/source/css/style.styl","hash":"7a9aedb2f042cbef6c182a3db59e4d350578cd47","modified":1583762260458},{"_id":"themes/anodyne/template/devicon/Read Me.txt","hash":"59f2046b2874381564e1bb8706b011c9705b0bd4","modified":1583762260459},{"_id":"themes/anodyne/template/devicon/style.css","hash":"aa9724750bd8819a5193e1b2a8db83c8fa6a2030","modified":1583762260479},{"_id":"source/download/autoproxy.pac","hash":"11078cd445d0d6ef007ede3b4ee16b6ca007ee95","modified":1531144018150},{"_id":"source/img/Ai.png","hash":"b400531967c912d2ee3cbdd5dbeaf05ab0964abc","modified":1584974300000},{"_id":"themes/anodyne/source/css/partial/_base.styl","hash":"edb253386cc6c7fe5f48980f989ec8771abe99fa","modified":1583762260457},{"_id":"themes/anodyne/source/css/partial/_content.styl","hash":"5f5b925a52f514c18263a2283c51b9296f32a376","modified":1583762260457},{"_id":"themes/anodyne/source/css/partial/_highlight.styl","hash":"c3fa7da7b998c5fb2bf5b43b0bcc51cf4c98123f","modified":1583762260458},{"_id":"themes/anodyne/template/devicon/demo-files/demo.css","hash":"788bea3952f64bf51bd1df2d4af8bc7f6e80e798","modified":1583762260459},{"_id":"themes/anodyne/template/devicon/demo-files/demo.js","hash":"3325132f9aaedbddaeb5eab2b9c0f9ce698b8d93","modified":1583762260460},{"_id":"themes/anodyne/template/devicon/demo.html","hash":"2f7f175395db74edf2e127e0d10e4ab3c424fd35","modified":1583762260462},{"_id":"themes/anodyne/template/devicon/fonts/devicon.eot","hash":"72d1a173e58c7508bb1457a535b67472c6c35cec","modified":1583762260463},{"_id":"themes/anodyne/template/devicon/fonts/devicon.ttf","hash":"3eb76cd8e89f7046a735a7a8bc2de693c7314a07","modified":1583762260469},{"_id":"themes/anodyne/template/devicon/fonts/devicon.woff","hash":"69b887104812d0f246195fc3ee4abcafbbc4e961","modified":1583762260471},{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","hash":"08d1ac12b530acf02a0b6f77c5312b7fd5670b30","modified":1531321392631},{"_id":"themes/anodyne/template/devicon/fonts/devicon.svg","hash":"e503ceedbdc3f353f977a3bcee6a341f94e52dab","modified":1583762260468},{"_id":"themes/anodyne/template/devicon/selection.json","hash":"3f0a9eefd7e91e00bcc01f47ad1a28282cd9bf48","modified":1583762260479},{"_id":"public/post-sitemap.xml","hash":"d295daf72814e454673687aabbff116da4692caa","modified":1601348640447},{"_id":"public/page-sitemap.xml","hash":"9e4ef19f369f134295489ac6d2d80510831f6564","modified":1593940249739},{"_id":"public/tag-sitemap.xml","hash":"995e7b363d79d25b97842265b7acf6440e7e3f8b","modified":1601348640453},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1593940249849},{"_id":"public/sitemap.xml","hash":"e0f0f3417df16e633b4e053e3c4addb63692795f","modified":1601348640458},{"_id":"public/404.html","hash":"0a730752bf1087955c1226ed34794e27a0ce26d0","modified":1593940250038},{"_id":"public/about/index.html","hash":"8ebcb8649e4a6c47c1149cd295620bd96313a663","modified":1593940250043},{"_id":"public/archive/index.html","hash":"f439e143643595d6818fd3290cec6268a1f2e09b","modified":1593940250043},{"_id":"public/tags/index.html","hash":"83776c446f8aa9e0994f0b880b30ae25ece507c1","modified":1593940250123},{"_id":"public/download/theme/footer.html","hash":"d5ad83e920c44267733e3e4f0f1de535395b6591","modified":1593940250133},{"_id":"public/download/theme/header.html","hash":"fb0a04bc1913d9bf4895220014b00dad18c5d623","modified":1593940250134},{"_id":"public/2020/05/31/Linux定时执行任务/index.html","hash":"0c4cb47d5c4a59c06692021d5f30f7c29b24c8e1","modified":1593940250134},{"_id":"public/2020/03/23/装机踩坑日常/index.html","hash":"40f23db3a4d8445e0e0ce8f02aede5b20f1bd12d","modified":1593940250137},{"_id":"public/2020/03/09/Angular-ng-template/index.html","hash":"91cdcd8c3764aa2b3e78b778d19915fad41d2981","modified":1593940250138},{"_id":"public/2020/02/20/Build-ubuntu-boot-usb-By-Mac/index.html","hash":"f83ef5d4a12b9c0c006f99fad154dc21d2557a98","modified":1593940250138},{"_id":"public/2019/12/26/ubuntu-install-font/index.html","hash":"4050ebcced675fc017838905b051baeca38aaae6","modified":1593940250138},{"_id":"public/2019/03/23/Home-PC-Server-Build/index.html","hash":"233b38eae59f817231020a77d89942ae1a6fba32","modified":1593940250138},{"_id":"public/2019/02/28/Linux下创建自定义命令/index.html","hash":"473bd231502b19b540955db59f744dffdfcaf556","modified":1593940250138},{"_id":"public/2018/10/28/网络工具/index.html","hash":"f80c860bc27ba1261073f04a7f9cc94053ddbd72","modified":1593940250138},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/index.html","hash":"618afbfcd51467e0482e293ab5278e20d1fb0923","modified":1593940250138},{"_id":"public/2018/04/07/常用Linux命令-小松鼠/index.html","hash":"fd903d1c24aa168f4d21246715a64eb98dc286e1","modified":1593940250138},{"_id":"public/archives/index.html","hash":"5538be159245c97e63e43432ba1100bc9dac1810","modified":1593940250139},{"_id":"public/2018/04/06/Init-this-site/index.html","hash":"9624ecaa61fbf608b0ec02ed675d58088f4a6902","modified":1593940250139},{"_id":"public/2019/12/07/Vi/index.html","hash":"272d673bf77186755184e63188654922931c03b4","modified":1593940250139},{"_id":"public/2019/05/15/UsuallyUsedCommand/index.html","hash":"91196b6c03fd2af66598d7a526908b28dbeb7413","modified":1593940250140},{"_id":"public/2019/04/23/Basic-Of-Nginx/index.html","hash":"c9ead9b962ff32e24aa0cde7739cb18f4e03b59e","modified":1593940250140},{"_id":"public/2018/11/01/PostgreSQL/index.html","hash":"d0ff798e00ed203c257738a78dec58d2a76c2567","modified":1601348641393},{"_id":"public/2018/10/28/ArcGIS-JS-API/index.html","hash":"37ae51253d9b31d478d5c6d6b7e05df24ee0c25c","modified":1593940250140},{"_id":"public/2018/04/07/Ubuntu常用软件安装/index.html","hash":"6d7520a5932bc10396176584497857b353497424","modified":1593940250140},{"_id":"public/2020/07/05/Arcgis-Server-Mensuration-3D-Publish/index.html","hash":"a4f84403bd2f16564bbcec73f17af24079062b36","modified":1593940250152},{"_id":"public/archives/2018/index.html","hash":"f4eb7c88aada492b4afb7a05ab9f05c1e35f2bf7","modified":1593940250152},{"_id":"public/archives/archives/2/index.html","hash":"361f550ec8fb34591354284f81b92d409f78d1e4","modified":1593940250152},{"_id":"public/archives/2018/04/index.html","hash":"c56af557611b7ae78b40b1318987c435de62a200","modified":1593940250155},{"_id":"public/archives/2018/10/index.html","hash":"a8ed501321477dd57bea9279b44a0727f9e3a038","modified":1593940250155},{"_id":"public/archives/2018/11/index.html","hash":"92da97c3c30cf8ea125a1ff9a2a4e1bb0bea149e","modified":1593940250155},{"_id":"public/archives/2019/index.html","hash":"1b7c89a9a73803d6d10791f8cb93797d24e3f70a","modified":1593940250155},{"_id":"public/archives/2019/02/index.html","hash":"8e0afd6406cf2d5a2e4606f526a7d2ef69e89145","modified":1593940250155},{"_id":"public/archives/2019/03/index.html","hash":"cbafb52fa74d25bb9e8e790a261598a549222f25","modified":1593940250155},{"_id":"public/archives/2019/04/index.html","hash":"8aa18ad6eddc9f34b57291881eef8fd056fbc88f","modified":1593940250155},{"_id":"public/archives/2019/05/index.html","hash":"926e98f41f36e141272b7527a17616b0614062e0","modified":1593940250155},{"_id":"public/archives/2020/index.html","hash":"a616512d21a3b9d79e000669d1a383226fd5a279","modified":1593940250156},{"_id":"public/archives/2019/12/index.html","hash":"f640c68667707577f561c7008b57e1abb5e603d2","modified":1593940250156},{"_id":"public/archives/2020/02/index.html","hash":"665c9306a94dfeaf3f8e31177e2d3c4849d6195c","modified":1593940250156},{"_id":"public/archives/2020/03/index.html","hash":"b2f80e003092ae1bc9993f8647c05492473dfdac","modified":1593940250156},{"_id":"public/index.html","hash":"e534a604e63f6dc8c6b6ef74b6f232366281d127","modified":1593940250156},{"_id":"public/archives/2020/05/index.html","hash":"bea1e2ecf67a15bd015382f136a7687dce7a9d02","modified":1593940250156},{"_id":"public/archives/2/index.html","hash":"af7c5e77f8ae14ff6dd03ae5655c0ddddf014391","modified":1593940250156},{"_id":"public/tags/Angular/index.html","hash":"1d41a131cbcf978da1078cd9b48b9081f7c600eb","modified":1593940250156},{"_id":"public/tags/ArcGIS/index.html","hash":"1c301544817e7a0663187c02828c950752be9512","modified":1593940250156},{"_id":"public/tags/JS/index.html","hash":"7797cb82ab5210171c7fae2d56d9b666426704a4","modified":1593940250156},{"_id":"public/tags/Network-Linux/index.html","hash":"a4431b4a7f303c59f084e6f012bccbd3b19c3890","modified":1593940250156},{"_id":"public/tags/Mac/index.html","hash":"2579f1b5dbf4fa61d515a2b01215506637dd8bc2","modified":1593940250156},{"_id":"public/tags/Linux/index.html","hash":"a4991c4e4a4b24cf72b39de21482b3d02bfdd008","modified":1593940250156},{"_id":"public/tags/Shell/index.html","hash":"5861ffd150fbb3edda86e689aa7b6971ef12e052","modified":1593940250156},{"_id":"public/tags/Network/index.html","hash":"e38a85e875f881c51420f45faaff5ba85f5480af","modified":1593940250156},{"_id":"public/tags/Task/index.html","hash":"b7528e686b56937c7b7d6ceb221204e9bbb1e5d9","modified":1593940250156},{"_id":"public/tags/Database/index.html","hash":"04529292bd1fbf8c5e99f11064cdadcdd4c56f1d","modified":1593940250156},{"_id":"public/tags/PostgreSQL/index.html","hash":"0977033d0a8f064d950d8875025fc8da7d48eac4","modified":1593940250156},{"_id":"public/tags/Ubuntu/index.html","hash":"e2008bb2e330a6384ce5ee2ab1c1321ffe02d2e4","modified":1593940250156},{"_id":"public/tags/Usually/index.html","hash":"4ce24b82d99796658ea1ed7ec9b104ff7b3b9a86","modified":1593940250157},{"_id":"public/tags/Vi/index.html","hash":"092087a207f52f6a80b9d1a835d6f1535c680508","modified":1593940250157},{"_id":"public/tags/Font/index.html","hash":"b1669f268af366fccfb52bb126e6fa859c004c9b","modified":1593940250157},{"_id":"public/tags/装机/index.html","hash":"779b6dfc0162fb71f47b5f32b38d6581c73265bd","modified":1593940250157},{"_id":"public/archives/2020/07/index.html","hash":"fbecc21737fbf4ebc8ca138c2a2b18c796ae2fd2","modified":1593940250157},{"_id":"public/live2dw/assets/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1593940250569},{"_id":"public/live2dw/assets/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1593940250569},{"_id":"public/live2dw/assets/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1593940250569},{"_id":"public/live2dw/assets/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1593940250569},{"_id":"public/live2dw/assets/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1593940250570},{"_id":"public/live2dw/assets/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1593940250570},{"_id":"public/live2dw/assets/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1593940250570},{"_id":"public/live2dw/assets/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1593940250570},{"_id":"public/live2dw/assets/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1593940250570},{"_id":"public/live2dw/assets/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1593940250573},{"_id":"public/live2dw/assets/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1593940250573},{"_id":"public/live2dw/assets/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1593940250574},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1593940250574},{"_id":"public/live2dw/assets/package.json","hash":"6d359ba64ae6d80ab123d29d2cb40549d12d8e9d","modified":1593940250574},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1593940250574},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1593940250574},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1593940250574},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1593940250578},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1593940250583},{"_id":"public/live2dw/assets/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1593940250592},{"_id":"public/live2dw/assets/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1593940250594},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1593940250595}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2018-07-11T15:03:12.528Z","updated":"2018-07-11T15:03:12.528Z","path":"404.html","title":"","comments":1,"_id":"ckc8utg3d0000ynmpo6y94qkq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"关于","type":"about","date":"2016-04-20T20:48:33.000Z","description":"","header-img":"img/header_img/Iron-Man-3.png","comments":1,"_content":"\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"关于\"\ntype: about\ndate: 2016-04-21 04:48:33\ndescription: \"\"\nheader-img: \"img/header_img/Iron-Man-3.png\"\ncomments: true\n---\n\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.\n","updated":"2020-03-09T14:16:43.205Z","path":"about/index.html","_id":"ckc8utg5h001dynmpaigb37jh","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n"},{"layout":"archive","title":"博文","header-img":"img/header_img/archive-bg.jpg","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"谁没点经历,写下了吧","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"博文\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"谁没点经历,写下了吧\"\n---\n","updated":"2018-07-11T15:03:12.632Z","path":"archive/index.html","_id":"ckc8utg5j001fynmpninj1g5h","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: \"tags\"\ntype: tags\nlayout: \"tags\"\n---","date":"2020-03-09T14:12:15.183Z","updated":"2020-03-09T14:12:15.183Z","path":"tags/index.html","comments":1,"_id":"ckc8utg5v001vynmpvr45rn1f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"_content":"</tbody>\n</table>\n</main>\n<div id=\"footerwrap\" class=\"footer text-center\">\n<div class=\"container\">\n  <footer>\n    Power By ***.@2019\n  </footer>\n</div>\n</div>\n</body>\n<script>\nvar reg = /htt(p|ps):\\/\\/.*?\\//;\nvar baseUrl = '';\nvar isRoot = false;\nvar href = window.location.href.replace(/\\/$/, '');\nif (reg.test(href)) {\n  baseUrl = href.match(reg)[0].replace(/\\/$/, '');\n} else {\n  isRoot = true;\n  baseUrl = href;\n}\n$('#list').addClass('table');\n// flow foreach, add a tag on right top.\n// like ['Windows', 'Linux', 'Mac', 'Programer'].forEach((dir) => {\n[].forEach((dir) => {\nvar li = document.createElement('li');\nli.className = window.location.href.includes(dir) ? 'active' : '';\nli.innerHTML = `<a id=\"${dir}\" href=\"${baseUrl + '/' + dir}\">${dir}</a>`;\n$('#nav-list')[0].appendChild(li);\n});\nvar dir = baseUrl + '/';\n$('#dir-level').text().replace(/^.+?\\/|\\/$/g, '').split('/').forEach((bread, idx, arr) => {\ndir += bread + '/';\nvar li = document.createElement('li');\nif (idx === arr.length - 1) {\n  li.innerHTML = bread;\n  li.className = 'active';\n} else {\n  li.innerHTML = `<a href=\"${dir}\">${bread}</a>`;\n}\n$('.breadcrumb')[0].appendChild(li);\n});\n$('#dir-level').hide();\nif (!isRoot) {\n$('tbody')[0].removeChild($('tbody')[0].firstElementChild);\n}\ndocument.getElementById('ico').href = baseUrl + '/theme/favicon.ico';\ndocument.getElementById('img').src = baseUrl + '/theme/logo-small.png';\n</script>\n\n</html>\n","source":"download/theme/footer.html","raw":"</tbody>\n</table>\n</main>\n<div id=\"footerwrap\" class=\"footer text-center\">\n<div class=\"container\">\n  <footer>\n    Power By ***.@2019\n  </footer>\n</div>\n</div>\n</body>\n<script>\nvar reg = /htt(p|ps):\\/\\/.*?\\//;\nvar baseUrl = '';\nvar isRoot = false;\nvar href = window.location.href.replace(/\\/$/, '');\nif (reg.test(href)) {\n  baseUrl = href.match(reg)[0].replace(/\\/$/, '');\n} else {\n  isRoot = true;\n  baseUrl = href;\n}\n$('#list').addClass('table');\n// flow foreach, add a tag on right top.\n// like ['Windows', 'Linux', 'Mac', 'Programer'].forEach((dir) => {\n[].forEach((dir) => {\nvar li = document.createElement('li');\nli.className = window.location.href.includes(dir) ? 'active' : '';\nli.innerHTML = `<a id=\"${dir}\" href=\"${baseUrl + '/' + dir}\">${dir}</a>`;\n$('#nav-list')[0].appendChild(li);\n});\nvar dir = baseUrl + '/';\n$('#dir-level').text().replace(/^.+?\\/|\\/$/g, '').split('/').forEach((bread, idx, arr) => {\ndir += bread + '/';\nvar li = document.createElement('li');\nif (idx === arr.length - 1) {\n  li.innerHTML = bread;\n  li.className = 'active';\n} else {\n  li.innerHTML = `<a href=\"${dir}\">${bread}</a>`;\n}\n$('.breadcrumb')[0].appendChild(li);\n});\n$('#dir-level').hide();\nif (!isRoot) {\n$('tbody')[0].removeChild($('tbody')[0].firstElementChild);\n}\ndocument.getElementById('ico').href = baseUrl + '/theme/favicon.ico';\ndocument.getElementById('img').src = baseUrl + '/theme/logo-small.png';\n</script>\n\n</html>\n","date":"2019-04-23T14:20:29.860Z","updated":"2019-04-23T14:20:29.814Z","path":"download/theme/footer.html","title":"","comments":1,"layout":"page","_id":"ckc8utg65001wynmp3m1qz4gn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script>\n\n\n<div id=\"footerwrap\" class=\"footer text-center\">\n<div class=\"container\">\n  <footer>\n    Power By ***.@2019\n  </footer>\n</div>\n</div>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/assets/koharu.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false,\"tagMode\":false});</script>\n<script>\nvar reg = /htt(p|ps):\\/\\/.*?\\//;\nvar baseUrl = '';\nvar isRoot = false;\nvar href = window.location.href.replace(/\\/$/, '');\nif (reg.test(href)) {\n  baseUrl = href.match(reg)[0].replace(/\\/$/, '');\n} else {\n  isRoot = true;\n  baseUrl = href;\n}\n$('#list').addClass('table');\n// flow foreach, add a tag on right top.\n// like ['Windows', 'Linux', 'Mac', 'Programer'].forEach((dir) => {\n[].forEach((dir) => {\nvar li = document.createElement('li');\nli.className = window.location.href.includes(dir) ? 'active' : '';\nli.innerHTML = `<a id=\"${dir}\" href=\"${baseUrl + '/' + dir}\">${dir}</a>`;\n$('#nav-list')[0].appendChild(li);\n});\nvar dir = baseUrl + '/';\n$('#dir-level').text().replace(/^.+?\\/|\\/$/g, '').split('/').forEach((bread, idx, arr) => {\ndir += bread + '/';\nvar li = document.createElement('li');\nif (idx === arr.length - 1) {\n  li.innerHTML = bread;\n  li.className = 'active';\n} else {\n  li.innerHTML = `<a href=\"${dir}\">${bread}</a>`;\n}\n$('.breadcrumb')[0].appendChild(li);\n});\n$('#dir-level').hide();\nif (!isRoot) {\n$('tbody')[0].removeChild($('tbody')[0].firstElementChild);\n}\ndocument.getElementById('ico').href = baseUrl + '/theme/favicon.ico';\ndocument.getElementById('img').src = baseUrl + '/theme/logo-small.png';\n</script>\n\n\n","site":{"data":{}},"excerpt":"","more":"\n\n\n<div id=\"footerwrap\" class=\"footer text-center\">\n<div class=\"container\">\n  <footer>\n    Power By ***.@2019\n  </footer>\n</div>\n</div>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/assets/koharu.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false,\"tagMode\":false});</script>\n<script>\nvar reg = /htt(p|ps):\\/\\/.*?\\//;\nvar baseUrl = '';\nvar isRoot = false;\nvar href = window.location.href.replace(/\\/$/, '');\nif (reg.test(href)) {\n  baseUrl = href.match(reg)[0].replace(/\\/$/, '');\n} else {\n  isRoot = true;\n  baseUrl = href;\n}\n$('#list').addClass('table');\n// flow foreach, add a tag on right top.\n// like ['Windows', 'Linux', 'Mac', 'Programer'].forEach((dir) => {\n[].forEach((dir) => {\nvar li = document.createElement('li');\nli.className = window.location.href.includes(dir) ? 'active' : '';\nli.innerHTML = `<a id=\"${dir}\" href=\"${baseUrl + '/' + dir}\">${dir}</a>`;\n$('#nav-list')[0].appendChild(li);\n});\nvar dir = baseUrl + '/';\n$('#dir-level').text().replace(/^.+?\\/|\\/$/g, '').split('/').forEach((bread, idx, arr) => {\ndir += bread + '/';\nvar li = document.createElement('li');\nif (idx === arr.length - 1) {\n  li.innerHTML = bread;\n  li.className = 'active';\n} else {\n  li.innerHTML = `<a href=\"${dir}\">${bread}</a>`;\n}\n$('.breadcrumb')[0].appendChild(li);\n});\n$('#dir-level').hide();\nif (!isRoot) {\n$('tbody')[0].removeChild($('tbody')[0].firstElementChild);\n}\ndocument.getElementById('ico').href = baseUrl + '/theme/favicon.ico';\ndocument.getElementById('img').src = baseUrl + '/theme/logo-small.png';\n</script>\n\n\n"},{"_content":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n  <link rel=\"shortcut icon\" id=\"ico\" href=\"\" type=\"image/x-icon\" />\n  <title>Resource Site</title>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      padding: 0;\n      margin: 0;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n    }\n    @media (max-width: 992px) {\n      tr>:nth-child(3) {\n        display: none;\n      }\n      a.navbar-brand {\n        margin-left: 10px;\n      }\n    }\n    li.active > a {\n      color: #82318E !important;\n      border-bottom: 2px solid #82318E;\n    }\n    a.navbar-brand {\n      font-weight: 900;\n      padding: 0px;\n      line-height: 50px;\n      height: 50px;\n    }\n    .navbar-brand>img {\n      float: left;\n    }\n    .margin-top-10 {\n      margin-top: 10px;\n    }\n    .margin-right-10 {\n      margin-right: 5px;\n    }\n    .footer {\n      left: 0;\n      bottom: 0;\n      right: 0;\n      color: #bfc9d3;\n      margin-top: 100px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      background: #384452;\n    }\n    </style>\n  <link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\">\n  <script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"></script>\n  <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n</head>\n\n<body>\n  <div class=\"navbar navbar-default margin-top-10\" role=\"navigation\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"/\"><img class=\"margin-right-10\" id=\"img\" src=\"\" alt=\"\">Resource Site</a>\n      </div>\n      <div class=\"navbar-collapse collapse navbar-right\">\n        <ul class=\"nav navbar-nav\" id=\"nav-list\">\n        </ul>\n      </div>\n    </div>\n  </div>\n  <main role=\"main\" class=\"container\">\n      <ul class=\"breadcrumb\"></ul>\n    <h4 id=\"dir-level\">Directory:","source":"download/theme/header.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n  <link rel=\"shortcut icon\" id=\"ico\" href=\"\" type=\"image/x-icon\" />\n  <title>Resource Site</title>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      padding: 0;\n      margin: 0;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n    }\n    @media (max-width: 992px) {\n      tr>:nth-child(3) {\n        display: none;\n      }\n      a.navbar-brand {\n        margin-left: 10px;\n      }\n    }\n    li.active > a {\n      color: #82318E !important;\n      border-bottom: 2px solid #82318E;\n    }\n    a.navbar-brand {\n      font-weight: 900;\n      padding: 0px;\n      line-height: 50px;\n      height: 50px;\n    }\n    .navbar-brand>img {\n      float: left;\n    }\n    .margin-top-10 {\n      margin-top: 10px;\n    }\n    .margin-right-10 {\n      margin-right: 5px;\n    }\n    .footer {\n      left: 0;\n      bottom: 0;\n      right: 0;\n      color: #bfc9d3;\n      margin-top: 100px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      background: #384452;\n    }\n    </style>\n  <link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\">\n  <script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"></script>\n  <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n</head>\n\n<body>\n  <div class=\"navbar navbar-default margin-top-10\" role=\"navigation\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"/\"><img class=\"margin-right-10\" id=\"img\" src=\"\" alt=\"\">Resource Site</a>\n      </div>\n      <div class=\"navbar-collapse collapse navbar-right\">\n        <ul class=\"nav navbar-nav\" id=\"nav-list\">\n        </ul>\n      </div>\n    </div>\n  </div>\n  <main role=\"main\" class=\"container\">\n      <ul class=\"breadcrumb\"></ul>\n    <h4 id=\"dir-level\">Directory:","date":"2019-04-23T14:17:15.638Z","updated":"2019-04-23T14:15:44.275Z","path":"download/theme/header.html","title":"","comments":1,"layout":"page","_id":"ckc8utg65001xynmpo3vapixk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n  <link rel=\"shortcut icon\" id=\"ico\" href type=\"image/x-icon\">\n  <title>Resource Site</title>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      padding: 0;\n      margin: 0;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n    }\n    @media (max-width: 992px) {\n      tr>:nth-child(3) {\n        display: none;\n      }\n      a.navbar-brand {\n        margin-left: 10px;\n      }\n    }\n    li.active > a {\n      color: #82318E !important;\n      border-bottom: 2px solid #82318E;\n    }\n    a.navbar-brand {\n      font-weight: 900;\n      padding: 0px;\n      line-height: 50px;\n      height: 50px;\n    }\n    .navbar-brand>img {\n      float: left;\n    }\n    .margin-top-10 {\n      margin-top: 10px;\n    }\n    .margin-right-10 {\n      margin-right: 5px;\n    }\n    .footer {\n      left: 0;\n      bottom: 0;\n      right: 0;\n      color: #bfc9d3;\n      margin-top: 100px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      background: #384452;\n    }\n    </style>\n  <link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\">\n  <script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"></script>\n  <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n</head>\n\n<body>\n  <div class=\"navbar navbar-default margin-top-10\" role=\"navigation\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"/\"><img class=\"margin-right-10\" id=\"img\" src alt>Resource Site</a>\n      </div>\n      <div class=\"navbar-collapse collapse navbar-right\">\n        <ul class=\"nav navbar-nav\" id=\"nav-list\">\n        </ul>\n      </div>\n    </div>\n  </div>\n  <main role=\"main\" class=\"container\">\n      <ul class=\"breadcrumb\"></ul>\n    <h4><span id=\"directory\">Directory:</span></h4></main><script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/assets/koharu.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false,\"tagMode\":false});</script></body></html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n  <link rel=\"shortcut icon\" id=\"ico\" href type=\"image/x-icon\">\n  <title>Resource Site</title>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      padding: 0;\n      margin: 0;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n    }\n    @media (max-width: 992px) {\n      tr>:nth-child(3) {\n        display: none;\n      }\n      a.navbar-brand {\n        margin-left: 10px;\n      }\n    }\n    li.active > a {\n      color: #82318E !important;\n      border-bottom: 2px solid #82318E;\n    }\n    a.navbar-brand {\n      font-weight: 900;\n      padding: 0px;\n      line-height: 50px;\n      height: 50px;\n    }\n    .navbar-brand>img {\n      float: left;\n    }\n    .margin-top-10 {\n      margin-top: 10px;\n    }\n    .margin-right-10 {\n      margin-right: 5px;\n    }\n    .footer {\n      left: 0;\n      bottom: 0;\n      right: 0;\n      color: #bfc9d3;\n      margin-top: 100px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      background: #384452;\n    }\n    </style>\n  <link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\">\n  <script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"></script>\n  <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n</head>\n\n<body>\n  <div class=\"navbar navbar-default margin-top-10\" role=\"navigation\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"/\"><img class=\"margin-right-10\" id=\"img\" src alt>Resource Site</a>\n      </div>\n      <div class=\"navbar-collapse collapse navbar-right\">\n        <ul class=\"nav navbar-nav\" id=\"nav-list\">\n        </ul>\n      </div>\n    </div>\n  </div>\n  <main role=\"main\" class=\"container\">\n      <ul class=\"breadcrumb\"></ul>\n    <h4 id=\"dir-level\">Directory:</h4></main><script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/assets/koharu.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false,\"tagMode\":false});</script></body></html>"}],"Post":[{"title":"Angular ng-template","catalog":true,"date":"2020-03-09T14:29:25.000Z","subtitle":null,"header-img":null,"_content":"\n# ng-template tag.\n\n* ng-template tag is a Structured tag.\n\n## use ngIf with it.\n\n```html\n<ng-template [ngIf]=\"visible\">\n    <span class=\"warning\">This a Warning!</span>\n</ng-template>\n\n<!-- it's same to this. -->\n<span class=\"warning\" *ngIf=\"visible\">This a Warning!</span>\n```\n\n## use ngFor with it.\n\n```html\n<ng-template ngFor let-item [ngForOf]=\"items\" let-idx=\"index\">\n    <span class=\"list-item\">{{idx}}: {{item.name}}</span>\n</ng-template>\n\n<!-- it's same to this. -->\n<span class=\"list-item\" *ngFor=\"let item of items; index as idx\">{{idx}}: {{item.name}}</span>\n```\n\n## use model variable.\n\n* some component need ngTemplate param.\n\n```html\n<nz-input-group nzSearch [nzAddOnAfter]=\"suffixIconButton\">\n    <input type=\"text\" nz-input placeholder=\"input search text\" />\n</nz-input-group>\n\n<ng-template #suffixIconButton>\n    <button nz-button nzType=\"primary\" nzSearch><i nz-icon type=\"search\"></i></button>\n</ng-template>\n```","source":"_posts/Angular-ng-template.md","raw":"---\ntitle: Angular ng-template\ncatalog: true\ndate: 2020-03-09 22:29:25\nsubtitle: \nheader-img:\ntags:\n- Angular\n---\n\n# ng-template tag.\n\n* ng-template tag is a Structured tag.\n\n## use ngIf with it.\n\n```html\n<ng-template [ngIf]=\"visible\">\n    <span class=\"warning\">This a Warning!</span>\n</ng-template>\n\n<!-- it's same to this. -->\n<span class=\"warning\" *ngIf=\"visible\">This a Warning!</span>\n```\n\n## use ngFor with it.\n\n```html\n<ng-template ngFor let-item [ngForOf]=\"items\" let-idx=\"index\">\n    <span class=\"list-item\">{{idx}}: {{item.name}}</span>\n</ng-template>\n\n<!-- it's same to this. -->\n<span class=\"list-item\" *ngFor=\"let item of items; index as idx\">{{idx}}: {{item.name}}</span>\n```\n\n## use model variable.\n\n* some component need ngTemplate param.\n\n```html\n<nz-input-group nzSearch [nzAddOnAfter]=\"suffixIconButton\">\n    <input type=\"text\" nz-input placeholder=\"input search text\" />\n</nz-input-group>\n\n<ng-template #suffixIconButton>\n    <button nz-button nzType=\"primary\" nzSearch><i nz-icon type=\"search\"></i></button>\n</ng-template>\n```","slug":"Angular-ng-template","published":1,"updated":"2020-03-09T14:40:43.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4i0001ynmpiht0eaam","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"ng-template-tag\">ng-template tag.</span></h1>\n<ul>\n<li>ng-template tag is a Structured tag.</li>\n</ul>\n<h2><span id=\"use-ngif-with-it\">use ngIf with it.</span></h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> [<span class=\"attr\">ngIf</span>]=<span class=\"string\">\"visible\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span>&gt;</span>This a Warning!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- it's same to this. --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"visible\"</span>&gt;</span>This a Warning!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"use-ngfor-with-it\">use ngFor with it.</span></h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> <span class=\"attr\">ngFor</span> <span class=\"attr\">let-item</span> [<span class=\"attr\">ngForOf</span>]=<span class=\"string\">\"items\"</span> <span class=\"attr\">let-idx</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span>&gt;</span>&#123;&#123;idx&#125;&#125;: &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- it's same to this. --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of items; index as idx\"</span>&gt;</span>&#123;&#123;idx&#125;&#125;: &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"use-model-variable\">use model variable.</span></h2>\n<ul>\n<li>some component need ngTemplate param.</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nz-input-group</span> <span class=\"attr\">nzSearch</span> [<span class=\"attr\">nzAddOnAfter</span>]=<span class=\"string\">\"suffixIconButton\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">nz-input</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"input search text\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nz-input-group</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> #<span class=\"attr\">suffixIconButton</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">nz-button</span> <span class=\"attr\">nzType</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">nzSearch</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">nz-icon</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>ng-template tag.</h1>\n<ul>\n<li>ng-template tag is a Structured tag.</li>\n</ul>\n<h2>use ngIf with it.</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> [<span class=\"attr\">ngIf</span>]=<span class=\"string\">\"visible\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span>&gt;</span>This a Warning!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- it's same to this. --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"visible\"</span>&gt;</span>This a Warning!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2>use ngFor with it.</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> <span class=\"attr\">ngFor</span> <span class=\"attr\">let-item</span> [<span class=\"attr\">ngForOf</span>]=<span class=\"string\">\"items\"</span> <span class=\"attr\">let-idx</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span>&gt;</span>&#123;&#123;idx&#125;&#125;: &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- it's same to this. --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of items; index as idx\"</span>&gt;</span>&#123;&#123;idx&#125;&#125;: &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2>use model variable.</h2>\n<ul>\n<li>some component need ngTemplate param.</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nz-input-group</span> <span class=\"attr\">nzSearch</span> [<span class=\"attr\">nzAddOnAfter</span>]=<span class=\"string\">\"suffixIconButton\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">nz-input</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"input search text\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nz-input-group</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-template</span> #<span class=\"attr\">suffixIconButton</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">nz-button</span> <span class=\"attr\">nzType</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">nzSearch</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">nz-icon</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-template</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"ArcGIS_JS_API","catalog":true,"date":"2018-10-27T17:15:00.000Z","subtitle":null,"header-img":null,"_content":"All of this is based on ArcGIS JS API 4.x\n# Custom Layer\n## Custom WMTS request\n> like just request level 17 map tile\n    ```javascript\n    /* \n        Test by API 4.6\n       when request level lower than 17, it will request urlTemplate resource\n       if level is more than 17 it will request \n       'http://localhost/#'[bad request]\n       this situation make you have a high level tile image, then your\n       high level request don't have any tile image\n    */\n   ```\n   ```javascript\n    // \"esri/request\" => esriRequest\n    // \"esri/layers/BaseTileLayer\" => BaseTileLayer\n    const TDTLayer = BaseTileLayer.createSubclass({\n        properties: {\n            urlTemplate: null\n        },\n        getTileUrl: function(level, row, col) {\n            // you can define any request rule here\n            if (level < 17) {\n                return this.urlTemplate;\n            } else {\n                return 'http://localhost/#';\n            }\n        },\n        fetchTile: function(level, row, col) {\n            const url = this.getTileUrl(level, row, col);\n            return esriRequest(url, {\n                responseType: 'image',\n                allowImageDataAccess: true\n            }).then(\n                function(response) {\n                    const image = response.data;\n                    const width = this.tileInfo.size[0];\n                    const height = this.tileInfo.size[1];\n                    const canvas = document.createElement('canvas');\n                    const context = canvas.getContext('2d');\n                    canvas.width = width;\n                    canvas.height = height;\n                    context.drawImage(image, 0, 0, width, height);\n                    return canvas;\n                }.bind(this)\n            );\n        }\n    });\n    // Use like simple layer\n    const tdt_img = new TDTLayer({\n        urlTemplate: \"http://t0.tianditu.com/DataServer?T=vec_w&x={col}&y={row}&l={level}\",\n        id: \"img_layer\"\n    });\n    map.add(tdt_img);\n```\n\n\n# Query Task By Per Page\n\n> Usually query feature, just return 1000 features, if you want to get more,<br>\nyou should change server publish config. but it's not Geek!<br>\nso query it by per page is a good idea !<br>\nbecause arcgis js api query not support ,but server rest full api support!\n```javascript\nrequire([\n  \"esri/request\",\n  \"esri/Graphic\",\n  \"esri/geometry/SpatialReference\",\n  \"esri/tasks/support/Query\",\n  \"esri/tasks/QueryTask\",\n  \"esri/tasks/support/StatisticDefinition\"\n], function (esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition) {\n\n  const queryPageTool = {\n    /**\n     * 分页分批请求数据\n     * @param {*} query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields\n     * @param {*} queryTask \n     * @param {*} pageSize 每页请求的数量（一般不大于1000）\n     * @param {*} anyField 任意一个字段名\n     * @param {*} theadCount 每批请求的个数 \n     */\n    queryByPage: function (query, queryTask, pageSize, anyField, theadCount) {\n      const countStatistic = {\n        onStatisticField: anyField,\n        outStatisticFieldName: 'count',\n        statisticType: 'count'\n      };\n      const saveArr = [];\n      this.queryFeatures(query, queryTask, [countStatistic]).then((countRes) => {\n        if (!isNullOrUndefined(countRes.features) && Array.isArray(countRes.features) && countRes.features.length > 0) {\n          const recordCount = countRes.features[0].attributes.count;\n          console.log('count: ', recordCount);\n          this.queryRecycle(query, queryTask, pageSize, 0, recordCount, [], theadCount);\n        }\n      });\n    },\n    /**\n     * Convert query param to url property\n     * @param {*} query \n     * @param  pageSize 单页数量大小\n     * @param number firstRecordRid 该页第一条记录的序号\n     */\n    covertQueryToQueryObj: function (query, pageSize, firstRecordRid) {\n      const baseObj = {\n        f: 'json',\n        spatialRel: 'esriSpatialRelIntersects',\n        resultRecordCount: pageSize,\n        resultOffset: firstRecordRid\n      };\n      // 把where转过去\n      if (!isNullOrUndefined(query.where)) {\n        baseObj['where'] = query.where;\n      }\n\n      if (!isNullOrUndefined(query.returnGeometry)) {\n        baseObj['returnGeometry'] = query.returnGeometry;\n      }\n\n      // 输出坐标系\n      if (!isNullOrUndefined(query.outSpatialReference)) {\n        baseObj['outSR'] = query.outSpatialReference.wkid;\n      }\n\n      // Geometry 转换\n      if (!isNullOrUndefined(query.geometry)) {\n        baseObj['inSR'] = query.geometry.spatialReference.wkid;\n        if (query.geometry.type === 'extent') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryEnvelope';\n        }\n        if (query.geometry.type === 'polygon') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolygon';\n        }\n        if (query.geometry.type === 'polyline') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolyline';\n        }\n        if (query.geometry.type === 'point') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPoint';\n        }\n      }\n\n      // 返回字段处理\n      if (!isNullOrUndefined(query.outFields) && Array.isArray(query.outFields) && query.outFields.length > 0) {\n        baseObj['outFields'] = query.outFields.toString();\n      }\n\n      // 排序处理\n      if (!isNullOrUndefined(query.orderByFields) && Array.isArray(query.orderByFields)) {\n        // baseObj['orderByFields']\n        let t = '';\n        query.orderByFields.forEach((orderField) => {\n          const deal = orderField.trim().replace(/\\s+/g, ' '); // 前后去空格并去掉中间重复的空格\n          const splitArr = deal.split(' ');\n          if (splitArr.length === 1) {\n            if (t === '') {\n              t += splitArr[0];\n            } else {\n              t += '%2C' + splitArr[0];\n            }\n          } else if (splitArr.length === 2 && (splitArr[1] === 'DESC' || splitArr[1] === 'ASC')) {\n            if (t === '') {\n              t += deal;\n            } else {\n              t += `%2C${deal}`;\n            }\n          }\n        });\n        if (t !== '') {\n          baseObj['orderByFields'] = t;\n        }\n      }\n      return baseObj;\n    },\n    /**\n     * 将传入的feature信息转换成 Graphic\n     * @param object : feature 请求回来的Feature \n     * @param string: geometryType 图形类型\n     * @param spatialReference: sr 返回的空间参考对象\n     * @param Graphic: Graphic \n     * @param SpatialReference: SpatialReference class\n     */\n    convertFeatureToGraphic: function (feature, geometryType, sr, Graphic, SpatialReference) {\n      if (isNullOrUndefined(feature.geometry)) {\n        return feature;\n      }\n      const spatialReference = new SpatialReference(sr);\n      if (geometryType.toLowerCase().includes('polygon')) {\n        feature.geometry.type = 'polygon';\n      } else if (geometryType.toLowerCase().includes('polyline')) {\n        feature.geometry.type = 'polyline';\n      } else if (geometryType.toLowerCase().includes('point')) {\n        feature.geometry.type = 'point';\n      }\n      feature['spatialReference'] = spatialReference;\n      const g = new Graphic(feature);\n      return g;\n    },\n    /**\n     * 将查询对象转成字符串\n     * @param object: newQuery 查询对象\n     */\n    convertQueryToRequestString: function (newQuery) {\n      let body = '';\n      for (const prop in newQuery) {\n        if (!isNullOrUndefined(newQuery[prop])) {\n          body += (encodeURIComponent(prop) + '=' + encodeURIComponent(newQuery[prop])) + '&';\n        }\n      }\n      body = body.replace(/\\&$/g, '');\n      return body;\n    },\n    queryRecycle: function (query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount) {\n      if (features.length < recordCount) {\n        const promiseArr = [];\n        const max = firstRecordRid + theadCount * pageSize;\n        for (; firstRecordRid < max && firstRecordRid < recordCount; firstRecordRid += pageSize) {\n          promiseArr.push(this.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));\n        }\n        Promise.all(promiseArr).then((resArr) => {\n          resArr.forEach((subRes) => {\n            if (!isNullOrUndefined(subRes) && !isNullOrUndefined(subRes.features)) {\n              features = features.concat(subRes.features);\n            }\n          });\n          this.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);\n        }).catch((e) => {\n          console.error(e);\n          observer.error(e);\n        });\n      } else {\n          // output all record\n        console.log('all records： ', features);\n      }\n    },\n    queryFeatures: function (query, queryTask, constraints) {\n      const q = new Query(query);\n      const qt = new QueryTask(queryTask);\n      if (!isNullOrUndefined(constraints) && Array.isArray(constraints)) {\n        q.outStatistics = [];\n        constraints.forEach(item => {\n          const tempStatisticDefinition = new StatisticDefinition();\n          tempStatisticDefinition.statisticType = item.statisticType;\n          tempStatisticDefinition.onStatisticField = item.onStatisticField;\n          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;\n          q.outStatistics.push(tempStatisticDefinition);\n        });\n      }\n      return qt.execute(q);\n    },\n    queryFeaturesByPage: function (query, queryTask, pageSize, firstRecordRid) {\n      const newQuery = this.covertQueryToQueryObj(query, pageSize, firstRecordRid);\n      const body = this.convertQueryToRequestString(newQuery);\n      return esriRequest(`${queryTask.url}/query?${body}`).then((res) => {\n        if (!isNullOrUndefined(res.data) && !isNullOrUndefined(res.data.features) && Array.isArray(res.data.features)) {\n          res.data.features.forEach((feature, idx) => {\n            res.data.features[idx] = this.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);\n          });\n          return res.data;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n\n\n  // test\n  const query = {\n    where: \"1=1\",\n    outFields: ['*'],\n    returnGeometry: true\n  };\n  const queryTask = { url: 'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0' };\n  // every cycle will request 5 times, every time request 1000 features.\n  queryPageTool.queryByPage(query, queryTask, 1000, 'objectid', 5);\n});\nfunction isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n}\n```\n\n\n\n","source":"_posts/ArcGIS-JS-API.md","raw":"---\ntitle: ArcGIS_JS_API\ncatalog: true\ndate: 2018-10-28 01:15:00\nsubtitle:\nheader-img:\ntags:\n- ArcGIS\n- JS\n---\nAll of this is based on ArcGIS JS API 4.x\n# Custom Layer\n## Custom WMTS request\n> like just request level 17 map tile\n    ```javascript\n    /* \n        Test by API 4.6\n       when request level lower than 17, it will request urlTemplate resource\n       if level is more than 17 it will request \n       'http://localhost/#'[bad request]\n       this situation make you have a high level tile image, then your\n       high level request don't have any tile image\n    */\n   ```\n   ```javascript\n    // \"esri/request\" => esriRequest\n    // \"esri/layers/BaseTileLayer\" => BaseTileLayer\n    const TDTLayer = BaseTileLayer.createSubclass({\n        properties: {\n            urlTemplate: null\n        },\n        getTileUrl: function(level, row, col) {\n            // you can define any request rule here\n            if (level < 17) {\n                return this.urlTemplate;\n            } else {\n                return 'http://localhost/#';\n            }\n        },\n        fetchTile: function(level, row, col) {\n            const url = this.getTileUrl(level, row, col);\n            return esriRequest(url, {\n                responseType: 'image',\n                allowImageDataAccess: true\n            }).then(\n                function(response) {\n                    const image = response.data;\n                    const width = this.tileInfo.size[0];\n                    const height = this.tileInfo.size[1];\n                    const canvas = document.createElement('canvas');\n                    const context = canvas.getContext('2d');\n                    canvas.width = width;\n                    canvas.height = height;\n                    context.drawImage(image, 0, 0, width, height);\n                    return canvas;\n                }.bind(this)\n            );\n        }\n    });\n    // Use like simple layer\n    const tdt_img = new TDTLayer({\n        urlTemplate: \"http://t0.tianditu.com/DataServer?T=vec_w&x={col}&y={row}&l={level}\",\n        id: \"img_layer\"\n    });\n    map.add(tdt_img);\n```\n\n\n# Query Task By Per Page\n\n> Usually query feature, just return 1000 features, if you want to get more,<br>\nyou should change server publish config. but it's not Geek!<br>\nso query it by per page is a good idea !<br>\nbecause arcgis js api query not support ,but server rest full api support!\n```javascript\nrequire([\n  \"esri/request\",\n  \"esri/Graphic\",\n  \"esri/geometry/SpatialReference\",\n  \"esri/tasks/support/Query\",\n  \"esri/tasks/QueryTask\",\n  \"esri/tasks/support/StatisticDefinition\"\n], function (esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition) {\n\n  const queryPageTool = {\n    /**\n     * 分页分批请求数据\n     * @param {*} query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields\n     * @param {*} queryTask \n     * @param {*} pageSize 每页请求的数量（一般不大于1000）\n     * @param {*} anyField 任意一个字段名\n     * @param {*} theadCount 每批请求的个数 \n     */\n    queryByPage: function (query, queryTask, pageSize, anyField, theadCount) {\n      const countStatistic = {\n        onStatisticField: anyField,\n        outStatisticFieldName: 'count',\n        statisticType: 'count'\n      };\n      const saveArr = [];\n      this.queryFeatures(query, queryTask, [countStatistic]).then((countRes) => {\n        if (!isNullOrUndefined(countRes.features) && Array.isArray(countRes.features) && countRes.features.length > 0) {\n          const recordCount = countRes.features[0].attributes.count;\n          console.log('count: ', recordCount);\n          this.queryRecycle(query, queryTask, pageSize, 0, recordCount, [], theadCount);\n        }\n      });\n    },\n    /**\n     * Convert query param to url property\n     * @param {*} query \n     * @param  pageSize 单页数量大小\n     * @param number firstRecordRid 该页第一条记录的序号\n     */\n    covertQueryToQueryObj: function (query, pageSize, firstRecordRid) {\n      const baseObj = {\n        f: 'json',\n        spatialRel: 'esriSpatialRelIntersects',\n        resultRecordCount: pageSize,\n        resultOffset: firstRecordRid\n      };\n      // 把where转过去\n      if (!isNullOrUndefined(query.where)) {\n        baseObj['where'] = query.where;\n      }\n\n      if (!isNullOrUndefined(query.returnGeometry)) {\n        baseObj['returnGeometry'] = query.returnGeometry;\n      }\n\n      // 输出坐标系\n      if (!isNullOrUndefined(query.outSpatialReference)) {\n        baseObj['outSR'] = query.outSpatialReference.wkid;\n      }\n\n      // Geometry 转换\n      if (!isNullOrUndefined(query.geometry)) {\n        baseObj['inSR'] = query.geometry.spatialReference.wkid;\n        if (query.geometry.type === 'extent') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryEnvelope';\n        }\n        if (query.geometry.type === 'polygon') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolygon';\n        }\n        if (query.geometry.type === 'polyline') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolyline';\n        }\n        if (query.geometry.type === 'point') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPoint';\n        }\n      }\n\n      // 返回字段处理\n      if (!isNullOrUndefined(query.outFields) && Array.isArray(query.outFields) && query.outFields.length > 0) {\n        baseObj['outFields'] = query.outFields.toString();\n      }\n\n      // 排序处理\n      if (!isNullOrUndefined(query.orderByFields) && Array.isArray(query.orderByFields)) {\n        // baseObj['orderByFields']\n        let t = '';\n        query.orderByFields.forEach((orderField) => {\n          const deal = orderField.trim().replace(/\\s+/g, ' '); // 前后去空格并去掉中间重复的空格\n          const splitArr = deal.split(' ');\n          if (splitArr.length === 1) {\n            if (t === '') {\n              t += splitArr[0];\n            } else {\n              t += '%2C' + splitArr[0];\n            }\n          } else if (splitArr.length === 2 && (splitArr[1] === 'DESC' || splitArr[1] === 'ASC')) {\n            if (t === '') {\n              t += deal;\n            } else {\n              t += `%2C${deal}`;\n            }\n          }\n        });\n        if (t !== '') {\n          baseObj['orderByFields'] = t;\n        }\n      }\n      return baseObj;\n    },\n    /**\n     * 将传入的feature信息转换成 Graphic\n     * @param object : feature 请求回来的Feature \n     * @param string: geometryType 图形类型\n     * @param spatialReference: sr 返回的空间参考对象\n     * @param Graphic: Graphic \n     * @param SpatialReference: SpatialReference class\n     */\n    convertFeatureToGraphic: function (feature, geometryType, sr, Graphic, SpatialReference) {\n      if (isNullOrUndefined(feature.geometry)) {\n        return feature;\n      }\n      const spatialReference = new SpatialReference(sr);\n      if (geometryType.toLowerCase().includes('polygon')) {\n        feature.geometry.type = 'polygon';\n      } else if (geometryType.toLowerCase().includes('polyline')) {\n        feature.geometry.type = 'polyline';\n      } else if (geometryType.toLowerCase().includes('point')) {\n        feature.geometry.type = 'point';\n      }\n      feature['spatialReference'] = spatialReference;\n      const g = new Graphic(feature);\n      return g;\n    },\n    /**\n     * 将查询对象转成字符串\n     * @param object: newQuery 查询对象\n     */\n    convertQueryToRequestString: function (newQuery) {\n      let body = '';\n      for (const prop in newQuery) {\n        if (!isNullOrUndefined(newQuery[prop])) {\n          body += (encodeURIComponent(prop) + '=' + encodeURIComponent(newQuery[prop])) + '&';\n        }\n      }\n      body = body.replace(/\\&$/g, '');\n      return body;\n    },\n    queryRecycle: function (query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount) {\n      if (features.length < recordCount) {\n        const promiseArr = [];\n        const max = firstRecordRid + theadCount * pageSize;\n        for (; firstRecordRid < max && firstRecordRid < recordCount; firstRecordRid += pageSize) {\n          promiseArr.push(this.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));\n        }\n        Promise.all(promiseArr).then((resArr) => {\n          resArr.forEach((subRes) => {\n            if (!isNullOrUndefined(subRes) && !isNullOrUndefined(subRes.features)) {\n              features = features.concat(subRes.features);\n            }\n          });\n          this.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);\n        }).catch((e) => {\n          console.error(e);\n          observer.error(e);\n        });\n      } else {\n          // output all record\n        console.log('all records： ', features);\n      }\n    },\n    queryFeatures: function (query, queryTask, constraints) {\n      const q = new Query(query);\n      const qt = new QueryTask(queryTask);\n      if (!isNullOrUndefined(constraints) && Array.isArray(constraints)) {\n        q.outStatistics = [];\n        constraints.forEach(item => {\n          const tempStatisticDefinition = new StatisticDefinition();\n          tempStatisticDefinition.statisticType = item.statisticType;\n          tempStatisticDefinition.onStatisticField = item.onStatisticField;\n          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;\n          q.outStatistics.push(tempStatisticDefinition);\n        });\n      }\n      return qt.execute(q);\n    },\n    queryFeaturesByPage: function (query, queryTask, pageSize, firstRecordRid) {\n      const newQuery = this.covertQueryToQueryObj(query, pageSize, firstRecordRid);\n      const body = this.convertQueryToRequestString(newQuery);\n      return esriRequest(`${queryTask.url}/query?${body}`).then((res) => {\n        if (!isNullOrUndefined(res.data) && !isNullOrUndefined(res.data.features) && Array.isArray(res.data.features)) {\n          res.data.features.forEach((feature, idx) => {\n            res.data.features[idx] = this.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);\n          });\n          return res.data;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n\n\n  // test\n  const query = {\n    where: \"1=1\",\n    outFields: ['*'],\n    returnGeometry: true\n  };\n  const queryTask = { url: 'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0' };\n  // every cycle will request 5 times, every time request 1000 features.\n  queryPageTool.queryByPage(query, queryTask, 1000, 'objectid', 5);\n});\nfunction isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n}\n```\n\n\n\n","slug":"ArcGIS-JS-API","published":1,"updated":"2019-03-01T16:59:54.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4l0002ynmp5z4lumur","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p>All of this is based on ArcGIS JS API 4.x</p>\n<h1><span id=\"custom-layer\">Custom Layer</span></h1>\n<h2><span id=\"custom-wmts-request\">Custom WMTS request</span></h2>\n<blockquote>\n<p>like just request level 17 map tile<br>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    Test by API 4.6</span></span><br><span class=\"line\"><span class=\"comment\">   when request level lower than 17, it will request urlTemplate resource</span></span><br><span class=\"line\"><span class=\"comment\">   if level is more than 17 it will request </span></span><br><span class=\"line\"><span class=\"comment\">   'http://localhost/#'[bad request]</span></span><br><span class=\"line\"><span class=\"comment\">   this situation make you have a high level tile image, then your</span></span><br><span class=\"line\"><span class=\"comment\">   high level request don't have any tile image</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \"esri/request\" =&gt; esriRequest</span></span><br><span class=\"line\"><span class=\"comment\">// \"esri/layers/BaseTileLayer\" =&gt; BaseTileLayer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TDTLayer = BaseTileLayer.createSubclass(&#123;</span><br><span class=\"line\">    properties: &#123;</span><br><span class=\"line\">        urlTemplate: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getTileUrl: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// you can define any request rule here</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (level &lt; <span class=\"number\">17</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.urlTemplate;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'http://localhost/#'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchTile: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.getTileUrl(level, row, col);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> esriRequest(url, &#123;</span><br><span class=\"line\">            responseType: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">            allowImageDataAccess: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> image = response.data;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> width = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> height = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> context = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">                canvas.width = width;</span><br><span class=\"line\">                canvas.height = height;</span><br><span class=\"line\">                context.drawImage(image, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> canvas;</span><br><span class=\"line\">            &#125;.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Use like simple layer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tdt_img = <span class=\"keyword\">new</span> TDTLayer(&#123;</span><br><span class=\"line\">    urlTemplate: <span class=\"string\">\"http://t0.tianditu.com/DataServer?T=vec_w&amp;x=&#123;col&#125;&amp;y=&#123;row&#125;&amp;l=&#123;level&#125;\"</span>,</span><br><span class=\"line\">    id: <span class=\"string\">\"img_layer\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">map.add(tdt_img);</span><br></pre></td></tr></table></figure>\n<h1><span id=\"query-task-by-per-page\">Query Task By Per Page</span></h1>\n<blockquote>\n<p>Usually query feature, just return 1000 features, if you want to get more,<br><br>\nyou should change server publish config. but it’s not Geek!<br><br>\nso query it by per page is a good idea !<br><br>\nbecause arcgis js api query not support ,but server rest full api support!</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>([</span><br><span class=\"line\">  <span class=\"string\">\"esri/request\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/Graphic\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/geometry/SpatialReference\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/Query\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/QueryTask\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/StatisticDefinition\"</span></span><br><span class=\"line\">], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryPageTool = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页分批请求数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>queryTask </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>pageSize 每页请求的数量（一般不大于1000）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>anyField 任意一个字段名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>theadCount 每批请求的个数 </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    queryByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, anyField, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> countStatistic = &#123;</span><br><span class=\"line\">        onStatisticField: anyField,</span><br><span class=\"line\">        outStatisticFieldName: <span class=\"string\">'count'</span>,</span><br><span class=\"line\">        statisticType: <span class=\"string\">'count'</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> saveArr = [];</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.queryFeatures(query, queryTask, [countStatistic]).then(<span class=\"function\">(<span class=\"params\">countRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(countRes.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(countRes.features) &amp;&amp; countRes.features.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> recordCount = countRes.features[<span class=\"number\">0</span>].attributes.count;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">'count: '</span>, recordCount);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, <span class=\"number\">0</span>, recordCount, [], theadCount);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Convert query param to url property</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>query </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param  </span>pageSize 单页数量大小</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>number firstRecordRid 该页第一条记录的序号</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    covertQueryToQueryObj: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> baseObj = &#123;</span><br><span class=\"line\">        f: <span class=\"string\">'json'</span>,</span><br><span class=\"line\">        spatialRel: <span class=\"string\">'esriSpatialRelIntersects'</span>,</span><br><span class=\"line\">        resultRecordCount: pageSize,</span><br><span class=\"line\">        resultOffset: firstRecordRid</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// 把where转过去</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.where)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'where'</span>] = query.where;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.returnGeometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'returnGeometry'</span>] = query.returnGeometry;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出坐标系</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outSpatialReference)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outSR'</span>] = query.outSpatialReference.wkid;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Geometry 转换</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.geometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'inSR'</span>] = query.geometry.spatialReference.wkid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'extent'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryEnvelope'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polygon'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolygon'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polyline'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolyline'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'point'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPoint'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 返回字段处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.outFields) &amp;&amp; query.outFields.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outFields'</span>] = query.outFields.toString();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 排序处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.orderByFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.orderByFields)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// baseObj['orderByFields']</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> t = <span class=\"string\">''</span>;</span><br><span class=\"line\">        query.orderByFields.forEach(<span class=\"function\">(<span class=\"params\">orderField</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> deal = orderField.trim().replace(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">' '</span>); <span class=\"comment\">// 前后去空格并去掉中间重复的空格</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> splitArr = deal.split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">'%2C'</span> + splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">2</span> &amp;&amp; (splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'DESC'</span> || splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'ASC'</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += deal;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">`%2C<span class=\"subst\">$&#123;deal&#125;</span>`</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'orderByFields'</span>] = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> baseObj;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将传入的feature信息转换成 Graphic</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>object : feature 请求回来的Feature </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>string: geometryType 图形类型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>spatialReference: sr 返回的空间参考对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>Graphic: Graphic </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>SpatialReference: SpatialReference class</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertFeatureToGraphic: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">feature, geometryType, sr, Graphic, SpatialReference</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isNullOrUndefined(feature.geometry)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> feature;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> spatialReference = <span class=\"keyword\">new</span> SpatialReference(sr);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polygon'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polygon'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polyline'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polyline'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'point'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'point'</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      feature[<span class=\"string\">'spatialReference'</span>] = spatialReference;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> g = <span class=\"keyword\">new</span> Graphic(feature);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将查询对象转成字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>object: newQuery 查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertQueryToRequestString: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newQuery</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> body = <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> prop <span class=\"keyword\">in</span> newQuery) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(newQuery[prop])) &#123;</span><br><span class=\"line\">          body += (<span class=\"built_in\">encodeURIComponent</span>(prop) + <span class=\"string\">'='</span> + <span class=\"built_in\">encodeURIComponent</span>(newQuery[prop])) + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      body = body.replace(<span class=\"regexp\">/\\&amp;$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> body;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryRecycle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (features.length &lt; recordCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> promiseArr = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = firstRecordRid + theadCount * pageSize;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; firstRecordRid &lt; max &amp;&amp; firstRecordRid &lt; recordCount; firstRecordRid += pageSize) &#123;</span><br><span class=\"line\">          promiseArr.push(<span class=\"keyword\">this</span>.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Promise</span>.all(promiseArr).then(<span class=\"function\">(<span class=\"params\">resArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resArr.forEach(<span class=\"function\">(<span class=\"params\">subRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!isNullOrUndefined(subRes) &amp;&amp; !isNullOrUndefined(subRes.features)) &#123;</span><br><span class=\"line\">              features = features.concat(subRes.features);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(e);</span><br><span class=\"line\">          observer.error(e);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// output all record</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'all records： '</span>, features);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeatures: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, constraints</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = <span class=\"keyword\">new</span> Query(query);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> qt = <span class=\"keyword\">new</span> QueryTask(queryTask);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(constraints) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(constraints)) &#123;</span><br><span class=\"line\">        q.outStatistics = [];</span><br><span class=\"line\">        constraints.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> tempStatisticDefinition = <span class=\"keyword\">new</span> StatisticDefinition();</span><br><span class=\"line\">          tempStatisticDefinition.statisticType = item.statisticType;</span><br><span class=\"line\">          tempStatisticDefinition.onStatisticField = item.onStatisticField;</span><br><span class=\"line\">          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;</span><br><span class=\"line\">          q.outStatistics.push(tempStatisticDefinition);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> qt.execute(q);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeaturesByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> newQuery = <span class=\"keyword\">this</span>.covertQueryToQueryObj(query, pageSize, firstRecordRid);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> body = <span class=\"keyword\">this</span>.convertQueryToRequestString(newQuery);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> esriRequest(<span class=\"string\">`<span class=\"subst\">$&#123;queryTask.url&#125;</span>/query?<span class=\"subst\">$&#123;body&#125;</span>`</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(res.data) &amp;&amp; !isNullOrUndefined(res.data.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(res.data.features)) &#123;</span><br><span class=\"line\">          res.data.features.forEach(<span class=\"function\">(<span class=\"params\">feature, idx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            res.data.features[idx] = <span class=\"keyword\">this</span>.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res.data;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// test</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = &#123;</span><br><span class=\"line\">    where: <span class=\"string\">\"1=1\"</span>,</span><br><span class=\"line\">    outFields: [<span class=\"string\">'*'</span>],</span><br><span class=\"line\">    returnGeometry: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryTask = &#123; <span class=\"attr\">url</span>: <span class=\"string\">'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0'</span> &#125;;</span><br><span class=\"line\">  <span class=\"comment\">// every cycle will request 5 times, every time request 1000 features.</span></span><br><span class=\"line\">  queryPageTool.queryByPage(query, queryTask, <span class=\"number\">1000</span>, <span class=\"string\">'objectid'</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNullOrUndefined</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj === <span class=\"literal\">undefined</span> || obj === <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>All of this is based on ArcGIS JS API 4.x</p>\n<h1>Custom Layer</h1>\n<h2>Custom WMTS request</h2>\n<blockquote>\n<p>like just request level 17 map tile<br>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    Test by API 4.6</span></span><br><span class=\"line\"><span class=\"comment\">   when request level lower than 17, it will request urlTemplate resource</span></span><br><span class=\"line\"><span class=\"comment\">   if level is more than 17 it will request </span></span><br><span class=\"line\"><span class=\"comment\">   'http://localhost/#'[bad request]</span></span><br><span class=\"line\"><span class=\"comment\">   this situation make you have a high level tile image, then your</span></span><br><span class=\"line\"><span class=\"comment\">   high level request don't have any tile image</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \"esri/request\" =&gt; esriRequest</span></span><br><span class=\"line\"><span class=\"comment\">// \"esri/layers/BaseTileLayer\" =&gt; BaseTileLayer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TDTLayer = BaseTileLayer.createSubclass(&#123;</span><br><span class=\"line\">    properties: &#123;</span><br><span class=\"line\">        urlTemplate: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getTileUrl: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// you can define any request rule here</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (level &lt; <span class=\"number\">17</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.urlTemplate;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'http://localhost/#'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchTile: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.getTileUrl(level, row, col);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> esriRequest(url, &#123;</span><br><span class=\"line\">            responseType: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">            allowImageDataAccess: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> image = response.data;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> width = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> height = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> context = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">                canvas.width = width;</span><br><span class=\"line\">                canvas.height = height;</span><br><span class=\"line\">                context.drawImage(image, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> canvas;</span><br><span class=\"line\">            &#125;.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Use like simple layer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tdt_img = <span class=\"keyword\">new</span> TDTLayer(&#123;</span><br><span class=\"line\">    urlTemplate: <span class=\"string\">\"http://t0.tianditu.com/DataServer?T=vec_w&amp;x=&#123;col&#125;&amp;y=&#123;row&#125;&amp;l=&#123;level&#125;\"</span>,</span><br><span class=\"line\">    id: <span class=\"string\">\"img_layer\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">map.add(tdt_img);</span><br></pre></td></tr></table></figure>\n<h1>Query Task By Per Page</h1>\n<blockquote>\n<p>Usually query feature, just return 1000 features, if you want to get more,<br><br>\nyou should change server publish config. but it’s not Geek!<br><br>\nso query it by per page is a good idea !<br><br>\nbecause arcgis js api query not support ,but server rest full api support!</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>([</span><br><span class=\"line\">  <span class=\"string\">\"esri/request\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/Graphic\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/geometry/SpatialReference\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/Query\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/QueryTask\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/StatisticDefinition\"</span></span><br><span class=\"line\">], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryPageTool = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页分批请求数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>queryTask </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>pageSize 每页请求的数量（一般不大于1000）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>anyField 任意一个字段名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>theadCount 每批请求的个数 </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    queryByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, anyField, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> countStatistic = &#123;</span><br><span class=\"line\">        onStatisticField: anyField,</span><br><span class=\"line\">        outStatisticFieldName: <span class=\"string\">'count'</span>,</span><br><span class=\"line\">        statisticType: <span class=\"string\">'count'</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> saveArr = [];</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.queryFeatures(query, queryTask, [countStatistic]).then(<span class=\"function\">(<span class=\"params\">countRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(countRes.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(countRes.features) &amp;&amp; countRes.features.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> recordCount = countRes.features[<span class=\"number\">0</span>].attributes.count;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">'count: '</span>, recordCount);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, <span class=\"number\">0</span>, recordCount, [], theadCount);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Convert query param to url property</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param <span class=\"type\">&#123;*&#125;</span> </span>query </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param  </span>pageSize 单页数量大小</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>number firstRecordRid 该页第一条记录的序号</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    covertQueryToQueryObj: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> baseObj = &#123;</span><br><span class=\"line\">        f: <span class=\"string\">'json'</span>,</span><br><span class=\"line\">        spatialRel: <span class=\"string\">'esriSpatialRelIntersects'</span>,</span><br><span class=\"line\">        resultRecordCount: pageSize,</span><br><span class=\"line\">        resultOffset: firstRecordRid</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// 把where转过去</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.where)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'where'</span>] = query.where;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.returnGeometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'returnGeometry'</span>] = query.returnGeometry;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出坐标系</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outSpatialReference)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outSR'</span>] = query.outSpatialReference.wkid;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Geometry 转换</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.geometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'inSR'</span>] = query.geometry.spatialReference.wkid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'extent'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryEnvelope'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polygon'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolygon'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polyline'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolyline'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'point'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPoint'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 返回字段处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.outFields) &amp;&amp; query.outFields.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outFields'</span>] = query.outFields.toString();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 排序处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.orderByFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.orderByFields)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// baseObj['orderByFields']</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> t = <span class=\"string\">''</span>;</span><br><span class=\"line\">        query.orderByFields.forEach(<span class=\"function\">(<span class=\"params\">orderField</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> deal = orderField.trim().replace(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">' '</span>); <span class=\"comment\">// 前后去空格并去掉中间重复的空格</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> splitArr = deal.split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">'%2C'</span> + splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">2</span> &amp;&amp; (splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'DESC'</span> || splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'ASC'</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += deal;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">`%2C<span class=\"subst\">$&#123;deal&#125;</span>`</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'orderByFields'</span>] = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> baseObj;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将传入的feature信息转换成 Graphic</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>object : feature 请求回来的Feature </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>string: geometryType 图形类型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>spatialReference: sr 返回的空间参考对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>Graphic: Graphic </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>SpatialReference: SpatialReference class</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertFeatureToGraphic: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">feature, geometryType, sr, Graphic, SpatialReference</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isNullOrUndefined(feature.geometry)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> feature;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> spatialReference = <span class=\"keyword\">new</span> SpatialReference(sr);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polygon'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polygon'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polyline'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polyline'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'point'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'point'</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      feature[<span class=\"string\">'spatialReference'</span>] = spatialReference;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> g = <span class=\"keyword\">new</span> Graphic(feature);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将查询对象转成字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param </span>object: newQuery 查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertQueryToRequestString: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newQuery</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> body = <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> prop <span class=\"keyword\">in</span> newQuery) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(newQuery[prop])) &#123;</span><br><span class=\"line\">          body += (<span class=\"built_in\">encodeURIComponent</span>(prop) + <span class=\"string\">'='</span> + <span class=\"built_in\">encodeURIComponent</span>(newQuery[prop])) + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      body = body.replace(<span class=\"regexp\">/\\&amp;$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> body;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryRecycle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (features.length &lt; recordCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> promiseArr = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = firstRecordRid + theadCount * pageSize;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; firstRecordRid &lt; max &amp;&amp; firstRecordRid &lt; recordCount; firstRecordRid += pageSize) &#123;</span><br><span class=\"line\">          promiseArr.push(<span class=\"keyword\">this</span>.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Promise</span>.all(promiseArr).then(<span class=\"function\">(<span class=\"params\">resArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resArr.forEach(<span class=\"function\">(<span class=\"params\">subRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!isNullOrUndefined(subRes) &amp;&amp; !isNullOrUndefined(subRes.features)) &#123;</span><br><span class=\"line\">              features = features.concat(subRes.features);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(e);</span><br><span class=\"line\">          observer.error(e);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// output all record</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'all records： '</span>, features);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeatures: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, constraints</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = <span class=\"keyword\">new</span> Query(query);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> qt = <span class=\"keyword\">new</span> QueryTask(queryTask);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(constraints) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(constraints)) &#123;</span><br><span class=\"line\">        q.outStatistics = [];</span><br><span class=\"line\">        constraints.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> tempStatisticDefinition = <span class=\"keyword\">new</span> StatisticDefinition();</span><br><span class=\"line\">          tempStatisticDefinition.statisticType = item.statisticType;</span><br><span class=\"line\">          tempStatisticDefinition.onStatisticField = item.onStatisticField;</span><br><span class=\"line\">          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;</span><br><span class=\"line\">          q.outStatistics.push(tempStatisticDefinition);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> qt.execute(q);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeaturesByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> newQuery = <span class=\"keyword\">this</span>.covertQueryToQueryObj(query, pageSize, firstRecordRid);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> body = <span class=\"keyword\">this</span>.convertQueryToRequestString(newQuery);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> esriRequest(<span class=\"string\">`<span class=\"subst\">$&#123;queryTask.url&#125;</span>/query?<span class=\"subst\">$&#123;body&#125;</span>`</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(res.data) &amp;&amp; !isNullOrUndefined(res.data.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(res.data.features)) &#123;</span><br><span class=\"line\">          res.data.features.forEach(<span class=\"function\">(<span class=\"params\">feature, idx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            res.data.features[idx] = <span class=\"keyword\">this</span>.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res.data;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// test</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = &#123;</span><br><span class=\"line\">    where: <span class=\"string\">\"1=1\"</span>,</span><br><span class=\"line\">    outFields: [<span class=\"string\">'*'</span>],</span><br><span class=\"line\">    returnGeometry: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryTask = &#123; <span class=\"attr\">url</span>: <span class=\"string\">'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0'</span> &#125;;</span><br><span class=\"line\">  <span class=\"comment\">// every cycle will request 5 times, every time request 1000 features.</span></span><br><span class=\"line\">  queryPageTool.queryByPage(query, queryTask, <span class=\"number\">1000</span>, <span class=\"string\">'objectid'</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNullOrUndefined</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj === <span class=\"literal\">undefined</span> || obj === <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Arcgis Server Mensuration 3D Publish","catalog":true,"date":"2020-07-05T08:53:52.000Z","subtitle":"Public Image Server which support Mensuration 3D","header-img":null,"catagories":["ArcGIS, ArcGISServer"],"_content":"\n# Before Publish\n\n* you will download the DEM data.\n\n# Publish\n\n1. right click your dem data.  select \"Share As Image Service\"\n\n2. then next window \"Publish a service\"\n\n3. then next window, select one server site connection, and input the service name.\n\n4. then next window ,select your folder or create one.\n\n5. then next window. this is a setting page. on the left menu, find \"Parameters => Mensuration\".\n    >you will see a \"Elevation Source\" input bar.<br>\n    >A. if your server is installed on the Windows System, open \"Elevation Source\", select the dem data.<br>\n    >B. if your server is installed on the Linux System, before now, you will publish a DEM server.(then now open \"Elevation Source\", select published DEM server).\n\n6. click  \"Publish\" on the right top position.\n\n7. after publish success. open you server url.\n\n8. find \"Mensuration Capabilities\" option, if it's show \"Basic,3D\"， mean publish is ok.\n\n## How to Mensuration 3d.\n\n* open the rest api for found.\n","source":"_posts/Arcgis-Server-Mensuration-3D-Publish.md","raw":"---\ntitle: Arcgis Server Mensuration 3D Publish\ncatalog: true\ndate: 2020-07-05 16:53:52\nsubtitle: Public Image Server which support Mensuration 3D\nheader-img:\ntags:\n- ArcGIS\ncatagories:\n- ArcGIS, ArcGISServer\n---\n\n# Before Publish\n\n* you will download the DEM data.\n\n# Publish\n\n1. right click your dem data.  select \"Share As Image Service\"\n\n2. then next window \"Publish a service\"\n\n3. then next window, select one server site connection, and input the service name.\n\n4. then next window ,select your folder or create one.\n\n5. then next window. this is a setting page. on the left menu, find \"Parameters => Mensuration\".\n    >you will see a \"Elevation Source\" input bar.<br>\n    >A. if your server is installed on the Windows System, open \"Elevation Source\", select the dem data.<br>\n    >B. if your server is installed on the Linux System, before now, you will publish a DEM server.(then now open \"Elevation Source\", select published DEM server).\n\n6. click  \"Publish\" on the right top position.\n\n7. after publish success. open you server url.\n\n8. find \"Mensuration Capabilities\" option, if it's show \"Basic,3D\"， mean publish is ok.\n\n## How to Mensuration 3d.\n\n* open the rest api for found.\n","slug":"Arcgis-Server-Mensuration-3D-Publish","published":1,"updated":"2020-07-05T09:09:17.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4o0004ynmpj02zudfr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"before-publish\">Before Publish</span></h1>\n<ul>\n<li>you will download the DEM data.</li>\n</ul>\n<h1><span id=\"publish\">Publish</span></h1>\n<ol>\n<li>\n<p>right click your dem data.  select “Share As Image Service”</p>\n</li>\n<li>\n<p>then next window “Publish a service”</p>\n</li>\n<li>\n<p>then next window, select one server site connection, and input the service name.</p>\n</li>\n<li>\n<p>then next window ,select your folder or create one.</p>\n</li>\n<li>\n<p>then next window. this is a setting page. on the left menu, find “Parameters =&gt; Mensuration”.</p>\n<blockquote>\n<p>you will see a “Elevation Source” input bar.<br><br>\nA. if your server is installed on the Windows System, open “Elevation Source”, select the dem data.<br><br>\nB. if your server is installed on the Linux System, before now, you will publish a DEM server.(then now open “Elevation Source”, select published DEM server).</p>\n</blockquote>\n</li>\n<li>\n<p>click  “Publish” on the right top position.</p>\n</li>\n<li>\n<p>after publish success. open you server url.</p>\n</li>\n<li>\n<p>find “Mensuration Capabilities” option, if it’s show “Basic,3D”， mean publish is ok.</p>\n</li>\n</ol>\n<h2><span id=\"how-to-mensuration-3d\">How to Mensuration 3d.</span></h2>\n<ul>\n<li>open the rest api for found.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>Before Publish</h1>\n<ul>\n<li>you will download the DEM data.</li>\n</ul>\n<h1>Publish</h1>\n<ol>\n<li>\n<p>right click your dem data.  select “Share As Image Service”</p>\n</li>\n<li>\n<p>then next window “Publish a service”</p>\n</li>\n<li>\n<p>then next window, select one server site connection, and input the service name.</p>\n</li>\n<li>\n<p>then next window ,select your folder or create one.</p>\n</li>\n<li>\n<p>then next window. this is a setting page. on the left menu, find “Parameters =&gt; Mensuration”.</p>\n<blockquote>\n<p>you will see a “Elevation Source” input bar.<br><br>\nA. if your server is installed on the Windows System, open “Elevation Source”, select the dem data.<br><br>\nB. if your server is installed on the Linux System, before now, you will publish a DEM server.(then now open “Elevation Source”, select published DEM server).</p>\n</blockquote>\n</li>\n<li>\n<p>click  “Publish” on the right top position.</p>\n</li>\n<li>\n<p>after publish success. open you server url.</p>\n</li>\n<li>\n<p>find “Mensuration Capabilities” option, if it’s show “Basic,3D”， mean publish is ok.</p>\n</li>\n</ol>\n<h2>How to Mensuration 3d.</h2>\n<ul>\n<li>open the rest api for found.</li>\n</ul>\n"},{"title":"Basic Of Nginx","catalog":true,"date":"2019-04-23T12:53:12.000Z","subtitle":null,"header-img":null,"catagories":["Network,Linux"],"_content":"\n# Install\n* open the [Download Page](http://nginx.org/en/download.html)\n* Download last Stable version.\n* unzip file and open dir. (Like  nginx-1.14.2 )\n* set configure for it. \n```bash\n# after compile, nginx will install on this dir\n ./configure --prefix=/etc/nginx\n ```\n * compile\n ```bash\n sudo make && make install\n ```\n * open dir '/etc/nginx/sbin', run nginx by command\n ```bash\n ./nginx\n ```\n * open [localhost](http://localhost), nginx will show .\n\n # Use Nginx Build a Resource site.\n * use config like flow\n ```bash\n server {\n\tlisten 80;\n\tindex index.html index.htm;\n\tlocation / {\n\t\troot /home/resource;\n        autoindex   on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n\t}\n}\n ```\n * save and reload config file\n ```bash\n sudo nginx -s reload\n ```\n * open [localhost](http://localhost), a resource site will show.\n > if you want to build a nice site by some css. look flow.\n ## build a beautiful resource site.(Here use ngx-fancyindex module)\n * [Download](https://github.com/aperezdc/ngx-fancyindex) ngx-fancyindex module\n * unzip ngx-fancyindex on your nginx dir.then, your dir tree will like this\n ```\n├── auto\n├── CHANGES\n├── CHANGES.ru\n├── conf\n├── configure\n├── contrib\n├── html\n├── LICENSE\n├── Makefile\n├── man\n├── ngx-fancyindex\n├── objs\n├── README\n└── src\n ```\n * set configure, add ngx-fancyindex module\n ```bash\n ./configure --prefix=/home/nginx --add-module=./ngx-fancyindex-master\n ```\n * compiler\n ```\n sudo make && make install\n ```\n* set config file\n```bash\nserver {\n\tlisten 8073;\n\tindex index.html index.htm;\n\tlocation / {\n\t\troot /home/resource;\n\t        if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|png|jpg|mp3|mp4|xz|json|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n        \t    add_header Content-Disposition attachment;\n        \t}\n\t\tfancyindex on;\n\t\tfancyindex_exact_size off;\n\t\tfancyindex_localtime on;\n\n\t\tfancyindex_header \"/theme/header.html\";\n\t\tfancyindex_footer \"/theme/footer.html\";\n\t\tfancyindex_ignore \"theme\";\n\t\tfancyindex_name_length 255;\n\t}\n}\n```\n* download style file [here](/download/theme.zip), unzip for on config root dir. (there is /home/resource),file tree will like this.\n```\n.\n└── theme\n```\n* run nginx ,you will see a nice html for your resource site.\n![avator](/img/resource-site.png)\n","source":"_posts/Basic-Of-Nginx.md","raw":"---\ntitle: Basic Of Nginx\ncatalog: true\ndate: 2019-04-23 20:53:12\nsubtitle:\nheader-img:\ntags:\n- Network,Linux\ncatagories:\n- Network,Linux\n---\n\n# Install\n* open the [Download Page](http://nginx.org/en/download.html)\n* Download last Stable version.\n* unzip file and open dir. (Like  nginx-1.14.2 )\n* set configure for it. \n```bash\n# after compile, nginx will install on this dir\n ./configure --prefix=/etc/nginx\n ```\n * compile\n ```bash\n sudo make && make install\n ```\n * open dir '/etc/nginx/sbin', run nginx by command\n ```bash\n ./nginx\n ```\n * open [localhost](http://localhost), nginx will show .\n\n # Use Nginx Build a Resource site.\n * use config like flow\n ```bash\n server {\n\tlisten 80;\n\tindex index.html index.htm;\n\tlocation / {\n\t\troot /home/resource;\n        autoindex   on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n\t}\n}\n ```\n * save and reload config file\n ```bash\n sudo nginx -s reload\n ```\n * open [localhost](http://localhost), a resource site will show.\n > if you want to build a nice site by some css. look flow.\n ## build a beautiful resource site.(Here use ngx-fancyindex module)\n * [Download](https://github.com/aperezdc/ngx-fancyindex) ngx-fancyindex module\n * unzip ngx-fancyindex on your nginx dir.then, your dir tree will like this\n ```\n├── auto\n├── CHANGES\n├── CHANGES.ru\n├── conf\n├── configure\n├── contrib\n├── html\n├── LICENSE\n├── Makefile\n├── man\n├── ngx-fancyindex\n├── objs\n├── README\n└── src\n ```\n * set configure, add ngx-fancyindex module\n ```bash\n ./configure --prefix=/home/nginx --add-module=./ngx-fancyindex-master\n ```\n * compiler\n ```\n sudo make && make install\n ```\n* set config file\n```bash\nserver {\n\tlisten 8073;\n\tindex index.html index.htm;\n\tlocation / {\n\t\troot /home/resource;\n\t        if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|png|jpg|mp3|mp4|xz|json|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n        \t    add_header Content-Disposition attachment;\n        \t}\n\t\tfancyindex on;\n\t\tfancyindex_exact_size off;\n\t\tfancyindex_localtime on;\n\n\t\tfancyindex_header \"/theme/header.html\";\n\t\tfancyindex_footer \"/theme/footer.html\";\n\t\tfancyindex_ignore \"theme\";\n\t\tfancyindex_name_length 255;\n\t}\n}\n```\n* download style file [here](/download/theme.zip), unzip for on config root dir. (there is /home/resource),file tree will like this.\n```\n.\n└── theme\n```\n* run nginx ,you will see a nice html for your resource site.\n![avator](/img/resource-site.png)\n","slug":"Basic-Of-Nginx","published":1,"updated":"2019-04-23T14:27:31.731Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4p0005ynmptvqs5d6s","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"install\">Install</span></h1>\n<ul>\n<li>open the <a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">Download Page</a></li>\n<li>Download last Stable version.</li>\n<li>unzip file and open dir. (Like  nginx-1.14.2 )</li>\n<li>set configure for it.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># after compile, nginx will install on this dir</span></span><br><span class=\"line\"> ./configure --prefix=/etc/nginx</span><br></pre></td></tr></table></figure>\n<ul>\n<li>compile</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open dir ‘/etc/nginx/sbin’, run nginx by command</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">localhost</a>, nginx will show .</li>\n</ul>\n<h1><span id=\"use-nginx-build-a-resource-site\">Use Nginx Build a Resource site.</span></h1>\n<ul>\n<li>use config like flow</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> server &#123;</span><br><span class=\"line\">\tlisten 80;</span><br><span class=\"line\">\tindex index.html index.htm;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\troot /home/resource;</span><br><span class=\"line\">        autoindex   on;</span><br><span class=\"line\">        autoindex_exact_size off;</span><br><span class=\"line\">        autoindex_localtime on;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>save and reload config file</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx -s reload</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">localhost</a>, a resource site will show.</li>\n</ul>\n<blockquote>\n<p>if you want to build a nice site by some css. look flow.</p>\n</blockquote>\n<h2><span id=\"build-a-beautiful-resource-sitehere-use-ngx-fancyindex-module\">build a beautiful resource site.(Here use ngx-fancyindex module)</span></h2>\n<ul>\n<li><a href=\"https://github.com/aperezdc/ngx-fancyindex\" target=\"_blank\" rel=\"noopener\">Download</a> ngx-fancyindex module</li>\n<li>unzip ngx-fancyindex on your nginx dir.then, your dir tree will like this</li>\n</ul>\n <figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── auto</span><br><span class=\"line\">├── CHANGES</span><br><span class=\"line\">├── CHANGES.<span class=\"keyword\">ru</span></span><br><span class=\"line\">├── <span class=\"keyword\">conf</span></span><br><span class=\"line\">├── configure</span><br><span class=\"line\">├── contrib</span><br><span class=\"line\">├── html</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── <span class=\"keyword\">man</span></span><br><span class=\"line\">├── ngx-fancyindex</span><br><span class=\"line\">├── objs</span><br><span class=\"line\">├── README</span><br><span class=\"line\">└── src</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set configure, add ngx-fancyindex module</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/home/nginx --add-module=./ngx-fancyindex-master</span><br></pre></td></tr></table></figure>\n<ul>\n<li>compiler</li>\n</ul>\n <figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">make</span> &amp;&amp; <span class=\"built_in\">make</span> install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set config file</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten 8073;</span><br><span class=\"line\">\tindex index.html index.htm;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\troot /home/resource;</span><br><span class=\"line\">\t        <span class=\"keyword\">if</span> (<span class=\"variable\">$request_filename</span> ~* ^.*?\\.(txt|doc|pdf|rar|png|jpg|mp3|mp4|xz|json|gz|zip|docx|exe|xlsx|ppt|pptx)$)&#123;</span><br><span class=\"line\">        \t    add_header Content-Disposition attachment;</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">\t\tfancyindex on;</span><br><span class=\"line\">\t\tfancyindex_exact_size off;</span><br><span class=\"line\">\t\tfancyindex_localtime on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfancyindex_header <span class=\"string\">\"/theme/header.html\"</span>;</span><br><span class=\"line\">\t\tfancyindex_footer <span class=\"string\">\"/theme/footer.html\"</span>;</span><br><span class=\"line\">\t\tfancyindex_ignore <span class=\"string\">\"theme\"</span>;</span><br><span class=\"line\">\t\tfancyindex_name_length 255;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>download style file <a href=\"/download/theme.zip\">here</a>, unzip for on config root dir. (there is /home/resource),file tree will like this.</li>\n</ul>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">└── theme</span><br></pre></td></tr></table></figure>\n<ul>\n<li>run nginx ,you will see a nice html for your resource site.<br>\n<img src=\"/img/resource-site.png\" alt=\"avator\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>Install</h1>\n<ul>\n<li>open the <a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">Download Page</a></li>\n<li>Download last Stable version.</li>\n<li>unzip file and open dir. (Like  nginx-1.14.2 )</li>\n<li>set configure for it.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># after compile, nginx will install on this dir</span></span><br><span class=\"line\"> ./configure --prefix=/etc/nginx</span><br></pre></td></tr></table></figure>\n<ul>\n<li>compile</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open dir ‘/etc/nginx/sbin’, run nginx by command</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">localhost</a>, nginx will show .</li>\n</ul>\n<h1>Use Nginx Build a Resource site.</h1>\n<ul>\n<li>use config like flow</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> server &#123;</span><br><span class=\"line\">\tlisten 80;</span><br><span class=\"line\">\tindex index.html index.htm;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\troot /home/resource;</span><br><span class=\"line\">        autoindex   on;</span><br><span class=\"line\">        autoindex_exact_size off;</span><br><span class=\"line\">        autoindex_localtime on;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>save and reload config file</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx -s reload</span><br></pre></td></tr></table></figure>\n<ul>\n<li>open <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">localhost</a>, a resource site will show.</li>\n</ul>\n<blockquote>\n<p>if you want to build a nice site by some css. look flow.</p>\n</blockquote>\n<h2>build a beautiful resource site.(Here use ngx-fancyindex module)</h2>\n<ul>\n<li><a href=\"https://github.com/aperezdc/ngx-fancyindex\" target=\"_blank\" rel=\"noopener\">Download</a> ngx-fancyindex module</li>\n<li>unzip ngx-fancyindex on your nginx dir.then, your dir tree will like this</li>\n</ul>\n <figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── auto</span><br><span class=\"line\">├── CHANGES</span><br><span class=\"line\">├── CHANGES.<span class=\"keyword\">ru</span></span><br><span class=\"line\">├── <span class=\"keyword\">conf</span></span><br><span class=\"line\">├── configure</span><br><span class=\"line\">├── contrib</span><br><span class=\"line\">├── html</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── <span class=\"keyword\">man</span></span><br><span class=\"line\">├── ngx-fancyindex</span><br><span class=\"line\">├── objs</span><br><span class=\"line\">├── README</span><br><span class=\"line\">└── src</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set configure, add ngx-fancyindex module</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/home/nginx --add-module=./ngx-fancyindex-master</span><br></pre></td></tr></table></figure>\n<ul>\n<li>compiler</li>\n</ul>\n <figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">make</span> &amp;&amp; <span class=\"built_in\">make</span> install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set config file</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten 8073;</span><br><span class=\"line\">\tindex index.html index.htm;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\troot /home/resource;</span><br><span class=\"line\">\t        <span class=\"keyword\">if</span> (<span class=\"variable\">$request_filename</span> ~* ^.*?\\.(txt|doc|pdf|rar|png|jpg|mp3|mp4|xz|json|gz|zip|docx|exe|xlsx|ppt|pptx)$)&#123;</span><br><span class=\"line\">        \t    add_header Content-Disposition attachment;</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">\t\tfancyindex on;</span><br><span class=\"line\">\t\tfancyindex_exact_size off;</span><br><span class=\"line\">\t\tfancyindex_localtime on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfancyindex_header <span class=\"string\">\"/theme/header.html\"</span>;</span><br><span class=\"line\">\t\tfancyindex_footer <span class=\"string\">\"/theme/footer.html\"</span>;</span><br><span class=\"line\">\t\tfancyindex_ignore <span class=\"string\">\"theme\"</span>;</span><br><span class=\"line\">\t\tfancyindex_name_length 255;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>download style file <a href=\"/download/theme.zip\">here</a>, unzip for on config root dir. (there is /home/resource),file tree will like this.</li>\n</ul>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">└── theme</span><br></pre></td></tr></table></figure>\n<ul>\n<li>run nginx ,you will see a nice html for your resource site.<br>\n<img src=\"/img/resource-site.png\" alt=\"avator\"></li>\n</ul>\n"},{"title":"Build ubuntu boot usb By Mac","catalog":true,"date":"2020-02-20T14:47:42.000Z","subtitle":null,"header-img":null,"catagories":["Mac"],"_content":"\n> How to build a ubuntu boot use by your mac os.\n\n# convert.\n* convert *.iso file to mac use file.\n\n```bash\nhdiutil convert -format UDRW -o ubuntu-18.04.iso ubuntu-18.04.4-desktop-amd64.iso\n```\n\n* after that. on your dir ,you will find a file called \"ubuntu-18.04.iso.dmg\",\n\n* then rename it.\n\n```bash\nmv ubuntu-18.04.iso.dmg ubuntu-18.04.iso\n```\n\n# unmount your usb device\n\n* first use this command ,fand your usb device.\n\n```bash\ndiskutil list\n```\n\n* you will find your disk path. like \"/dev/disk3\"\n\n* unmount it.\n```bash\ndiskutil unmountDisk /dev/disk3\n```\n\n# dd \n* build boot usb!\n\n```bash\nsudo dd if=./ubuntu-18.04.iso of=/dev/disk3 bs=1m\n```\n\n* it will for several minutes\n\n* after command success.  means built success !","source":"_posts/Build-ubuntu-boot-usb-By-Mac.md","raw":"---\ntitle: Build ubuntu boot usb By Mac\ncatalog: true\ndate: 2020-02-20 22:47:42\nsubtitle:\nheader-img:\ntags:\n- Mac\ncatagories:\n- Mac\n---\n\n> How to build a ubuntu boot use by your mac os.\n\n# convert.\n* convert *.iso file to mac use file.\n\n```bash\nhdiutil convert -format UDRW -o ubuntu-18.04.iso ubuntu-18.04.4-desktop-amd64.iso\n```\n\n* after that. on your dir ,you will find a file called \"ubuntu-18.04.iso.dmg\",\n\n* then rename it.\n\n```bash\nmv ubuntu-18.04.iso.dmg ubuntu-18.04.iso\n```\n\n# unmount your usb device\n\n* first use this command ,fand your usb device.\n\n```bash\ndiskutil list\n```\n\n* you will find your disk path. like \"/dev/disk3\"\n\n* unmount it.\n```bash\ndiskutil unmountDisk /dev/disk3\n```\n\n# dd \n* build boot usb!\n\n```bash\nsudo dd if=./ubuntu-18.04.iso of=/dev/disk3 bs=1m\n```\n\n* it will for several minutes\n\n* after command success.  means built success !","slug":"Build-ubuntu-boot-usb-By-Mac","published":1,"updated":"2020-02-20T15:00:08.132Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4q0006ynmpmbuu6rka","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>How to build a ubuntu boot use by your mac os.</p>\n</blockquote>\n<h1><span id=\"convert\">convert.</span></h1>\n<ul>\n<li>convert *.iso file to mac use file.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hdiutil convert -format UDRW -o ubuntu-18.04.iso ubuntu-18.04.4-desktop-amd64.iso</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>after that. on your dir ,you will find a file called “ubuntu-18.04.iso.dmg”,</p>\n</li>\n<li>\n<p>then rename it.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv ubuntu-18.04.iso.dmg ubuntu-18.04.iso</span><br></pre></td></tr></table></figure>\n<h1><span id=\"unmount-your-usb-device\">unmount your usb device</span></h1>\n<ul>\n<li>first use this command ,fand your usb device.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil list</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>you will find your disk path. like “/dev/disk3”</p>\n</li>\n<li>\n<p>unmount it.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil unmountDisk /dev/disk3</span><br></pre></td></tr></table></figure>\n<h1><span id=\"dd\">dd</span></h1>\n<ul>\n<li>build boot usb!</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=./ubuntu-18.04.iso of=/dev/disk3 bs=1m</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>it will for several minutes</p>\n</li>\n<li>\n<p>after command success.  means built success !</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>How to build a ubuntu boot use by your mac os.</p>\n</blockquote>\n<h1>convert.</h1>\n<ul>\n<li>convert *.iso file to mac use file.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hdiutil convert -format UDRW -o ubuntu-18.04.iso ubuntu-18.04.4-desktop-amd64.iso</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>after that. on your dir ,you will find a file called “ubuntu-18.04.iso.dmg”,</p>\n</li>\n<li>\n<p>then rename it.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv ubuntu-18.04.iso.dmg ubuntu-18.04.iso</span><br></pre></td></tr></table></figure>\n<h1>unmount your usb device</h1>\n<ul>\n<li>first use this command ,fand your usb device.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil list</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>you will find your disk path. like “/dev/disk3”</p>\n</li>\n<li>\n<p>unmount it.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil unmountDisk /dev/disk3</span><br></pre></td></tr></table></figure>\n<h1>dd</h1>\n<ul>\n<li>build boot usb!</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=./ubuntu-18.04.iso of=/dev/disk3 bs=1m</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>it will for several minutes</p>\n</li>\n<li>\n<p>after command success.  means built success !</p>\n</li>\n</ul>\n"},{"title":"Init this site","catalog":true,"date":"2018-04-05T17:34:00.000Z","subtitle":"初始化！","header-img":"site-init.png","_content":"> 建站日，标记下...\n","source":"_posts/Init-this-site.md","raw":"---\ntitle: Init this site\ncatalog: true\ndate: 2018-04-06 01:34:00\nsubtitle: \"初始化！\"\nheader-img: \"site-init.png\"\ntags:\n---\n> 建站日，标记下...\n","slug":"Init-this-site","published":1,"updated":"2018-07-11T15:03:12.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4s0009ynmpsgrxuguu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n"},{"title":"Linux(Mac)下创建自定义命令","catalog":true,"date":"2019-02-28T13:24:34.000Z","subtitle":"create a custom command","header-img":null,"catagories":["Linux","Shell"],"_content":"\n# Ubuntu\n\n* 基于 shell 创建一个自定义指令，在全局调用\n\n1. 先创建 shell 脚本( 名为 ngc )\n> 此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件\n```bash\n#!/bin/bash\nif [ ! -d \"$1\" ];\nthen\n\tmkdir \"$1\"\nfi\n\ntouch \"./\"$1\"/\"$1\".component.ts\"\ntouch \"./\"$1\"/\"$1\".component.css\"\ntouch \"./\"$1\"/\"$1\".component.html\"\necho \"create file success!\"\n```\n> 创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权\n```bash\nchmod +x ngc\n```\n\n2. 编辑 ~/.bashrc 文件， 将shell所在文件夹导出为 全局PATH\n> 我的 shell 所在目录为  /home/root/.shell\n```bash\n# custom command dir\nexport PATH=$PATH:/home/root/.shell\n```\n\n3. 执行source 命令，\n```bash\nsource ~/.bashrc\n```\n\n4. 测试，在任意目录下运行命令\n```bash\nngc animal\n```\n> 在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！\n\n# Mac\n1. 创建shell 脚本(同上)\n\n2. Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)\n\n3. 测试 \n```bash\nsource ~/.bash_profile\n```\n\n> Success!\n\n\n\n","source":"_posts/Linux下创建自定义命令.md","raw":"---\ntitle: Linux(Mac)下创建自定义命令\ncatalog: true\ndate: 2019-02-28 21:24:34\nsubtitle: create a custom command\nheader-img:\ntags:\n- Linux\n- Shell\ncatagories:\n- Linux\n- Shell\n---\n\n# Ubuntu\n\n* 基于 shell 创建一个自定义指令，在全局调用\n\n1. 先创建 shell 脚本( 名为 ngc )\n> 此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件\n```bash\n#!/bin/bash\nif [ ! -d \"$1\" ];\nthen\n\tmkdir \"$1\"\nfi\n\ntouch \"./\"$1\"/\"$1\".component.ts\"\ntouch \"./\"$1\"/\"$1\".component.css\"\ntouch \"./\"$1\"/\"$1\".component.html\"\necho \"create file success!\"\n```\n> 创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权\n```bash\nchmod +x ngc\n```\n\n2. 编辑 ~/.bashrc 文件， 将shell所在文件夹导出为 全局PATH\n> 我的 shell 所在目录为  /home/root/.shell\n```bash\n# custom command dir\nexport PATH=$PATH:/home/root/.shell\n```\n\n3. 执行source 命令，\n```bash\nsource ~/.bashrc\n```\n\n4. 测试，在任意目录下运行命令\n```bash\nngc animal\n```\n> 在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！\n\n# Mac\n1. 创建shell 脚本(同上)\n\n2. Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)\n\n3. 测试 \n```bash\nsource ~/.bash_profile\n```\n\n> Success!\n\n\n\n","slug":"Linux下创建自定义命令","published":1,"updated":"2020-06-17T09:03:07.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4t000aynmpb27xmlf2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"ubuntu\">Ubuntu</span></h1>\n<ul>\n<li>基于 shell 创建一个自定义指令，在全局调用</li>\n</ul>\n<ol>\n<li>先创建 shell 脚本( 名为 ngc )</li>\n</ol>\n<blockquote>\n<p>此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\tmkdir <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.ts\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.css\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.html\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"create file success!\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ngc</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编辑 ~/.bashrc 文件， 将shell所在文件夹导出为 全局PATH</li>\n</ol>\n<blockquote>\n<p>我的 shell 所在目录为  /home/root/.shell</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># custom command dir</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/root/.shell</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行source 命令，</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>测试，在任意目录下运行命令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngc animal</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！</p>\n</blockquote>\n<h1><span id=\"mac\">Mac</span></h1>\n<ol>\n<li>\n<p>创建shell 脚本(同上)</p>\n</li>\n<li>\n<p>Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)</p>\n</li>\n<li>\n<p>测试</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Success!</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1>Ubuntu</h1>\n<ul>\n<li>基于 shell 创建一个自定义指令，在全局调用</li>\n</ul>\n<ol>\n<li>先创建 shell 脚本( 名为 ngc )</li>\n</ol>\n<blockquote>\n<p>此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\tmkdir <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.ts\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.css\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.html\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"create file success!\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ngc</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编辑 ~/.bashrc 文件， 将shell所在文件夹导出为 全局PATH</li>\n</ol>\n<blockquote>\n<p>我的 shell 所在目录为  /home/root/.shell</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># custom command dir</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/root/.shell</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行source 命令，</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>测试，在任意目录下运行命令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngc animal</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！</p>\n</blockquote>\n<h1>Mac</h1>\n<ol>\n<li>\n<p>创建shell 脚本(同上)</p>\n</li>\n<li>\n<p>Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)</p>\n</li>\n<li>\n<p>测试</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Success!</p>\n</blockquote>\n"},{"title":"Home PC Server Build","catalog":true,"date":"2019-03-22T16:31:00.000Z","subtitle":"Use your Home PC to create a server","header-img":null,"catagories":["Network"],"_content":"# By En-us\n* what we need ?\n1. A home PC\n2. A router\n3. A method can cross The Wall (墙)\n\n## 1. Get a domain\n* open the site [no-ip](https://www.noip.com), and then, registry a count.\n* create a host for free (every 30 days, it will confirm once)\n> what every port is ok, when you set your no-ip hosts.\n\n## 2. Set the ip\n* check your router, use the PPPoe way to link the internet.\n> if you don't know the username and password for the PPPoe acount,<br>\nyou can call your ISP a tell to resolve.\n\n## 3. Set the Forward on router\n* login in your router manage page (usually the url is [192.168.1.1](http://192.168.1.1))\n* find the <b>Forward<b> setting, and forward the outer port to you inner port.\n## 4. check \n* use any server on your pc, and set outer port forward to your pc.\n* open the url\n> how to install noip-clien at the end of the arctle.\n\n## Congratulation ！！！ that'all!\n> now you can use the domain to visit your home PC.\n\n\n-----------------------------------\n\n# By Ch-zn\n* 需要些什么？\n1. 一台个人电脑\n2. 一台路由器\n3. 能够翻♂墙的渠道\n\n## 1.获取一个域名\n* 打开[no-ip](https://www.noip.com)网站，注册一个账户\n> 打开这个是要翻♂墙的\n* 注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.\n>(每30天会发信息给你，提示确认,毕竟免费)<br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑\n\n## 2.设置ip\n* 检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.\n>如果没有拨号上网的账号，请电话联系你的网络提供商\n\n## 3.设置端口转发\n* 登陆路由器的管理界面\n* 设置端口转发，比如设置外网的8890转发到你电脑的8080端口\n\n## 4.检查\n* 任意部署一个服务在你的电脑上，并设置外网端口转发到该服务\n* 通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！\n> 具体安装 no-ip客户端在文末尾.\n\n## 恭喜你，\n> 如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.\n\n\n# install no-ip client (linux)\n\n## 1.download client file. \n```bash\nwget https://www.noip.com/client/linux/noip-duc-linux.tar.gz\n\n# after unzip it.\n\ntar zxvf noip-duc-linux.tar.gz -C ~/program\n```\n\n## 2. install\n\n```bash\ncd ~/program/noip-2.1.9-1\n# \nmake\n\nmake install\n# after that. will input some info.\n# 1. account for no-ip\n# 2. password for your account\n# 3. set interval time(minutes) default is 30.\n# 4. Do you wish to run something at successful (N).\n```\n\n## 3. run it.\n```bashr\nsudo /usr/local/bin/noip2\n```","source":"_posts/Home-PC-Server-Build.md","raw":"---\ntitle: Home PC Server Build\ncatalog: true\ndate: 2019-03-23 00:31:00\nsubtitle: Use your Home PC to create a server\nheader-img:\ntags:\n- Network\ncatagories:\n- Network\n---\n# By En-us\n* what we need ?\n1. A home PC\n2. A router\n3. A method can cross The Wall (墙)\n\n## 1. Get a domain\n* open the site [no-ip](https://www.noip.com), and then, registry a count.\n* create a host for free (every 30 days, it will confirm once)\n> what every port is ok, when you set your no-ip hosts.\n\n## 2. Set the ip\n* check your router, use the PPPoe way to link the internet.\n> if you don't know the username and password for the PPPoe acount,<br>\nyou can call your ISP a tell to resolve.\n\n## 3. Set the Forward on router\n* login in your router manage page (usually the url is [192.168.1.1](http://192.168.1.1))\n* find the <b>Forward<b> setting, and forward the outer port to you inner port.\n## 4. check \n* use any server on your pc, and set outer port forward to your pc.\n* open the url\n> how to install noip-clien at the end of the arctle.\n\n## Congratulation ！！！ that'all!\n> now you can use the domain to visit your home PC.\n\n\n-----------------------------------\n\n# By Ch-zn\n* 需要些什么？\n1. 一台个人电脑\n2. 一台路由器\n3. 能够翻♂墙的渠道\n\n## 1.获取一个域名\n* 打开[no-ip](https://www.noip.com)网站，注册一个账户\n> 打开这个是要翻♂墙的\n* 注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.\n>(每30天会发信息给你，提示确认,毕竟免费)<br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑\n\n## 2.设置ip\n* 检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.\n>如果没有拨号上网的账号，请电话联系你的网络提供商\n\n## 3.设置端口转发\n* 登陆路由器的管理界面\n* 设置端口转发，比如设置外网的8890转发到你电脑的8080端口\n\n## 4.检查\n* 任意部署一个服务在你的电脑上，并设置外网端口转发到该服务\n* 通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！\n> 具体安装 no-ip客户端在文末尾.\n\n## 恭喜你，\n> 如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.\n\n\n# install no-ip client (linux)\n\n## 1.download client file. \n```bash\nwget https://www.noip.com/client/linux/noip-duc-linux.tar.gz\n\n# after unzip it.\n\ntar zxvf noip-duc-linux.tar.gz -C ~/program\n```\n\n## 2. install\n\n```bash\ncd ~/program/noip-2.1.9-1\n# \nmake\n\nmake install\n# after that. will input some info.\n# 1. account for no-ip\n# 2. password for your account\n# 3. set interval time(minutes) default is 30.\n# 4. Do you wish to run something at successful (N).\n```\n\n## 3. run it.\n```bashr\nsudo /usr/local/bin/noip2\n```","slug":"Home-PC-Server-Build","published":1,"updated":"2020-02-13T14:25:05.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4u000cynmp74h1jgh2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"by-en-us\">By En-us</span></h1>\n<ul>\n<li>what we need ?</li>\n</ul>\n<ol>\n<li>A home PC</li>\n<li>A router</li>\n<li>A method can cross The Wall (墙)</li>\n</ol>\n<h2><span id=\"1-get-a-domain\">1. Get a domain</span></h2>\n<ul>\n<li>open the site <a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>, and then, registry a count.</li>\n<li>create a host for free (every 30 days, it will confirm once)</li>\n</ul>\n<blockquote>\n<p>what every port is ok, when you set your no-ip hosts.</p>\n</blockquote>\n<h2><span id=\"2-set-the-ip\">2. Set the ip</span></h2>\n<ul>\n<li>check your router, use the PPPoe way to link the internet.</li>\n</ul>\n<blockquote>\n<p>if you don’t know the username and password for the PPPoe acount,<br><br>\nyou can call your ISP a tell to resolve.</p>\n</blockquote>\n<h2><span id=\"3-set-the-forward-on-router\">3. Set the Forward on router</span></h2>\n<ul>\n<li>login in your router manage page (usually the url is <a href=\"http://192.168.1.1\" target=\"_blank\" rel=\"noopener\">192.168.1.1</a>)</li>\n<li>find the <b>Forward<b> setting, and forward the outer port to you inner port.</b></b></li>\n</ul>\n<h2><span id=\"4-check\">4. check</span></h2>\n<ul>\n<li>use any server on your pc, and set outer port forward to your pc.</li>\n<li>open the url</li>\n</ul>\n<blockquote>\n<p>how to install noip-clien at the end of the arctle.</p>\n</blockquote>\n<h2><span id=\"congratulation-thatall\">Congratulation ！！！ that’all!</span></h2>\n<blockquote>\n<p>now you can use the domain to visit your home PC.</p>\n</blockquote>\n<hr>\n<h1><span id=\"by-ch-zn\">By Ch-zn</span></h1>\n<ul>\n<li>需要些什么？</li>\n</ul>\n<ol>\n<li>一台个人电脑</li>\n<li>一台路由器</li>\n<li>能够翻♂墙的渠道</li>\n</ol>\n<h2><span id=\"1获取一个域名\">1.获取一个域名</span></h2>\n<ul>\n<li>打开<a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>网站，注册一个账户</li>\n</ul>\n<blockquote>\n<p>打开这个是要翻♂墙的</p>\n</blockquote>\n<ul>\n<li>注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.</li>\n</ul>\n<blockquote>\n<p>(每30天会发信息给你，提示确认,毕竟免费)<br><br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑</p>\n</blockquote>\n<h2><span id=\"2设置ip\">2.设置ip</span></h2>\n<ul>\n<li>检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.</li>\n</ul>\n<blockquote>\n<p>如果没有拨号上网的账号，请电话联系你的网络提供商</p>\n</blockquote>\n<h2><span id=\"3设置端口转发\">3.设置端口转发</span></h2>\n<ul>\n<li>登陆路由器的管理界面</li>\n<li>设置端口转发，比如设置外网的8890转发到你电脑的8080端口</li>\n</ul>\n<h2><span id=\"4检查\">4.检查</span></h2>\n<ul>\n<li>任意部署一个服务在你的电脑上，并设置外网端口转发到该服务</li>\n<li>通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！</li>\n</ul>\n<blockquote>\n<p>具体安装 no-ip客户端在文末尾.</p>\n</blockquote>\n<h2><span id=\"恭喜你\">恭喜你，</span></h2>\n<blockquote>\n<p>如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.</p>\n</blockquote>\n<h1><span id=\"install-no-ip-client-linux\">install no-ip client (linux)</span></h1>\n<h2><span id=\"1download-client-file\">1.download client file.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># after unzip it.</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf noip-duc-linux.tar.gz -C ~/program</span><br></pre></td></tr></table></figure>\n<h2><span id=\"2-install\">2. install</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/program/noip-2.1.9-1</span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">make install</span><br><span class=\"line\"><span class=\"comment\"># after that. will input some info.</span></span><br><span class=\"line\"><span class=\"comment\"># 1. account for no-ip</span></span><br><span class=\"line\"><span class=\"comment\"># 2. password for your account</span></span><br><span class=\"line\"><span class=\"comment\"># 3. set interval time(minutes) default is 30.</span></span><br><span class=\"line\"><span class=\"comment\"># 4. Do you wish to run something at successful (N).</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"3-run-it\">3. run it.</span></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/local/bin/noip2</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>By En-us</h1>\n<ul>\n<li>what we need ?</li>\n</ul>\n<ol>\n<li>A home PC</li>\n<li>A router</li>\n<li>A method can cross The Wall (墙)</li>\n</ol>\n<h2>1. Get a domain</h2>\n<ul>\n<li>open the site <a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>, and then, registry a count.</li>\n<li>create a host for free (every 30 days, it will confirm once)</li>\n</ul>\n<blockquote>\n<p>what every port is ok, when you set your no-ip hosts.</p>\n</blockquote>\n<h2>2. Set the ip</h2>\n<ul>\n<li>check your router, use the PPPoe way to link the internet.</li>\n</ul>\n<blockquote>\n<p>if you don’t know the username and password for the PPPoe acount,<br><br>\nyou can call your ISP a tell to resolve.</p>\n</blockquote>\n<h2>3. Set the Forward on router</h2>\n<ul>\n<li>login in your router manage page (usually the url is <a href=\"http://192.168.1.1\" target=\"_blank\" rel=\"noopener\">192.168.1.1</a>)</li>\n<li>find the <b>Forward<b> setting, and forward the outer port to you inner port.</b></b></li>\n</ul>\n<h2>4. check</h2>\n<ul>\n<li>use any server on your pc, and set outer port forward to your pc.</li>\n<li>open the url</li>\n</ul>\n<blockquote>\n<p>how to install noip-clien at the end of the arctle.</p>\n</blockquote>\n<h2>Congratulation ！！！ that’all!</h2>\n<blockquote>\n<p>now you can use the domain to visit your home PC.</p>\n</blockquote>\n<hr>\n<h1>By Ch-zn</h1>\n<ul>\n<li>需要些什么？</li>\n</ul>\n<ol>\n<li>一台个人电脑</li>\n<li>一台路由器</li>\n<li>能够翻♂墙的渠道</li>\n</ol>\n<h2>1.获取一个域名</h2>\n<ul>\n<li>打开<a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>网站，注册一个账户</li>\n</ul>\n<blockquote>\n<p>打开这个是要翻♂墙的</p>\n</blockquote>\n<ul>\n<li>注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.</li>\n</ul>\n<blockquote>\n<p>(每30天会发信息给你，提示确认,毕竟免费)<br><br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑</p>\n</blockquote>\n<h2>2.设置ip</h2>\n<ul>\n<li>检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.</li>\n</ul>\n<blockquote>\n<p>如果没有拨号上网的账号，请电话联系你的网络提供商</p>\n</blockquote>\n<h2>3.设置端口转发</h2>\n<ul>\n<li>登陆路由器的管理界面</li>\n<li>设置端口转发，比如设置外网的8890转发到你电脑的8080端口</li>\n</ul>\n<h2>4.检查</h2>\n<ul>\n<li>任意部署一个服务在你的电脑上，并设置外网端口转发到该服务</li>\n<li>通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！</li>\n</ul>\n<blockquote>\n<p>具体安装 no-ip客户端在文末尾.</p>\n</blockquote>\n<h2>恭喜你，</h2>\n<blockquote>\n<p>如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.</p>\n</blockquote>\n<h1>install no-ip client (linux)</h1>\n<h2>1.download client file.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># after unzip it.</span></span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf noip-duc-linux.tar.gz -C ~/program</span><br></pre></td></tr></table></figure>\n<h2>2. install</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/program/noip-2.1.9-1</span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">make install</span><br><span class=\"line\"><span class=\"comment\"># after that. will input some info.</span></span><br><span class=\"line\"><span class=\"comment\"># 1. account for no-ip</span></span><br><span class=\"line\"><span class=\"comment\"># 2. password for your account</span></span><br><span class=\"line\"><span class=\"comment\"># 3. set interval time(minutes) default is 30.</span></span><br><span class=\"line\"><span class=\"comment\"># 4. Do you wish to run something at successful (N).</span></span><br></pre></td></tr></table></figure>\n<h2>3. run it.</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/local/bin/noip2</span><br></pre></td></tr></table></figure>"},{"title":"Linux定时执行任务","catalog":true,"date":"2020-05-31T08:59:12.000Z","subtitle":null,"header-img":null,"catagories":["Linux","Task"],"_content":"\n## crontab 命令.\n\n* crontab 命令是用于定期执行任务的命令.\n\n### 查看 当前账户的任务列表.\n\n```bash\ncrontab -l\n```\n\n### 编辑定时任务.\n\n* 使用如下命令,就会进入一个文件, 一旦编辑保存这个文件,就会出发文件中的定时任务.\n\n```bash\ncrontab -e\n```\n\n### 设置定时任务.(就crontab -e 中打开的文件)\n\n* 参数格式.\n\n```bash\n* * * * * command\n```\n\n* 前面的没个 * 表示不同的执行时间单位.\n\n| 第几个 * | 意义 | 范围 |\n| ------ | ------ | ------ |\n| 第一个  | 一小时当中的第几分钟（minute） | 0~59 |\n| 第二个  | 一天当中的第几小时（hour） | 0~23 |\n| 第三个  | 一个月当中的第几天（day） | 0~31 |\n| 第四个  | 一年当中的第几个月（month） | 0~12 |\n| 第五个  | 一周当中的星期几（week） | 0~7 (0和7都表示星期天) |\n\n* 特殊含义.\n    > \\* 表示任何时间. 比如第二个是 \\*, 表示每分钟都执行.\n\n* 例子.\n\n```bash\n# 在每天11点30分执行命令.\n30 11 * * * command \n\n\n# 在每周星期二和星期五的11点30分执行任务.\n\n30 11 * * 2,5 command\n\n# 在每周1~5的11点30分执行备份命令\n30 11 * * 1-5 /home/user1/backup.sh\n```\n\n","source":"_posts/Linux定时执行任务.md","raw":"---\ntitle: Linux定时执行任务\ncatalog: true\ndate: 2020-05-31 16:59:12\nsubtitle:\nheader-img:\ntags:\n- Linux\n- Task\ncatagories:\n- Linux\n- Task\n---\n\n## crontab 命令.\n\n* crontab 命令是用于定期执行任务的命令.\n\n### 查看 当前账户的任务列表.\n\n```bash\ncrontab -l\n```\n\n### 编辑定时任务.\n\n* 使用如下命令,就会进入一个文件, 一旦编辑保存这个文件,就会出发文件中的定时任务.\n\n```bash\ncrontab -e\n```\n\n### 设置定时任务.(就crontab -e 中打开的文件)\n\n* 参数格式.\n\n```bash\n* * * * * command\n```\n\n* 前面的没个 * 表示不同的执行时间单位.\n\n| 第几个 * | 意义 | 范围 |\n| ------ | ------ | ------ |\n| 第一个  | 一小时当中的第几分钟（minute） | 0~59 |\n| 第二个  | 一天当中的第几小时（hour） | 0~23 |\n| 第三个  | 一个月当中的第几天（day） | 0~31 |\n| 第四个  | 一年当中的第几个月（month） | 0~12 |\n| 第五个  | 一周当中的星期几（week） | 0~7 (0和7都表示星期天) |\n\n* 特殊含义.\n    > \\* 表示任何时间. 比如第二个是 \\*, 表示每分钟都执行.\n\n* 例子.\n\n```bash\n# 在每天11点30分执行命令.\n30 11 * * * command \n\n\n# 在每周星期二和星期五的11点30分执行任务.\n\n30 11 * * 2,5 command\n\n# 在每周1~5的11点30分执行备份命令\n30 11 * * 1-5 /home/user1/backup.sh\n```\n\n","slug":"Linux定时执行任务","published":1,"updated":"2020-05-31T09:15:48.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg4v000dynmpi2kipnfa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2><span id=\"crontab-命令\">crontab 命令.</span></h2>\n<ul>\n<li>crontab 命令是用于定期执行任务的命令.</li>\n</ul>\n<h3><span id=\"查看-当前账户的任务列表\">查看 当前账户的任务列表.</span></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -l</span><br></pre></td></tr></table></figure>\n<h3><span id=\"编辑定时任务\">编辑定时任务.</span></h3>\n<ul>\n<li>使用如下命令,就会进入一个文件, 一旦编辑保存这个文件,就会出发文件中的定时任务.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br></pre></td></tr></table></figure>\n<h3><span id=\"设置定时任务就crontab-e-中打开的文件\">设置定时任务.(就crontab -e 中打开的文件)</span></h3>\n<ul>\n<li>参数格式.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* * * * * <span class=\"built_in\">command</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>前面的没个 * 表示不同的执行时间单位.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>第几个 *</th>\n<th>意义</th>\n<th>范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一个</td>\n<td>一小时当中的第几分钟（minute）</td>\n<td>0~59</td>\n</tr>\n<tr>\n<td>第二个</td>\n<td>一天当中的第几小时（hour）</td>\n<td>0~23</td>\n</tr>\n<tr>\n<td>第三个</td>\n<td>一个月当中的第几天（day）</td>\n<td>0~31</td>\n</tr>\n<tr>\n<td>第四个</td>\n<td>一年当中的第几个月（month）</td>\n<td>0~12</td>\n</tr>\n<tr>\n<td>第五个</td>\n<td>一周当中的星期几（week）</td>\n<td>0~7 (0和7都表示星期天)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>特殊含义.</p>\n<blockquote>\n<p>* 表示任何时间. 比如第二个是 *, 表示每分钟都执行.</p>\n</blockquote>\n</li>\n<li>\n<p>例子.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在每天11点30分执行命令.</span></span><br><span class=\"line\">30 11 * * * <span class=\"built_in\">command</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在每周星期二和星期五的11点30分执行任务.</span></span><br><span class=\"line\"></span><br><span class=\"line\">30 11 * * 2,5 <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在每周1~5的11点30分执行备份命令</span></span><br><span class=\"line\">30 11 * * 1-5 /home/user1/backup.sh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2>crontab 命令.</h2>\n<ul>\n<li>crontab 命令是用于定期执行任务的命令.</li>\n</ul>\n<h3>查看 当前账户的任务列表.</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -l</span><br></pre></td></tr></table></figure>\n<h3>编辑定时任务.</h3>\n<ul>\n<li>使用如下命令,就会进入一个文件, 一旦编辑保存这个文件,就会出发文件中的定时任务.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br></pre></td></tr></table></figure>\n<h3>设置定时任务.(就crontab -e 中打开的文件)</h3>\n<ul>\n<li>参数格式.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* * * * * <span class=\"built_in\">command</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>前面的没个 * 表示不同的执行时间单位.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>第几个 *</th>\n<th>意义</th>\n<th>范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一个</td>\n<td>一小时当中的第几分钟（minute）</td>\n<td>0~59</td>\n</tr>\n<tr>\n<td>第二个</td>\n<td>一天当中的第几小时（hour）</td>\n<td>0~23</td>\n</tr>\n<tr>\n<td>第三个</td>\n<td>一个月当中的第几天（day）</td>\n<td>0~31</td>\n</tr>\n<tr>\n<td>第四个</td>\n<td>一年当中的第几个月（month）</td>\n<td>0~12</td>\n</tr>\n<tr>\n<td>第五个</td>\n<td>一周当中的星期几（week）</td>\n<td>0~7 (0和7都表示星期天)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>特殊含义.</p>\n<blockquote>\n<p>* 表示任何时间. 比如第二个是 *, 表示每分钟都执行.</p>\n</blockquote>\n</li>\n<li>\n<p>例子.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在每天11点30分执行命令.</span></span><br><span class=\"line\">30 11 * * * <span class=\"built_in\">command</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在每周星期二和星期五的11点30分执行任务.</span></span><br><span class=\"line\"></span><br><span class=\"line\">30 11 * * 2,5 <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在每周1~5的11点30分执行备份命令</span></span><br><span class=\"line\">30 11 * * 1-5 /home/user1/backup.sh</span><br></pre></td></tr></table></figure>\n"},{"title":"PostgreSQL","catalog":true,"date":"2018-10-31T16:08:31.000Z","subtitle":null,"header-img":null,"_content":"<center>PostgreSQL</center>\n\n# Insert Geometry into Table[PostGIS]\n```sql\n-- insert a wkid 4326 point. langitude 103.24, latitude 30.28\ninsert ST_GeomFromText('POINT(103.24 30.28)',4326)\n\n-- update geom field.\nupdate  test   set  geom = ST_GeomFromText('POINT(' || longitude || ' ' || latitude || ')',4326)\n\n-- insert a line\ninsert ST_GeomFromText('LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)',4326)\n\n-- insert a polygon\ninsert ST_GeomFromText('POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))',4326)\n```\n\n# update from a exist table\n> update one table from another table, relationship like images\n\n![avator](/img/E-R.png)\n```sql\nupdate table1 set f_23 = A.f_23, f_24 = A.f_24\nfrom (select uid, f_23, f_24from temp1) as A\nwhere table1.year = 2018 and table1.uid = A.uid\n```\n\n# Concat All column value and split column\n## Concat\n```sql\nselect name from students\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n```sql\nselect string_agg(name, ',') as nameConcat from students\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n---------------------------------------------------\n## Split\n```sql\nselect nameConcat from ConcatTB\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n\n```sql\nselect regexp_split_to_table(name, ',') as name from ConcatTB\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n# Get all column info of table\n``` sql\nselect * from information_schema.columns\nwhere table_schema='public' and table_name='student'\n```\n\n# add a autogrow field\n```sql\nalter table t1 add gid serial\n```\n\n\n# backup script\n\n```bash\n#!/bin/bash\n\nbaseDir=\"/home/postgres/backup_dir/\"\n\nuseDir=$baseDir$1\n\nif [ \"$1\" == \"\" ]\nthen\n        echo \"error, please type database name\"\nelse\n\n\tif [ ! -d $useDir ];then\n  \t\tmkdir $useDir\n\tfi\n\n        timeStr=\"`date +%Y%m%d_%H%M`\" \n        echo $timeStr\n        /usr/bin/pg_dump --host 192.102.25.2 --port 5432 --username \"pg1\" --no-password  --format custom --blobs --verbose --file \"${useDir}/${1}_${timeStr}.backup\" \"${1}\"\n        echo \"Backup Success !\"\nfi\necho \"`date +%Y%m%d_%H%M`\"\n\n```\n\n# add auto increase column\n\n```sql\nalter table test add column gid serial \n```\n\n\n\n\n\n\n","source":"_posts/PostgreSQL.md","raw":"---\ntitle: PostgreSQL\ncatalog: true\ndate: 2018-11-01 00:08:31\nsubtitle:\nheader-img:\ntags:\n- Database\n- PostgreSQL\n---\n<center>PostgreSQL</center>\n\n# Insert Geometry into Table[PostGIS]\n```sql\n-- insert a wkid 4326 point. langitude 103.24, latitude 30.28\ninsert ST_GeomFromText('POINT(103.24 30.28)',4326)\n\n-- update geom field.\nupdate  test   set  geom = ST_GeomFromText('POINT(' || longitude || ' ' || latitude || ')',4326)\n\n-- insert a line\ninsert ST_GeomFromText('LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)',4326)\n\n-- insert a polygon\ninsert ST_GeomFromText('POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))',4326)\n```\n\n# update from a exist table\n> update one table from another table, relationship like images\n\n![avator](/img/E-R.png)\n```sql\nupdate table1 set f_23 = A.f_23, f_24 = A.f_24\nfrom (select uid, f_23, f_24from temp1) as A\nwhere table1.year = 2018 and table1.uid = A.uid\n```\n\n# Concat All column value and split column\n## Concat\n```sql\nselect name from students\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n```sql\nselect string_agg(name, ',') as nameConcat from students\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n---------------------------------------------------\n## Split\n```sql\nselect nameConcat from ConcatTB\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n\n```sql\nselect regexp_split_to_table(name, ',') as name from ConcatTB\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n# Get all column info of table\n``` sql\nselect * from information_schema.columns\nwhere table_schema='public' and table_name='student'\n```\n\n# add a autogrow field\n```sql\nalter table t1 add gid serial\n```\n\n\n# backup script\n\n```bash\n#!/bin/bash\n\nbaseDir=\"/home/postgres/backup_dir/\"\n\nuseDir=$baseDir$1\n\nif [ \"$1\" == \"\" ]\nthen\n        echo \"error, please type database name\"\nelse\n\n\tif [ ! -d $useDir ];then\n  \t\tmkdir $useDir\n\tfi\n\n        timeStr=\"`date +%Y%m%d_%H%M`\" \n        echo $timeStr\n        /usr/bin/pg_dump --host 192.102.25.2 --port 5432 --username \"pg1\" --no-password  --format custom --blobs --verbose --file \"${useDir}/${1}_${timeStr}.backup\" \"${1}\"\n        echo \"Backup Success !\"\nfi\necho \"`date +%Y%m%d_%H%M`\"\n\n```\n\n# add auto increase column\n\n```sql\nalter table test add column gid serial \n```\n\n\n\n\n\n\n","slug":"PostgreSQL","published":1,"updated":"2020-09-29T03:02:33.269Z","_id":"ckc8utg50000fynmp02ng8a1k","comments":1,"layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><center>PostgreSQL</center>\n<h1><span id=\"insert-geometry-into-tablepostgis\">Insert Geometry into Table[PostGIS]</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- insert a wkid 4326 point. langitude 103.24, latitude 30.28</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POINT(103.24 30.28)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- update geom field.</span></span><br><span class=\"line\"><span class=\"keyword\">update</span>  <span class=\"keyword\">test</span>   <span class=\"keyword\">set</span>  geom = ST_GeomFromText(<span class=\"string\">'POINT('</span> || longitude || <span class=\"string\">' '</span> || latitude || <span class=\"string\">')'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a line</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a polygon</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))'</span>,<span class=\"number\">4326</span>)</span><br></pre></td></tr></table></figure>\n<h1><span id=\"update-from-a-exist-table\">update from a exist table</span></h1>\n<blockquote>\n<p>update one table from another table, relationship like images</p>\n</blockquote>\n<p><img src=\"/img/E-R.png\" alt=\"avator\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> table1 <span class=\"keyword\">set</span> f_23 = A.f_23, f_24 = A.f_24</span><br><span class=\"line\"><span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> uid, f_23, f_24from temp1) <span class=\"keyword\">as</span> A</span><br><span class=\"line\"><span class=\"keyword\">where</span> table1.year = <span class=\"number\">2018</span> <span class=\"keyword\">and</span> table1.uid = A.uid</span><br></pre></td></tr></table></figure>\n<h1><span id=\"concat-all-column-value-and-split-column\">Concat All column value and split column</span></h1>\n<h2><span id=\"concat\">Concat</span></h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> string_agg(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> nameConcat <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2><span id=\"split\">Split</span></h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> nameConcat <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> regexp_split_to_table(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<h1><span id=\"get-all-column-info-of-table\">Get all column info of table</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.columns</span><br><span class=\"line\"><span class=\"keyword\">where</span> table_schema=<span class=\"string\">'public'</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">'student'</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"add-a-autogrow-field\">add a autogrow field</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t1 <span class=\"keyword\">add</span> gid <span class=\"built_in\">serial</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"backup-script\">backup script</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">baseDir=<span class=\"string\">\"/home/postgres/backup_dir/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">useDir=<span class=\"variable\">$baseDir</span><span class=\"variable\">$1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> == <span class=\"string\">\"\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"error, please type database name\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [ ! -d <span class=\"variable\">$useDir</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  \t\tmkdir <span class=\"variable\">$useDir</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">        timeStr=<span class=\"string\">\"`date +%Y%m%d_%H%M`\"</span> </span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$timeStr</span></span><br><span class=\"line\">        /usr/bin/pg_dump --host 192.102.25.2 --port 5432 --username <span class=\"string\">\"pg1\"</span> --no-password  --format custom --blobs --verbose --file <span class=\"string\">\"<span class=\"variable\">$&#123;useDir&#125;</span>/<span class=\"variable\">$&#123;1&#125;</span>_<span class=\"variable\">$&#123;timeStr&#125;</span>.backup\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;1&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Backup Success !\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"`date +%Y%m%d_%H%M`\"</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"add-auto-increase-column\">add auto increase column</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"keyword\">test</span> <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> gid <span class=\"built_in\">serial</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<center>PostgreSQL</center>\n<h1>Insert Geometry into Table[PostGIS]</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- insert a wkid 4326 point. langitude 103.24, latitude 30.28</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POINT(103.24 30.28)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- update geom field.</span></span><br><span class=\"line\"><span class=\"keyword\">update</span>  <span class=\"keyword\">test</span>   <span class=\"keyword\">set</span>  geom = ST_GeomFromText(<span class=\"string\">'POINT('</span> || longitude || <span class=\"string\">' '</span> || latitude || <span class=\"string\">')'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a line</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a polygon</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))'</span>,<span class=\"number\">4326</span>)</span><br></pre></td></tr></table></figure>\n<h1>update from a exist table</h1>\n<blockquote>\n<p>update one table from another table, relationship like images</p>\n</blockquote>\n<p><img src=\"/img/E-R.png\" alt=\"avator\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> table1 <span class=\"keyword\">set</span> f_23 = A.f_23, f_24 = A.f_24</span><br><span class=\"line\"><span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> uid, f_23, f_24from temp1) <span class=\"keyword\">as</span> A</span><br><span class=\"line\"><span class=\"keyword\">where</span> table1.year = <span class=\"number\">2018</span> <span class=\"keyword\">and</span> table1.uid = A.uid</span><br></pre></td></tr></table></figure>\n<h1>Concat All column value and split column</h1>\n<h2>Concat</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> string_agg(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> nameConcat <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>Split</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> nameConcat <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> regexp_split_to_table(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<h1>Get all column info of table</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.columns</span><br><span class=\"line\"><span class=\"keyword\">where</span> table_schema=<span class=\"string\">'public'</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">'student'</span></span><br></pre></td></tr></table></figure>\n<h1>add a autogrow field</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t1 <span class=\"keyword\">add</span> gid <span class=\"built_in\">serial</span></span><br></pre></td></tr></table></figure>\n<h1>backup script</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">baseDir=<span class=\"string\">\"/home/postgres/backup_dir/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">useDir=<span class=\"variable\">$baseDir</span><span class=\"variable\">$1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> == <span class=\"string\">\"\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"error, please type database name\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [ ! -d <span class=\"variable\">$useDir</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  \t\tmkdir <span class=\"variable\">$useDir</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">        timeStr=<span class=\"string\">\"`date +%Y%m%d_%H%M`\"</span> </span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$timeStr</span></span><br><span class=\"line\">        /usr/bin/pg_dump --host 192.102.25.2 --port 5432 --username <span class=\"string\">\"pg1\"</span> --no-password  --format custom --blobs --verbose --file <span class=\"string\">\"<span class=\"variable\">$&#123;useDir&#125;</span>/<span class=\"variable\">$&#123;1&#125;</span>_<span class=\"variable\">$&#123;timeStr&#125;</span>.backup\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;1&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Backup Success !\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"`date +%Y%m%d_%H%M`\"</span></span><br></pre></td></tr></table></figure>\n<h1>add auto increase column</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"keyword\">test</span> <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> gid <span class=\"built_in\">serial</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Server operation(有关服务器操作)","catalog":true,"date":"2018-04-27T16:03:40.000Z","subtitle":null,"header-img":"mnt.jpg","catagories":["Linux"],"_content":"> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.106.122.111\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means\n# unzip in current directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nunzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n> wget is a tool for download\n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# rdesktop\n**rdesktop is a tool, which use for connect windows server.\n\n## connect default (full screen),\n> alt + ctrl + enter   quit full screen\n```bash\nrdesktop -f 192.168.1.3\n```\n\n## connect and set resolution\n```bash\n>rdesktop -g 1366*768 192.168.1.3\n```\n\n## connect By user and psw.\n```bash\nrdesktop -f 111.111.222.222 -u Administrator -p 'password'\n```\n\n## connect with enable directory\n>mount local directory [/home/guest/file] to server\n```bash\nrdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file\n```","source":"_posts/Server-operation-有关服务器操作.md","raw":"---\ntitle: Server operation(有关服务器操作)\ncatalog: true\ndate: 2018-04-28 00:03:40\nsubtitle:\nheader-img: \"mnt.jpg\"\ntags:\n- Linux\ncatagories:\n- Linux\n---\n> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.106.122.111\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means\n# unzip in current directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nunzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n> wget is a tool for download\n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# rdesktop\n**rdesktop is a tool, which use for connect windows server.\n\n## connect default (full screen),\n> alt + ctrl + enter   quit full screen\n```bash\nrdesktop -f 192.168.1.3\n```\n\n## connect and set resolution\n```bash\n>rdesktop -g 1366*768 192.168.1.3\n```\n\n## connect By user and psw.\n```bash\nrdesktop -f 111.111.222.222 -u Administrator -p 'password'\n```\n\n## connect with enable directory\n>mount local directory [/home/guest/file] to server\n```bash\nrdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file\n```","slug":"Server-operation-有关服务器操作","published":1,"updated":"2018-10-27T17:11:51.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg51000hynmph0s3gdy5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1><span id=\"ssh-连接服务器\">ssh 连接服务器</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.106.122.111</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"scp-uplaod-or-download-file\">scp (uplaod or download file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tar-and-zip-zip-or-unzip-file\">tar and zip (zip or unzip file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means</span></span><br><span class=\"line\"><span class=\"comment\"># unzip in current directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">unzip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1><span id=\"wget\">wget</span></h1>\n<blockquote>\n<p>wget is a tool for download</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"rdesktop\">rdesktop</span></h1>\n<p>**rdesktop is a tool, which use for connect windows server.</p>\n<h2><span id=\"connect-default-full-screen\">connect default (full screen),</span></h2>\n<blockquote>\n<p>alt + ctrl + enter   quit full screen</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-and-set-resolution\">connect and set resolution</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;rdesktop -g 1366*768 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-by-user-and-psw\">connect By user and psw.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -u Administrator -p <span class=\"string\">'password'</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-with-enable-directory\">connect with enable directory</span></h2>\n<blockquote>\n<p>mount local directory [/home/guest/file] to server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1>ssh 连接服务器</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.106.122.111</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1>scp (uplaod or download file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1>tar and zip (zip or unzip file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means</span></span><br><span class=\"line\"><span class=\"comment\"># unzip in current directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">unzip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1>wget</h1>\n<blockquote>\n<p>wget is a tool for download</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1>rdesktop</h1>\n<p>**rdesktop is a tool, which use for connect windows server.</p>\n<h2>connect default (full screen),</h2>\n<blockquote>\n<p>alt + ctrl + enter   quit full screen</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2>connect and set resolution</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;rdesktop -g 1366*768 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2>connect By user and psw.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -u Administrator -p <span class=\"string\">'password'</span></span><br></pre></td></tr></table></figure>\n<h2>connect with enable directory</h2>\n<blockquote>\n<p>mount local directory [/home/guest/file] to server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file</span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu常用软件安装","catalog":true,"date":"2018-04-07T04:39:46.000Z","subtitle":"记录软件安装过程","header-img":"back1.jpg","_content":"> 常用软件安装\n-------------------------\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n# tomcat\n\n> download from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- \n* 1. select LTS.\n* 2. select Linux Binaries (x64)\n```\ntar -xvf ./node-v12.16.0-linux-x64.tar.xz -C ~/program\n```\n> \n> set environment\n```\nvi ~/.bashrc\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/home/jack/program/node-v12.16.0-linux-x64\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource ~./.bashrc\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n>\n> if there are some permission like\n> \"checkPermissions Missing write access to /home/jack/node/lib/node_module\"\n```\nsudo chown -R $(whoami) /home/jack/node/\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/autoproxy.zip), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n# trojan (service)\n\n* support .CentOS7+ ，Debian8+，Ubuntu 16.04+\n\n> before install, check the port 80 and 443 is not be listen.\n\n```bash\nwget -N --no-check-certificate https://raw.githubusercontent.com/mark-logs-code-hub/trojan-wiz/master/ins.sh && chmod +x ins.sh && sudo bash ins.sh\n```\n\n```bash\n# check service\nsystemctl status trojan-gfw\n# start service\nsystemctl start trojan-gfw\n# stop service\nsystemctl stop trojan-gfw\n# show client config file.\ncat /home/trojan/client.json\n```\n\n# nginx\n```bash\n# install \nsudo apt-get update\nsudo apt-get install nginx\n# show and check config file\nnginx -t\n# start\nnginx -c /etc/nginx/nginx.conf\n# stop\npkill -9 nginx\n```\n> the config file is on 'nginx.conf'\n> config the 80 proxy to 8080(tomcat)\n```\nserver {\n\tlisten 80 default_server;\n\tlisten [::]:80 default_server;\n\troot /var/www/html;\n\tindex index.html index.htm\n\tserver_name 127.0.0.1:8080;\n\tlocation / {\n\t\tproxy_pass http://127.0.0.1:8080;\n\t}\n}\n```\n\n> config the static file to some subdomain,\n> like in the director  /www/api\n```\nserver {\n    listen 80;\n    server_name api.domains.com;\n    root /www/api;\n    index index.html;\n    location / {\n\troot /www/api;\n\tindex index.html;\n    }\n}\n```\n\n> config the proxy some request , like google map\n\n```\nserver {\n\tlisten\t80;\n\tserver_name gmap.domain.com;\n\tclient_max_body_size 20M;\n\tfastcgi_buffers 4 4K;\n\tsendfile on;\n\tsend_timeout 600s;\n\t\n\tlocation /kh {\n\t\tproxy_redirect off;\n\t\tproxy_set_header Host khm2.google.com;\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\tproxy_pass http://khm2.google.com;\n\t}\n        location /vt {\n                proxy_redirect off;\n                proxy_set_header Host mt0.google.cn;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://mt0.google.cn;\n        }\n\n}\n\n```\n# mount (disk)\n\n> look disk info, find disk sign like '/dev/sda1'\n```\nsudo fdisk -l\n```\n>find file system type\n```\nsudo blkid\n# will show disk info and uuid \n```\n> edit config\n```\nsudo vi /etc/fstab\n```\n> in the last line ,add flow\n```\nUUID=10B40A3\t\t/media/disk1\t\tntfs\tdefaults\t0 \t0\n> 10B40A3 is the uuid. from command \n> /media/disk\t\twhere the disk mount   \"sudo blkid\"\n> ntfs\t\tfile system\n>0 (first)\tdisk backup\n>0 (second)\tdisk check (0 means don't backup  don't check\n```\n\n## Important info.\n\n* someday, I install windows 10 on another disk. then, called the disk cann't write file for it.\n* then. you will open your windows 10, and close the function \"fast startup \", or called \"fast boot\"\n\n# idea\n\n## 1. download idea ultimate\n## 2. install\n## 3. use docker,create a license machine\n```bash\nsudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb\n```\n\n## 4. type license server from docker ip address and port\n>like 'http://localhost:1212'\n\n# Input method\n\n* you can install sogou input method by anyway for search. but !!!<br>\nafter you installed sogou input method, \n<b>don't</b>  install thrid method or do anything for input method.,<br>\notherwise, you will not see the sogou input method again.<br>\n(else if you reinstall your operation system. oh, that's boring!)\n\n> oh \n0\n\nTry rm -rf ~/.config/fcitx and restart ubuntu, this fixed me at least, on xubuntu 16.04\n","source":"_posts/Ubuntu常用软件安装.md","raw":"---\ntitle: Ubuntu常用软件安装\ncatalog: true\ndate: 2018-04-07 12:39:46\nsubtitle: \"记录软件安装过程\"\nheader-img: \"back1.jpg\"\ntags:\n- Linux\n- Ubuntu\n---\n> 常用软件安装\n-------------------------\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n# tomcat\n\n> download from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- \n* 1. select LTS.\n* 2. select Linux Binaries (x64)\n```\ntar -xvf ./node-v12.16.0-linux-x64.tar.xz -C ~/program\n```\n> \n> set environment\n```\nvi ~/.bashrc\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/home/jack/program/node-v12.16.0-linux-x64\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource ~./.bashrc\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n>\n> if there are some permission like\n> \"checkPermissions Missing write access to /home/jack/node/lib/node_module\"\n```\nsudo chown -R $(whoami) /home/jack/node/\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/autoproxy.zip), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n# trojan (service)\n\n* support .CentOS7+ ，Debian8+，Ubuntu 16.04+\n\n> before install, check the port 80 and 443 is not be listen.\n\n```bash\nwget -N --no-check-certificate https://raw.githubusercontent.com/mark-logs-code-hub/trojan-wiz/master/ins.sh && chmod +x ins.sh && sudo bash ins.sh\n```\n\n```bash\n# check service\nsystemctl status trojan-gfw\n# start service\nsystemctl start trojan-gfw\n# stop service\nsystemctl stop trojan-gfw\n# show client config file.\ncat /home/trojan/client.json\n```\n\n# nginx\n```bash\n# install \nsudo apt-get update\nsudo apt-get install nginx\n# show and check config file\nnginx -t\n# start\nnginx -c /etc/nginx/nginx.conf\n# stop\npkill -9 nginx\n```\n> the config file is on 'nginx.conf'\n> config the 80 proxy to 8080(tomcat)\n```\nserver {\n\tlisten 80 default_server;\n\tlisten [::]:80 default_server;\n\troot /var/www/html;\n\tindex index.html index.htm\n\tserver_name 127.0.0.1:8080;\n\tlocation / {\n\t\tproxy_pass http://127.0.0.1:8080;\n\t}\n}\n```\n\n> config the static file to some subdomain,\n> like in the director  /www/api\n```\nserver {\n    listen 80;\n    server_name api.domains.com;\n    root /www/api;\n    index index.html;\n    location / {\n\troot /www/api;\n\tindex index.html;\n    }\n}\n```\n\n> config the proxy some request , like google map\n\n```\nserver {\n\tlisten\t80;\n\tserver_name gmap.domain.com;\n\tclient_max_body_size 20M;\n\tfastcgi_buffers 4 4K;\n\tsendfile on;\n\tsend_timeout 600s;\n\t\n\tlocation /kh {\n\t\tproxy_redirect off;\n\t\tproxy_set_header Host khm2.google.com;\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\tproxy_pass http://khm2.google.com;\n\t}\n        location /vt {\n                proxy_redirect off;\n                proxy_set_header Host mt0.google.cn;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://mt0.google.cn;\n        }\n\n}\n\n```\n# mount (disk)\n\n> look disk info, find disk sign like '/dev/sda1'\n```\nsudo fdisk -l\n```\n>find file system type\n```\nsudo blkid\n# will show disk info and uuid \n```\n> edit config\n```\nsudo vi /etc/fstab\n```\n> in the last line ,add flow\n```\nUUID=10B40A3\t\t/media/disk1\t\tntfs\tdefaults\t0 \t0\n> 10B40A3 is the uuid. from command \n> /media/disk\t\twhere the disk mount   \"sudo blkid\"\n> ntfs\t\tfile system\n>0 (first)\tdisk backup\n>0 (second)\tdisk check (0 means don't backup  don't check\n```\n\n## Important info.\n\n* someday, I install windows 10 on another disk. then, called the disk cann't write file for it.\n* then. you will open your windows 10, and close the function \"fast startup \", or called \"fast boot\"\n\n# idea\n\n## 1. download idea ultimate\n## 2. install\n## 3. use docker,create a license machine\n```bash\nsudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb\n```\n\n## 4. type license server from docker ip address and port\n>like 'http://localhost:1212'\n\n# Input method\n\n* you can install sogou input method by anyway for search. but !!!<br>\nafter you installed sogou input method, \n<b>don't</b>  install thrid method or do anything for input method.,<br>\notherwise, you will not see the sogou input method again.<br>\n(else if you reinstall your operation system. oh, that's boring!)\n\n> oh \n0\n\nTry rm -rf ~/.config/fcitx and restart ubuntu, this fixed me at least, on xubuntu 16.04\n","slug":"Ubuntu常用软件安装","published":1,"updated":"2020-02-13T14:08:43.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg53000kynmp2m3zqmab","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>常用软件安装</p>\n</blockquote>\n<hr>\n<h1><span id=\"java\">java</span></h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tomcat\">tomcat</span></h1>\n<blockquote>\n<p>download from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1><span id=\"nodejs\">nodejs</span></h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>–</p>\n</blockquote>\n<ul>\n<li>\n<ol>\n<li>select LTS.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>select Linux Binaries (x64)</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf ./<span class=\"keyword\">node</span><span class=\"title\">-v12</span>.<span class=\"number\">16.0</span>-linux-x64.tar.xz -C ~/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~<span class=\"string\">/.bashrc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/home/jack/program/node-v12.16.0-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~./.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>if there are some permission like<br>\n&quot;checkPermissions Missing write access to /home/jack/node/lib/node_module&quot;</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R $(whoami) /home/jack/<span class=\"keyword\">node</span><span class=\"title\">/</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"shadowsocks-ss\">shadowsocks (ss)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/autoproxy.zip\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n<h1><span id=\"trojan-service\">trojan (service)</span></h1>\n<ul>\n<li>support .CentOS7+ ，Debian8+，Ubuntu 16.04+</li>\n</ul>\n<blockquote>\n<p>before install, check the port 80 and 443 is not be listen.</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/mark-logs-code-hub/trojan-wiz/master/ins.sh &amp;&amp; chmod +x ins.sh &amp;&amp; sudo bash ins.sh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check service</span></span><br><span class=\"line\">systemctl status trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># start service</span></span><br><span class=\"line\">systemctl start trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># stop service</span></span><br><span class=\"line\">systemctl stop trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># show client config file.</span></span><br><span class=\"line\">cat /home/trojan/client.json</span><br></pre></td></tr></table></figure>\n<h1><span id=\"nginx\">nginx</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install </span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"comment\"># show and check config file</span></span><br><span class=\"line\">nginx -t</span><br><span class=\"line\"><span class=\"comment\"># start</span></span><br><span class=\"line\">nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># stop</span></span><br><span class=\"line\">pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>the config file is on 'nginx.conf’<br>\nconfig the 80 proxy to 8080(tomcat)</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> [::]:<span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html index.htm</span><br><span class=\"line\">\tserver_name <span class=\"number\">127.0.0.1:8080</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the static file to some subdomain,<br>\nlike in the director  /www/api</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> api.domains.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the proxy some request , like google map</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span>\t<span class=\"number\">80</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> gmap.domain.com;</span><br><span class=\"line\">\t<span class=\"attribute\">client_max_body_size</span> <span class=\"number\">20M</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">4</span> <span class=\"number\">4K</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">send_timeout</span> <span class=\"number\">600s</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> /kh &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> Host khm2.google.com;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://khm2.google.com;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> /vt &#123;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> Host mt0.google.cn;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_pass</span> http://mt0.google.cn;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1><span id=\"mount-disk\">mount (disk)</span></h1>\n<blockquote>\n<p>look disk info, find disk sign like ‘/dev/sda1’</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo fdisk -l</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>find file system type</p>\n</blockquote>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">sudo</span> <span class=\"keyword\">blkid</span></span><br><span class=\"line\"><span class=\"keyword\"># </span>will show disk <span class=\"meta\">info</span> <span class=\"keyword\">and </span>uuid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>edit config</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"regexp\">/etc/</span>fstab</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>in the last line ,add flow</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">UUID</span>=10B40A3\t\t/media/disk1\t\tntfs\tdefaults\t0 \t0</span><br><span class=\"line\">&gt; 10B40A3 is the uuid. <span class=\"keyword\">from</span> command </span><br><span class=\"line\">&gt; /media/disk\t\twhere the disk mount   <span class=\"string\">\"sudo blkid\"</span></span><br><span class=\"line\">&gt; ntfs\t\tfile system</span><br><span class=\"line\">&gt;0 (first)\tdisk backup</span><br><span class=\"line\">&gt;0 (second)\tdisk check (0 means don<span class=\"string\">'t backup  don'</span>t check</span><br></pre></td></tr></table></figure>\n<h2><span id=\"important-info\">Important info.</span></h2>\n<ul>\n<li>someday, I install windows 10 on another disk. then, called the disk cann’t write file for it.</li>\n<li>then. you will open your windows 10, and close the function &quot;fast startup &quot;, or called “fast boot”</li>\n</ul>\n<h1><span id=\"idea\">idea</span></h1>\n<h2><span id=\"1-download-idea-ultimate\">1. download idea ultimate</span></h2>\n<h2><span id=\"2-install\">2. install</span></h2>\n<h2><span id=\"3-use-dockercreate-a-license-machine\">3. use docker,create a license machine</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-type-license-server-from-docker-ip-address-and-port\">4. type license server from docker ip address and port</span></h2>\n<blockquote>\n<p>like ‘<a href=\"http://localhost:1212\" target=\"_blank\" rel=\"noopener\">http://localhost:1212</a>’</p>\n</blockquote>\n<h1><span id=\"input-method\">Input method</span></h1>\n<ul>\n<li>you can install sogou input method by anyway for search. but !!!<br><br>\nafter you installed sogou input method,<br>\n<b>don’t</b>  install thrid method or do anything for input method.,<br><br>\notherwise, you will not see the sogou input method again.<br><br>\n(else if you reinstall your operation system. oh, that’s boring!)</li>\n</ul>\n<blockquote>\n<p>oh<br>\n0</p>\n</blockquote>\n<p>Try rm -rf ~/.config/fcitx and restart ubuntu, this fixed me at least, on xubuntu 16.04</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>常用软件安装</p>\n</blockquote>\n<hr>\n<h1>java</h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1>tomcat</h1>\n<blockquote>\n<p>download from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1>nodejs</h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>–</p>\n</blockquote>\n<ul>\n<li>\n<ol>\n<li>select LTS.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>select Linux Binaries (x64)</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf ./<span class=\"keyword\">node</span><span class=\"title\">-v12</span>.<span class=\"number\">16.0</span>-linux-x64.tar.xz -C ~/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~<span class=\"string\">/.bashrc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/home/jack/program/node-v12.16.0-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~./.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>if there are some permission like<br>\n&quot;checkPermissions Missing write access to /home/jack/node/lib/node_module&quot;</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R $(whoami) /home/jack/<span class=\"keyword\">node</span><span class=\"title\">/</span></span><br></pre></td></tr></table></figure>\n<h1>shadowsocks (ss)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/autoproxy.zip\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n<h1>trojan (service)</h1>\n<ul>\n<li>support .CentOS7+ ，Debian8+，Ubuntu 16.04+</li>\n</ul>\n<blockquote>\n<p>before install, check the port 80 and 443 is not be listen.</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/mark-logs-code-hub/trojan-wiz/master/ins.sh &amp;&amp; chmod +x ins.sh &amp;&amp; sudo bash ins.sh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># check service</span></span><br><span class=\"line\">systemctl status trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># start service</span></span><br><span class=\"line\">systemctl start trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># stop service</span></span><br><span class=\"line\">systemctl stop trojan-gfw</span><br><span class=\"line\"><span class=\"comment\"># show client config file.</span></span><br><span class=\"line\">cat /home/trojan/client.json</span><br></pre></td></tr></table></figure>\n<h1>nginx</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install </span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"comment\"># show and check config file</span></span><br><span class=\"line\">nginx -t</span><br><span class=\"line\"><span class=\"comment\"># start</span></span><br><span class=\"line\">nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># stop</span></span><br><span class=\"line\">pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>the config file is on 'nginx.conf’<br>\nconfig the 80 proxy to 8080(tomcat)</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> [::]:<span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html index.htm</span><br><span class=\"line\">\tserver_name <span class=\"number\">127.0.0.1:8080</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the static file to some subdomain,<br>\nlike in the director  /www/api</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> api.domains.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the proxy some request , like google map</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span>\t<span class=\"number\">80</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> gmap.domain.com;</span><br><span class=\"line\">\t<span class=\"attribute\">client_max_body_size</span> <span class=\"number\">20M</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">4</span> <span class=\"number\">4K</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">send_timeout</span> <span class=\"number\">600s</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> /kh &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> Host khm2.google.com;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://khm2.google.com;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> /vt &#123;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> Host mt0.google.cn;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_pass</span> http://mt0.google.cn;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1>mount (disk)</h1>\n<blockquote>\n<p>look disk info, find disk sign like ‘/dev/sda1’</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo fdisk -l</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>find file system type</p>\n</blockquote>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">sudo</span> <span class=\"keyword\">blkid</span></span><br><span class=\"line\"><span class=\"keyword\"># </span>will show disk <span class=\"meta\">info</span> <span class=\"keyword\">and </span>uuid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>edit config</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"regexp\">/etc/</span>fstab</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>in the last line ,add flow</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">UUID</span>=10B40A3\t\t/media/disk1\t\tntfs\tdefaults\t0 \t0</span><br><span class=\"line\">&gt; 10B40A3 is the uuid. <span class=\"keyword\">from</span> command </span><br><span class=\"line\">&gt; /media/disk\t\twhere the disk mount   <span class=\"string\">\"sudo blkid\"</span></span><br><span class=\"line\">&gt; ntfs\t\tfile system</span><br><span class=\"line\">&gt;0 (first)\tdisk backup</span><br><span class=\"line\">&gt;0 (second)\tdisk check (0 means don<span class=\"string\">'t backup  don'</span>t check</span><br></pre></td></tr></table></figure>\n<h2>Important info.</h2>\n<ul>\n<li>someday, I install windows 10 on another disk. then, called the disk cann’t write file for it.</li>\n<li>then. you will open your windows 10, and close the function &quot;fast startup &quot;, or called “fast boot”</li>\n</ul>\n<h1>idea</h1>\n<h2>1. download idea ultimate</h2>\n<h2>2. install</h2>\n<h2>3. use docker,create a license machine</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb</span><br></pre></td></tr></table></figure>\n<h2>4. type license server from docker ip address and port</h2>\n<blockquote>\n<p>like ‘<a href=\"http://localhost:1212\" target=\"_blank\" rel=\"noopener\">http://localhost:1212</a>’</p>\n</blockquote>\n<h1>Input method</h1>\n<ul>\n<li>you can install sogou input method by anyway for search. but !!!<br><br>\nafter you installed sogou input method,<br>\n<b>don’t</b>  install thrid method or do anything for input method.,<br><br>\notherwise, you will not see the sogou input method again.<br><br>\n(else if you reinstall your operation system. oh, that’s boring!)</li>\n</ul>\n<blockquote>\n<p>oh<br>\n0</p>\n</blockquote>\n<p>Try rm -rf ~/.config/fcitx and restart ubuntu, this fixed me at least, on xubuntu 16.04</p>\n"},{"title":"UsuallyUsedCommand","catalog":true,"date":"2019-05-15T13:36:41.000Z","subtitle":null,"header-img":null,"_content":"> 日常用的命令, 速查\n>\n\n# Ubuntu\n\n* enable root user\n```bash\nsudo passwd root\n```\n-----------------------\n* disabled root user\n\n```bash\nsudo passwd -l root\n```\n-----------------------\n* list listening tcp port\n```bash\nss -lnt\n```\n\n* show disk used size\n```bash\ndf -hl\n```\n\n# Docker\n\n* list all container\n\n```bash\n# list all container\ndocker ps -a\n```\n-----------------------\n* stop container\n```bash\ndocker stop f3c322\n```\n* start container\n```bash\ndocker start f3c322\n```\n-----------------------\n* list all images\n```bash\ndocker images -a\n```\n-----------------------\n* remove images\n```bash\ndocker rmi f3c322\n```\n-----------------------\n* use dockerfile built on remote server\n```bash\ndocker -H tcp://192.168.1.24:2375 build -t blog/190320 .\n```\n-----------------------\n* built container with alias\n```bash\ndocker run --name myBlog -d -p 8082:8080 4b22a4f3c322\n# 4b22a4f3c322 is images id\n```\n-----------------------\n* make a tomcat images with a Dockerfile\n>before this you need download jdk-8u171-linux-x64.tar.gz and apache-tomcat-8.5.39.tar.gz file\n\n```Dockerfile\n# this is a Dockerfile\nFROM ubuntu:16.04\n# now add java and tomcat support in the container\nADD jdk-8u171-linux-x64.tar.gz /usr/local/\nADD apache-tomcat-8.5.39.tar.gz /usr/local/\n# configuration of java and tomcat ENV\nENV JAVA_HOME /usr/local/jdk1.8.0_171\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nENV CATALINA_HOME /usr/local/apache-tomcat-8.5.39\nENV CATALINA_BASE /usr/local/apache-tomcat-8.5.39\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n# container listener port\nEXPOSE 8080\nCMD /usr/local/apache-tomcat-8.5.39/bin/catalina.sh run\n```\n> run this docker file\n```bash\ndocker build -t sample/tomcat8.5.39 .\n```\n\n* run tomcat, \n\n```bash\n# host port 7022 reflect container 8080 , \n# --restart=always   means always start when server start\n# -v means set a volume \n# b8df790a5ce7 is images id\ndocker run -d -p 7022:8080 --restart=always --name tomcat8.5.39 -v /media/disk1/tomcat8.5.39/webapps:/usr/local/apache-tomcat-8.5.39/webapps b8df790a5ce7\n```\n\n# Gradle\n* build.gradle file replace source\n```\nplugins {\n\tid 'org.springframework.boot' version '2.1.4.RELEASE'\n\tid 'java'\n\tid 'war'\n}\n\napply plugin: 'io.spring.dependency-management'\n\ngroup = 'com.jackshmily'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = '1.8'\n\nrepositories {\n\t// mavenCentral()\n\tmaven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}\n}\n\ndependencies {\n\timplementation 'org.springframework.boot:spring-boot-starter-jdbc'\n\timplementation 'org.springframework.boot:spring-boot-starter-security'\n\timplementation 'org.springframework.boot:spring-boot-starter-web'\n\truntimeOnly 'org.springframework.boot:spring-boot-devtools'\n\truntimeOnly 'mysql:mysql-connector-java'\n\tprovidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'\n\ttestImplementation 'org.springframework.boot:spring-boot-starter-test'\n\ttestImplementation 'org.springframework.security:spring-security-test'\n}\n```","source":"_posts/UsuallyUsedCommand.md","raw":"---\ntitle: UsuallyUsedCommand\ncatalog: true\ndate: 2019-05-15 21:36:41\nsubtitle:\nheader-img:\ntags:\n- Usually\n---\n> 日常用的命令, 速查\n>\n\n# Ubuntu\n\n* enable root user\n```bash\nsudo passwd root\n```\n-----------------------\n* disabled root user\n\n```bash\nsudo passwd -l root\n```\n-----------------------\n* list listening tcp port\n```bash\nss -lnt\n```\n\n* show disk used size\n```bash\ndf -hl\n```\n\n# Docker\n\n* list all container\n\n```bash\n# list all container\ndocker ps -a\n```\n-----------------------\n* stop container\n```bash\ndocker stop f3c322\n```\n* start container\n```bash\ndocker start f3c322\n```\n-----------------------\n* list all images\n```bash\ndocker images -a\n```\n-----------------------\n* remove images\n```bash\ndocker rmi f3c322\n```\n-----------------------\n* use dockerfile built on remote server\n```bash\ndocker -H tcp://192.168.1.24:2375 build -t blog/190320 .\n```\n-----------------------\n* built container with alias\n```bash\ndocker run --name myBlog -d -p 8082:8080 4b22a4f3c322\n# 4b22a4f3c322 is images id\n```\n-----------------------\n* make a tomcat images with a Dockerfile\n>before this you need download jdk-8u171-linux-x64.tar.gz and apache-tomcat-8.5.39.tar.gz file\n\n```Dockerfile\n# this is a Dockerfile\nFROM ubuntu:16.04\n# now add java and tomcat support in the container\nADD jdk-8u171-linux-x64.tar.gz /usr/local/\nADD apache-tomcat-8.5.39.tar.gz /usr/local/\n# configuration of java and tomcat ENV\nENV JAVA_HOME /usr/local/jdk1.8.0_171\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nENV CATALINA_HOME /usr/local/apache-tomcat-8.5.39\nENV CATALINA_BASE /usr/local/apache-tomcat-8.5.39\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n# container listener port\nEXPOSE 8080\nCMD /usr/local/apache-tomcat-8.5.39/bin/catalina.sh run\n```\n> run this docker file\n```bash\ndocker build -t sample/tomcat8.5.39 .\n```\n\n* run tomcat, \n\n```bash\n# host port 7022 reflect container 8080 , \n# --restart=always   means always start when server start\n# -v means set a volume \n# b8df790a5ce7 is images id\ndocker run -d -p 7022:8080 --restart=always --name tomcat8.5.39 -v /media/disk1/tomcat8.5.39/webapps:/usr/local/apache-tomcat-8.5.39/webapps b8df790a5ce7\n```\n\n# Gradle\n* build.gradle file replace source\n```\nplugins {\n\tid 'org.springframework.boot' version '2.1.4.RELEASE'\n\tid 'java'\n\tid 'war'\n}\n\napply plugin: 'io.spring.dependency-management'\n\ngroup = 'com.jackshmily'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = '1.8'\n\nrepositories {\n\t// mavenCentral()\n\tmaven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}\n}\n\ndependencies {\n\timplementation 'org.springframework.boot:spring-boot-starter-jdbc'\n\timplementation 'org.springframework.boot:spring-boot-starter-security'\n\timplementation 'org.springframework.boot:spring-boot-starter-web'\n\truntimeOnly 'org.springframework.boot:spring-boot-devtools'\n\truntimeOnly 'mysql:mysql-connector-java'\n\tprovidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'\n\ttestImplementation 'org.springframework.boot:spring-boot-starter-test'\n\ttestImplementation 'org.springframework.security:spring-security-test'\n}\n```","slug":"UsuallyUsedCommand","published":1,"updated":"2019-09-08T02:38:00.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg54000mynmpmtxdh4qx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>日常用的命令, 速查</p>\n</blockquote>\n<h1><span id=\"ubuntu\">Ubuntu</span></h1>\n<ul>\n<li>enable root user</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>disabled root user</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd -l root</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>list listening tcp port</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ss -lnt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>show disk used size</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -hl</span><br></pre></td></tr></table></figure>\n<h1><span id=\"docker\">Docker</span></h1>\n<ul>\n<li>list all container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># list all container</span></span><br><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>stop container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop f3c322</span><br></pre></td></tr></table></figure>\n<ul>\n<li>start container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start f3c322</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>list all images</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images -a</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>remove images</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi f3c322</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>use dockerfile built on remote server</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker -H tcp://192.168.1.24:2375 build -t blog/190320 .</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>built container with alias</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name myBlog -d -p 8082:8080 4b22a4f3c322</span><br><span class=\"line\"><span class=\"comment\"># 4b22a4f3c322 is images id</span></span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>make a tomcat images with a Dockerfile</li>\n</ul>\n<blockquote>\n<p>before this you need download jdk-8u171-linux-x64.tar.gz and apache-tomcat-8.5.39.tar.gz file</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># this is a Dockerfile</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">16.04</span></span><br><span class=\"line\"><span class=\"comment\"># now add java and tomcat support in the container</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> jdk-8u171-linux-x64.tar.gz /usr/<span class=\"built_in\">local</span>/</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> apache-tomcat-8.5.39.tar.gz /usr/<span class=\"built_in\">local</span>/</span></span><br><span class=\"line\"><span class=\"comment\"># configuration of java and tomcat ENV</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> JAVA_HOME /usr/local/jdk1.<span class=\"number\">8.0</span>_171</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CATALINA_HOME /usr/local/apache-tomcat-<span class=\"number\">8.5</span>.<span class=\"number\">39</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CATALINA_BASE /usr/local/apache-tomcat-<span class=\"number\">8.5</span>.<span class=\"number\">39</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class=\"line\"><span class=\"comment\"># container listener port</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> /usr/<span class=\"built_in\">local</span>/apache-tomcat-8.5.39/bin/catalina.sh run</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run this docker file</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t sample/tomcat8.5.39 .</span><br></pre></td></tr></table></figure>\n<ul>\n<li>run tomcat,</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># host port 7022 reflect container 8080 , </span></span><br><span class=\"line\"><span class=\"comment\"># --restart=always   means always start when server start</span></span><br><span class=\"line\"><span class=\"comment\"># -v means set a volume </span></span><br><span class=\"line\"><span class=\"comment\"># b8df790a5ce7 is images id</span></span><br><span class=\"line\">docker run -d -p 7022:8080 --restart=always --name tomcat8.5.39 -v /media/disk1/tomcat8.5.39/webapps:/usr/<span class=\"built_in\">local</span>/apache-tomcat-8.5.39/webapps b8df790a5ce7</span><br></pre></td></tr></table></figure>\n<h1><span id=\"gradle\">Gradle</span></h1>\n<ul>\n<li>build.gradle file replace source</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins &#123;</span><br><span class=\"line\">\tid <span class=\"string\">'org.springframework.boot'</span> version <span class=\"string\">'2.1.4.RELEASE'</span></span><br><span class=\"line\">\tid <span class=\"string\">'java'</span></span><br><span class=\"line\">\tid <span class=\"string\">'war'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'io.spring.dependency-management'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">group</span> = <span class=\"string\">'com.jackshmily'</span></span><br><span class=\"line\">version = <span class=\"string\">'0.0.1-SNAPSHOT'</span></span><br><span class=\"line\"><span class=\"keyword\">sourceCompatibility</span> = <span class=\"string\">'1.8'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// mavenCentral()</span></span><br><span class=\"line\">\tmaven&#123; url <span class=\"string\">'http://maven.aliyun.com/nexus/content/groups/public/'</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-jdbc'</span></span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-security'</span></span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-web'</span></span><br><span class=\"line\">\truntimeOnly <span class=\"string\">'org.springframework.boot:spring-boot-devtools'</span></span><br><span class=\"line\">\truntimeOnly <span class=\"string\">'mysql:mysql-connector-java'</span></span><br><span class=\"line\">\tprovidedRuntime <span class=\"string\">'org.springframework.boot:spring-boot-starter-tomcat'</span></span><br><span class=\"line\">\ttestImplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-test'</span></span><br><span class=\"line\">\ttestImplementation <span class=\"string\">'org.springframework.security:spring-security-test'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>日常用的命令, 速查</p>\n</blockquote>\n<h1>Ubuntu</h1>\n<ul>\n<li>enable root user</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>disabled root user</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd -l root</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>list listening tcp port</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ss -lnt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>show disk used size</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -hl</span><br></pre></td></tr></table></figure>\n<h1>Docker</h1>\n<ul>\n<li>list all container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># list all container</span></span><br><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>stop container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop f3c322</span><br></pre></td></tr></table></figure>\n<ul>\n<li>start container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start f3c322</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>list all images</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images -a</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>remove images</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi f3c322</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>use dockerfile built on remote server</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker -H tcp://192.168.1.24:2375 build -t blog/190320 .</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>built container with alias</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name myBlog -d -p 8082:8080 4b22a4f3c322</span><br><span class=\"line\"><span class=\"comment\"># 4b22a4f3c322 is images id</span></span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>make a tomcat images with a Dockerfile</li>\n</ul>\n<blockquote>\n<p>before this you need download jdk-8u171-linux-x64.tar.gz and apache-tomcat-8.5.39.tar.gz file</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># this is a Dockerfile</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">16.04</span></span><br><span class=\"line\"><span class=\"comment\"># now add java and tomcat support in the container</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> jdk-8u171-linux-x64.tar.gz /usr/<span class=\"built_in\">local</span>/</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> apache-tomcat-8.5.39.tar.gz /usr/<span class=\"built_in\">local</span>/</span></span><br><span class=\"line\"><span class=\"comment\"># configuration of java and tomcat ENV</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> JAVA_HOME /usr/local/jdk1.<span class=\"number\">8.0</span>_171</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CATALINA_HOME /usr/local/apache-tomcat-<span class=\"number\">8.5</span>.<span class=\"number\">39</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CATALINA_BASE /usr/local/apache-tomcat-<span class=\"number\">8.5</span>.<span class=\"number\">39</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class=\"line\"><span class=\"comment\"># container listener port</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> /usr/<span class=\"built_in\">local</span>/apache-tomcat-8.5.39/bin/catalina.sh run</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run this docker file</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t sample/tomcat8.5.39 .</span><br></pre></td></tr></table></figure>\n<ul>\n<li>run tomcat,</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># host port 7022 reflect container 8080 , </span></span><br><span class=\"line\"><span class=\"comment\"># --restart=always   means always start when server start</span></span><br><span class=\"line\"><span class=\"comment\"># -v means set a volume </span></span><br><span class=\"line\"><span class=\"comment\"># b8df790a5ce7 is images id</span></span><br><span class=\"line\">docker run -d -p 7022:8080 --restart=always --name tomcat8.5.39 -v /media/disk1/tomcat8.5.39/webapps:/usr/<span class=\"built_in\">local</span>/apache-tomcat-8.5.39/webapps b8df790a5ce7</span><br></pre></td></tr></table></figure>\n<h1>Gradle</h1>\n<ul>\n<li>build.gradle file replace source</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins &#123;</span><br><span class=\"line\">\tid <span class=\"string\">'org.springframework.boot'</span> version <span class=\"string\">'2.1.4.RELEASE'</span></span><br><span class=\"line\">\tid <span class=\"string\">'java'</span></span><br><span class=\"line\">\tid <span class=\"string\">'war'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'io.spring.dependency-management'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">group</span> = <span class=\"string\">'com.jackshmily'</span></span><br><span class=\"line\">version = <span class=\"string\">'0.0.1-SNAPSHOT'</span></span><br><span class=\"line\"><span class=\"keyword\">sourceCompatibility</span> = <span class=\"string\">'1.8'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// mavenCentral()</span></span><br><span class=\"line\">\tmaven&#123; url <span class=\"string\">'http://maven.aliyun.com/nexus/content/groups/public/'</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-jdbc'</span></span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-security'</span></span><br><span class=\"line\">\timplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-web'</span></span><br><span class=\"line\">\truntimeOnly <span class=\"string\">'org.springframework.boot:spring-boot-devtools'</span></span><br><span class=\"line\">\truntimeOnly <span class=\"string\">'mysql:mysql-connector-java'</span></span><br><span class=\"line\">\tprovidedRuntime <span class=\"string\">'org.springframework.boot:spring-boot-starter-tomcat'</span></span><br><span class=\"line\">\ttestImplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-test'</span></span><br><span class=\"line\">\ttestImplementation <span class=\"string\">'org.springframework.security:spring-security-test'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Vi","catalog":true,"date":"2019-12-07T05:01:28.000Z","subtitle":"how to use vi","header-img":null,"_content":"\n# 说明.\n\n* 以下快捷操作，均是在　'命令'　模式下.\n\n* 移动行或者光标前后移动\n```\n    > h  : 向前移动一位.\n    > j  : 向下移动一行\n    > k  : 向上移动一行\n    > l  : 向右移动一位.\n    > 4l : 往右移动4位.\n```\n* 行首或行为.\n```\n    > 0  : 移动到行首\n    > $  : 移动到行尾\n```\n* 一段移动.\n```\n    > b  : 往前移动一段(类似于 ctrl + \\<=)\n    > w  : 往后移动一段.\n```\n* 文件行数定位.\n```\n    > G  : 移到最后一行.\n    > 11G : 移动到11行..\n    > 1G : 移动到文件首行.\n```\n* 单个替换.\n```\n    > rr: 用'r'替换掉光标位置的文本.\n    > rA: 用'A'替换掉光标位置的文本.\n```\n* 替换模式.\n```\n    >　R:　　替换模式下，所有的输入都会覆盖掉当前光标位置的文本.\n```\n* 删除.\n```\n    > x:   删除当前位置的文本.\n```\n* 粘贴.\n```\n    > p : 在当前位置后，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.\n    > P : 在当前位置前，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.\n```\n* 内容删除.\n```\n    > c0 : 删除行首到当前位置(删除部分，不包括光标位置的文本.)\n    > c$ : 删除当前位置到行为的内容(删除部分，包括当前光标位置.)\n    > cc : 清空当前行内容\n    > D: 删除当前位置到行为的内容(删除部分，包括当前光标位置.完成后，光标会往前移动一位)\n    > dG: 删除当前行以及以后的内容.\n\n    > dw: 删除下一个段.\n    > d2w: 删除下2段\n    > db: 删除前一段.\n    > d3b: 删除前3段.\n    > dd : 删除当前行.\n    > 2dd : 删除2行\n```\n* 其他.\n```\n    >~: 将光标位置的字母转换成大写.并往后移动一位.\n    > u: 回滚操作. 按多次则回滚多次\n```\n# English\n\n* line and single letter.\n> h  : move left a letter.<br>\n> j  : move next line<br>\n> k  : move previouse line<br>\n> l  : move right a letter.\n\n> 0  : current line first position.<br>\n> $  : current line last position.<br>\n\n> b  : previous word<br>\n> w  : next word\n\n> 4l : move right 4 letters.\n\n\n> G  : move to end line of the file.<br>\n> 11G : move to line 11 .<br>\n\n> rr: replace current position to 'r'<br>\n> rA: replace current position to 'A'<br>\n\n> R:  change to replace mode. now typed letter will replace current letter.\n\n> x:   delete a letter which is on the cursor position<br>\n\n> p : paste block after current line.<br>\n> P : paste block content before current line<br>\n\n> c0 : delete from first position to current position(not include current posotion , will not move cursor ,will convert to 'insert' mode)<br>\n> c$ : delete from current position to end of line.(include current position, will not move cursor, will convert to 'insert' mode)<br> \n> cc : clear content of current line<br>\n\n> ~: convert lowercase to uppercase. and after that move position to next position.<br>\n> dw: delete next one word.<br>\n> d2w: delete next two words.<br>\n> db: delete previous one word.<br>\n> d3b: delete previous three words.<br>\n> dd : delete current line.<br>\n> 2dd : delete current line and next line<br>\n\n> D: delete from current position to end of line.and move cursor to previous position (not include current position)<br>\n\n> u: rollback your last execution.(type many means rollback many times)<br>\n\n\n\n\n","source":"_posts/Vi.md","raw":"---\ntitle: Vi\ncatalog: true\ndate: 2019-12-07 13:01:28\nsubtitle: \"how to use vi\"\nheader-img:\ntags:\n- Linux\n- Vi\n---\n\n# 说明.\n\n* 以下快捷操作，均是在　'命令'　模式下.\n\n* 移动行或者光标前后移动\n```\n    > h  : 向前移动一位.\n    > j  : 向下移动一行\n    > k  : 向上移动一行\n    > l  : 向右移动一位.\n    > 4l : 往右移动4位.\n```\n* 行首或行为.\n```\n    > 0  : 移动到行首\n    > $  : 移动到行尾\n```\n* 一段移动.\n```\n    > b  : 往前移动一段(类似于 ctrl + \\<=)\n    > w  : 往后移动一段.\n```\n* 文件行数定位.\n```\n    > G  : 移到最后一行.\n    > 11G : 移动到11行..\n    > 1G : 移动到文件首行.\n```\n* 单个替换.\n```\n    > rr: 用'r'替换掉光标位置的文本.\n    > rA: 用'A'替换掉光标位置的文本.\n```\n* 替换模式.\n```\n    >　R:　　替换模式下，所有的输入都会覆盖掉当前光标位置的文本.\n```\n* 删除.\n```\n    > x:   删除当前位置的文本.\n```\n* 粘贴.\n```\n    > p : 在当前位置后，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.\n    > P : 在当前位置前，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.\n```\n* 内容删除.\n```\n    > c0 : 删除行首到当前位置(删除部分，不包括光标位置的文本.)\n    > c$ : 删除当前位置到行为的内容(删除部分，包括当前光标位置.)\n    > cc : 清空当前行内容\n    > D: 删除当前位置到行为的内容(删除部分，包括当前光标位置.完成后，光标会往前移动一位)\n    > dG: 删除当前行以及以后的内容.\n\n    > dw: 删除下一个段.\n    > d2w: 删除下2段\n    > db: 删除前一段.\n    > d3b: 删除前3段.\n    > dd : 删除当前行.\n    > 2dd : 删除2行\n```\n* 其他.\n```\n    >~: 将光标位置的字母转换成大写.并往后移动一位.\n    > u: 回滚操作. 按多次则回滚多次\n```\n# English\n\n* line and single letter.\n> h  : move left a letter.<br>\n> j  : move next line<br>\n> k  : move previouse line<br>\n> l  : move right a letter.\n\n> 0  : current line first position.<br>\n> $  : current line last position.<br>\n\n> b  : previous word<br>\n> w  : next word\n\n> 4l : move right 4 letters.\n\n\n> G  : move to end line of the file.<br>\n> 11G : move to line 11 .<br>\n\n> rr: replace current position to 'r'<br>\n> rA: replace current position to 'A'<br>\n\n> R:  change to replace mode. now typed letter will replace current letter.\n\n> x:   delete a letter which is on the cursor position<br>\n\n> p : paste block after current line.<br>\n> P : paste block content before current line<br>\n\n> c0 : delete from first position to current position(not include current posotion , will not move cursor ,will convert to 'insert' mode)<br>\n> c$ : delete from current position to end of line.(include current position, will not move cursor, will convert to 'insert' mode)<br> \n> cc : clear content of current line<br>\n\n> ~: convert lowercase to uppercase. and after that move position to next position.<br>\n> dw: delete next one word.<br>\n> d2w: delete next two words.<br>\n> db: delete previous one word.<br>\n> d3b: delete previous three words.<br>\n> dd : delete current line.<br>\n> 2dd : delete current line and next line<br>\n\n> D: delete from current position to end of line.and move cursor to previous position (not include current position)<br>\n\n> u: rollback your last execution.(type many means rollback many times)<br>\n\n\n\n\n","slug":"Vi","published":1,"updated":"2019-12-07T12:59:12.840Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg5g001cynmprils3wkt","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1><span id=\"说明\">说明.</span></h1>\n<ul>\n<li>\n<p>以下快捷操作，均是在　‘命令’　模式下.</p>\n</li>\n<li>\n<p>移动行或者光标前后移动</p>\n</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; h  : 向前移动一位.</span><br><span class=\"line\">&gt; j  : 向下移动一行</span><br><span class=\"line\">&gt; k  : 向上移动一行</span><br><span class=\"line\">&gt; l  : 向右移动一位.</span><br><span class=\"line\">&gt; <span class=\"number\">4</span>l : 往右移动4位.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>行首或行为.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"number\">0</span>  : 移动到行首</span><br><span class=\"line\">&gt; $  : 移动到行尾</span><br></pre></td></tr></table></figure>\n<ul>\n<li>一段移动.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; b  : 往前移动一段(类似于 <span class=\"type\">ctrl</span> + \\&lt;=)</span><br><span class=\"line\">&gt; w  : 往后移动一段.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>文件行数定位.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; G  : 移到最后一行.</span><br><span class=\"line\">&gt; <span class=\"number\">11</span>G : 移动到11行..</span><br><span class=\"line\">&gt; <span class=\"number\">1</span>G : 移动到文件首行.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>单个替换.</li>\n</ul>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"string\">rr:</span> 用<span class=\"string\">'r'</span>替换掉光标位置的文本.</span><br><span class=\"line\">&gt; <span class=\"string\">rA:</span> 用<span class=\"string\">'A'</span>替换掉光标位置的文本.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>替换模式.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt;　R:　　替换模式下，所有的输入都会覆盖掉当前光标位置的文本.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; x:   删除当前位置的文本.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>粘贴.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; p : 在当前位置后，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.</span><br><span class=\"line\">&gt; P : 在当前位置前，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>内容删除.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; c0 : 删除行首到当前位置(删除部分，不包括光标位置的文本.)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; c$ : 删除当前位置到行为的内容(删除部分，包括当前光标位置.)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; cc : 清空当前行内容</span></span><br><span class=\"line\"><span class=\"quote\">&gt; D: 删除当前位置到行为的内容(删除部分，包括当前光标位置.完成后，光标会往前移动一位)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; dG: 删除当前行以及以后的内容.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; dw: 删除下一个段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; d2w: 删除下2段</span></span><br><span class=\"line\"><span class=\"quote\">&gt; db: 删除前一段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; d3b: 删除前3段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; dd : 删除当前行.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 2dd : 删除2行</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>其他.</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">~: 将光标位置的字母转换成大写.并往后移动一位.</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> u: 回滚操作. 按多次则回滚多次</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"english\">English</span></h1>\n<ul>\n<li>line and single letter.</li>\n</ul>\n<blockquote>\n<p>h  : move left a letter.<br><br>\nj  : move next line<br><br>\nk  : move previouse line<br><br>\nl  : move right a letter.</p>\n</blockquote>\n<blockquote>\n<p>0  : current line first position.<br><br>\n$  : current line last position.<br></p>\n</blockquote>\n<blockquote>\n<p>b  : previous word<br><br>\nw  : next word</p>\n</blockquote>\n<blockquote>\n<p>4l : move right 4 letters.</p>\n</blockquote>\n<blockquote>\n<p>G  : move to end line of the file.<br><br>\n11G : move to line 11 .<br></p>\n</blockquote>\n<blockquote>\n<p>rr: replace current position to 'r’<br><br>\nrA: replace current position to ‘A’<br></p>\n</blockquote>\n<blockquote>\n<p>R:  change to replace mode. now typed letter will replace current letter.</p>\n</blockquote>\n<blockquote>\n<p>x:   delete a letter which is on the cursor position<br></p>\n</blockquote>\n<blockquote>\n<p>p : paste block after current line.<br><br>\nP : paste block content before current line<br></p>\n</blockquote>\n<blockquote>\n<p>c0 : delete from first position to current position(not include current posotion , will not move cursor ,will convert to ‘insert’ mode)<br><br>\nc$ : delete from current position to end of line.(include current position, will not move cursor, will convert to ‘insert’ mode)<br><br>\ncc : clear content of current line<br></p>\n</blockquote>\n<blockquote>\n<p>~: convert lowercase to uppercase. and after that move position to next position.<br><br>\ndw: delete next one word.<br><br>\nd2w: delete next two words.<br><br>\ndb: delete previous one word.<br><br>\nd3b: delete previous three words.<br><br>\ndd : delete current line.<br><br>\n2dd : delete current line and next line<br></p>\n</blockquote>\n<blockquote>\n<p>D: delete from current position to end of line.and move cursor to previous position (not include current position)<br></p>\n</blockquote>\n<blockquote>\n<p>u: rollback your last execution.(type many means rollback many times)<br></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1>说明.</h1>\n<ul>\n<li>\n<p>以下快捷操作，均是在　‘命令’　模式下.</p>\n</li>\n<li>\n<p>移动行或者光标前后移动</p>\n</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; h  : 向前移动一位.</span><br><span class=\"line\">&gt; j  : 向下移动一行</span><br><span class=\"line\">&gt; k  : 向上移动一行</span><br><span class=\"line\">&gt; l  : 向右移动一位.</span><br><span class=\"line\">&gt; <span class=\"number\">4</span>l : 往右移动4位.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>行首或行为.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"number\">0</span>  : 移动到行首</span><br><span class=\"line\">&gt; $  : 移动到行尾</span><br></pre></td></tr></table></figure>\n<ul>\n<li>一段移动.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; b  : 往前移动一段(类似于 <span class=\"type\">ctrl</span> + \\&lt;=)</span><br><span class=\"line\">&gt; w  : 往后移动一段.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>文件行数定位.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; G  : 移到最后一行.</span><br><span class=\"line\">&gt; <span class=\"number\">11</span>G : 移动到11行..</span><br><span class=\"line\">&gt; <span class=\"number\">1</span>G : 移动到文件首行.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>单个替换.</li>\n</ul>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"string\">rr:</span> 用<span class=\"string\">'r'</span>替换掉光标位置的文本.</span><br><span class=\"line\">&gt; <span class=\"string\">rA:</span> 用<span class=\"string\">'A'</span>替换掉光标位置的文本.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>替换模式.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt;　R:　　替换模式下，所有的输入都会覆盖掉当前光标位置的文本.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; x:   删除当前位置的文本.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>粘贴.</li>\n</ul>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; p : 在当前位置后，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.</span><br><span class=\"line\">&gt; P : 在当前位置前，粘贴内容.　如果是多行，那么将会从这行后开始粘贴.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>内容删除.</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; c0 : 删除行首到当前位置(删除部分，不包括光标位置的文本.)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; c$ : 删除当前位置到行为的内容(删除部分，包括当前光标位置.)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; cc : 清空当前行内容</span></span><br><span class=\"line\"><span class=\"quote\">&gt; D: 删除当前位置到行为的内容(删除部分，包括当前光标位置.完成后，光标会往前移动一位)</span></span><br><span class=\"line\"><span class=\"quote\">&gt; dG: 删除当前行以及以后的内容.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; dw: 删除下一个段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; d2w: 删除下2段</span></span><br><span class=\"line\"><span class=\"quote\">&gt; db: 删除前一段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; d3b: 删除前3段.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; dd : 删除当前行.</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 2dd : 删除2行</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>其他.</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">~: 将光标位置的字母转换成大写.并往后移动一位.</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> u: 回滚操作. 按多次则回滚多次</span></span><br></pre></td></tr></table></figure>\n<h1>English</h1>\n<ul>\n<li>line and single letter.</li>\n</ul>\n<blockquote>\n<p>h  : move left a letter.<br><br>\nj  : move next line<br><br>\nk  : move previouse line<br><br>\nl  : move right a letter.</p>\n</blockquote>\n<blockquote>\n<p>0  : current line first position.<br><br>\n$  : current line last position.<br></p>\n</blockquote>\n<blockquote>\n<p>b  : previous word<br><br>\nw  : next word</p>\n</blockquote>\n<blockquote>\n<p>4l : move right 4 letters.</p>\n</blockquote>\n<blockquote>\n<p>G  : move to end line of the file.<br><br>\n11G : move to line 11 .<br></p>\n</blockquote>\n<blockquote>\n<p>rr: replace current position to 'r’<br><br>\nrA: replace current position to ‘A’<br></p>\n</blockquote>\n<blockquote>\n<p>R:  change to replace mode. now typed letter will replace current letter.</p>\n</blockquote>\n<blockquote>\n<p>x:   delete a letter which is on the cursor position<br></p>\n</blockquote>\n<blockquote>\n<p>p : paste block after current line.<br><br>\nP : paste block content before current line<br></p>\n</blockquote>\n<blockquote>\n<p>c0 : delete from first position to current position(not include current posotion , will not move cursor ,will convert to ‘insert’ mode)<br><br>\nc$ : delete from current position to end of line.(include current position, will not move cursor, will convert to ‘insert’ mode)<br><br>\ncc : clear content of current line<br></p>\n</blockquote>\n<blockquote>\n<p>~: convert lowercase to uppercase. and after that move position to next position.<br><br>\ndw: delete next one word.<br><br>\nd2w: delete next two words.<br><br>\ndb: delete previous one word.<br><br>\nd3b: delete previous three words.<br><br>\ndd : delete current line.<br><br>\n2dd : delete current line and next line<br></p>\n</blockquote>\n<blockquote>\n<p>D: delete from current position to end of line.and move cursor to previous position (not include current position)<br></p>\n</blockquote>\n<blockquote>\n<p>u: rollback your last execution.(type many means rollback many times)<br></p>\n</blockquote>\n"},{"title":"ubuntu-install-font","catalog":true,"date":"2019-12-26T15:54:30.000Z","subtitle":null,"header-img":null,"_content":">How to install font on ubuntu.<br>\n* If your arcgis server print gp can't print Chinese, after installed font. it will be resolved.\n----------------------\n\n##  Get font file.\n>Usually we can find it on windows C:/Windows/Fonts\n\n##  Saved font.\n> save font file on you ubuntu this dir.(if don't have, please create it)\n```bash\n/usr/share/font/FromWindows\n```\n\n##  Change File Property.\n```bash\nchmod 755 ./*\n```\n\n## Run flow command.\n\n```bash\nmkfontscale\n# if command not exist. use \"apt install xfonts-utils\" install it.\n# if don't have \"apt\", use \"yum install mkfontscale\" install it.\n\n# then run flow.\nmkfontdir\n```\n\n## Run flow command.\n\n```bash\nfc-cache -fv\n# if command not found, use \"apt install fontconfig\",\n# if \"apt\" is not exists. use \"yum install fontconfig\".\n```\n\n## Check installed font.\n\n```bash\nfc-list\n## check Chinese font.\nfc-list :lang=zh\n```\n\n\n\n\n\n\n\n","source":"_posts/ubuntu-install-font.md","raw":"---\ntitle: ubuntu-install-font\ncatalog: true\ndate: 2019-12-26 23:54:30\nsubtitle:\nheader-img:\ntags:\n- Linux\n- Font\n---\n>How to install font on ubuntu.<br>\n* If your arcgis server print gp can't print Chinese, after installed font. it will be resolved.\n----------------------\n\n##  Get font file.\n>Usually we can find it on windows C:/Windows/Fonts\n\n##  Saved font.\n> save font file on you ubuntu this dir.(if don't have, please create it)\n```bash\n/usr/share/font/FromWindows\n```\n\n##  Change File Property.\n```bash\nchmod 755 ./*\n```\n\n## Run flow command.\n\n```bash\nmkfontscale\n# if command not exist. use \"apt install xfonts-utils\" install it.\n# if don't have \"apt\", use \"yum install mkfontscale\" install it.\n\n# then run flow.\nmkfontdir\n```\n\n## Run flow command.\n\n```bash\nfc-cache -fv\n# if command not found, use \"apt install fontconfig\",\n# if \"apt\" is not exists. use \"yum install fontconfig\".\n```\n\n## Check installed font.\n\n```bash\nfc-list\n## check Chinese font.\nfc-list :lang=zh\n```\n\n\n\n\n\n\n\n","slug":"ubuntu-install-font","published":1,"updated":"2019-12-26T16:14:27.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg5i001eynmpg2vkhubd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>How to install font on ubuntu.<br></p>\n</blockquote>\n<ul>\n<li>If your arcgis server print gp can’t print Chinese, after installed font. it will be resolved.</li>\n</ul>\n<hr>\n<h2><span id=\"get-font-file\">Get font file.</span></h2>\n<blockquote>\n<p>Usually we can find it on windows C:/Windows/Fonts</p>\n</blockquote>\n<h2><span id=\"saved-font\">Saved font.</span></h2>\n<blockquote>\n<p>save font file on you ubuntu this dir.(if don’t have, please create it)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/share/font/FromWindows</span><br></pre></td></tr></table></figure>\n<h2><span id=\"change-file-property\">Change File Property.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 ./*</span><br></pre></td></tr></table></figure>\n<h2><span id=\"run-flow-command\">Run flow command.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfontscale</span><br><span class=\"line\"><span class=\"comment\"># if command not exist. use \"apt install xfonts-utils\" install it.</span></span><br><span class=\"line\"><span class=\"comment\"># if don't have \"apt\", use \"yum install mkfontscale\" install it.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># then run flow.</span></span><br><span class=\"line\">mkfontdir</span><br></pre></td></tr></table></figure>\n<h2><span id=\"run-flow-command\">Run flow command.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">fc</span>-cache -fv</span><br><span class=\"line\"><span class=\"comment\"># if command not found, use \"apt install fontconfig\",</span></span><br><span class=\"line\"><span class=\"comment\"># if \"apt\" is not exists. use \"yum install fontconfig\".</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"check-installed-font\">Check installed font.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">fc</span>-list</span><br><span class=\"line\"><span class=\"comment\">## check Chinese font.</span></span><br><span class=\"line\"><span class=\"built_in\">fc</span>-list :lang=zh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>How to install font on ubuntu.<br></p>\n</blockquote>\n<ul>\n<li>If your arcgis server print gp can’t print Chinese, after installed font. it will be resolved.</li>\n</ul>\n<hr>\n<h2>Get font file.</h2>\n<blockquote>\n<p>Usually we can find it on windows C:/Windows/Fonts</p>\n</blockquote>\n<h2>Saved font.</h2>\n<blockquote>\n<p>save font file on you ubuntu this dir.(if don’t have, please create it)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/share/font/FromWindows</span><br></pre></td></tr></table></figure>\n<h2>Change File Property.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 ./*</span><br></pre></td></tr></table></figure>\n<h2>Run flow command.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfontscale</span><br><span class=\"line\"><span class=\"comment\"># if command not exist. use \"apt install xfonts-utils\" install it.</span></span><br><span class=\"line\"><span class=\"comment\"># if don't have \"apt\", use \"yum install mkfontscale\" install it.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># then run flow.</span></span><br><span class=\"line\">mkfontdir</span><br></pre></td></tr></table></figure>\n<h2>Run flow command.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">fc</span>-cache -fv</span><br><span class=\"line\"><span class=\"comment\"># if command not found, use \"apt install fontconfig\",</span></span><br><span class=\"line\"><span class=\"comment\"># if \"apt\" is not exists. use \"yum install fontconfig\".</span></span><br></pre></td></tr></table></figure>\n<h2>Check installed font.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">fc</span>-list</span><br><span class=\"line\"><span class=\"comment\">## check Chinese font.</span></span><br><span class=\"line\"><span class=\"built_in\">fc</span>-list :lang=zh</span><br></pre></td></tr></table></figure>\n"},{"title":"常用Linux命令(小松鼠)","catalog":true,"date":"2018-04-07T02:03:06.000Z","subtitle":"日常折腾Ubuntu","header-img":"Ubuntu.png","catagories":["Linux"],"_content":"> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","source":"_posts/常用Linux命令-小松鼠.md","raw":"---\ntitle: 常用Linux命令(小松鼠)\ncatalog: true\ndate: 2018-04-07 10:03:06\nsubtitle: \"日常折腾Ubuntu\"\nheader-img: \"Ubuntu.png\"\ntags:\n- Linux\n- Ubuntu\ncatagories:\n- Linux\n---\n> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","slug":"常用Linux命令-小松鼠","published":1,"updated":"2018-07-11T15:03:12.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg5k001hynmpcppct00r","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1><span id=\"rm\">rm</span></h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1><span id=\"cp\">cp</span></h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1><span id=\"mv\">mv</span></h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"md5\">md5</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1><span id=\"install-deb\">install .deb</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1><span id=\"boot-u-disk-make\">boot u-disk make</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1>rm</h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1>cp</h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1>mv</h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1>md5</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1>install .deb</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1>boot u-disk make</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>"},{"title":"网络工具","catalog":true,"date":"2018-10-27T16:45:29.000Z","subtitle":"nc,curl","header-img":null,"catagories":["Linux","Network"],"_content":"## nc(netcat) 强大的网络工具\n### 检测端口开放:\n> 扫描 192.168.2.3的8857-8890端口\n```bash\nnc -vz 192.168.2.3 8857-8890\n```\n\n### 建立TCP监听\n>监听本机 2389端口(tcp)\n```bash\nnc -l 2389\n```\n\n### 连接端口(tcp)\n>连接192.168.2.3的2389\n```bash\nnc 192.168.2.3 2389\n```\n* 如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中\n* windows中使用 telnet建立连接\n### 未完待续...\n\n\n## curl (文件传输工具,支持http,https,ftp)\n### 请求内容\n>请求某网站的主页\n```bash\ncurl www.demo-site.com\n```\n### 未完待续...","source":"_posts/网络工具.md","raw":"---\ntitle: 网络工具\ncatalog: true\ndate: 2018-10-28 00:45:29\nsubtitle: nc,curl\nheader-img:\ntags:\n- Linux\n- Network\ncatagories:\n- Linux\n- Network\n---\n## nc(netcat) 强大的网络工具\n### 检测端口开放:\n> 扫描 192.168.2.3的8857-8890端口\n```bash\nnc -vz 192.168.2.3 8857-8890\n```\n\n### 建立TCP监听\n>监听本机 2389端口(tcp)\n```bash\nnc -l 2389\n```\n\n### 连接端口(tcp)\n>连接192.168.2.3的2389\n```bash\nnc 192.168.2.3 2389\n```\n* 如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中\n* windows中使用 telnet建立连接\n### 未完待续...\n\n\n## curl (文件传输工具,支持http,https,ftp)\n### 请求内容\n>请求某网站的主页\n```bash\ncurl www.demo-site.com\n```\n### 未完待续...","slug":"网络工具","published":1,"updated":"2018-10-27T17:02:01.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg5l001iynmpzct3k2fj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2><span id=\"ncnetcat-强大的网络工具\">nc(netcat) 强大的网络工具</span></h2>\n<h3><span id=\"检测端口开放\">检测端口开放:</span></h3>\n<blockquote>\n<p>扫描 192.168.2.3的8857-8890端口</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.2.3 8857-8890</span><br></pre></td></tr></table></figure>\n<h3><span id=\"建立tcp监听\">建立TCP监听</span></h3>\n<blockquote>\n<p>监听本机 2389端口(tcp)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l 2389</span><br></pre></td></tr></table></figure>\n<h3><span id=\"连接端口tcp\">连接端口(tcp)</span></h3>\n<blockquote>\n<p>连接192.168.2.3的2389</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 192.168.2.3 2389</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中</li>\n<li>windows中使用 telnet建立连接</li>\n</ul>\n<h3><span id=\"未完待续\">未完待续…</span></h3>\n<h2><span id=\"curl-文件传输工具支持httphttpsftp\">curl (文件传输工具,支持http,https,ftp)</span></h2>\n<h3><span id=\"请求内容\">请求内容</span></h3>\n<blockquote>\n<p>请求某网站的主页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl www.demo-site.com</span><br></pre></td></tr></table></figure>\n<h3><span id=\"未完待续\">未完待续…</span></h3>\n","site":{"data":{}},"excerpt":"","more":"<h2>nc(netcat) 强大的网络工具</h2>\n<h3>检测端口开放:</h3>\n<blockquote>\n<p>扫描 192.168.2.3的8857-8890端口</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.2.3 8857-8890</span><br></pre></td></tr></table></figure>\n<h3>建立TCP监听</h3>\n<blockquote>\n<p>监听本机 2389端口(tcp)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l 2389</span><br></pre></td></tr></table></figure>\n<h3>连接端口(tcp)</h3>\n<blockquote>\n<p>连接192.168.2.3的2389</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 192.168.2.3 2389</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中</li>\n<li>windows中使用 telnet建立连接</li>\n</ul>\n<h3>未完待续…</h3>\n<h2>curl (文件传输工具,支持http,https,ftp)</h2>\n<h3>请求内容</h3>\n<blockquote>\n<p>请求某网站的主页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl www.demo-site.com</span><br></pre></td></tr></table></figure>\n<h3>未完待续…</h3>\n"},{"title":"装机踩坑日常","catalog":true,"date":"2020-03-23T14:00:36.000Z","subtitle":null,"header-img":null,"catagories":["装机"],"_content":"\n## 关于装机和硬件方面遇到的坑.\n\n### 1. 更换内存条.\n\n* 理想中的剧本: 内存条插入到空余的主板内存插槽上,开机,读取到内存,over.\n* 而现实是, 插入了内存,没反应.取下之前安装上的内存下来看,结果再插回去也不行了.\n    >各种翻车.\n\n* 结果是: 内存插槽进灰了.  或者内存条金手指部分氧化了,接触不良.\n\n* 解决办法.\n    * 内存槽:\n        1. 用牙刷来刷一下(不要有水)\n        2. 用A4纸,叠成内存条的厚度,然后,模拟插入几次,充分接触插槽.\n    * 内存条:\n        1. 用铅笔来涂一下金手指\n        2. 再用橡皮擦把铅笔的痕迹擦去.\n        3. 用牙刷把铅笔泥刷干净.\n\n* 然后,你就会发现,内存和插槽,正常了 ! 开机! 完事儿!\n","source":"_posts/装机踩坑日常.md","raw":"---\ntitle: 装机踩坑日常\ncatalog: true\ndate: 2020-03-23 22:00:36\nsubtitle:\nheader-img:\ntags:\n- 装机\ncatagories:\n- 装机\n---\n\n## 关于装机和硬件方面遇到的坑.\n\n### 1. 更换内存条.\n\n* 理想中的剧本: 内存条插入到空余的主板内存插槽上,开机,读取到内存,over.\n* 而现实是, 插入了内存,没反应.取下之前安装上的内存下来看,结果再插回去也不行了.\n    >各种翻车.\n\n* 结果是: 内存插槽进灰了.  或者内存条金手指部分氧化了,接触不良.\n\n* 解决办法.\n    * 内存槽:\n        1. 用牙刷来刷一下(不要有水)\n        2. 用A4纸,叠成内存条的厚度,然后,模拟插入几次,充分接触插槽.\n    * 内存条:\n        1. 用铅笔来涂一下金手指\n        2. 再用橡皮擦把铅笔的痕迹擦去.\n        3. 用牙刷把铅笔泥刷干净.\n\n* 然后,你就会发现,内存和插槽,正常了 ! 开机! 完事儿!\n","slug":"装机踩坑日常","published":1,"updated":"2020-04-08T15:53:12.577Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc8utg5n001kynmpn394npz7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2><span id=\"关于装机和硬件方面遇到的坑\">关于装机和硬件方面遇到的坑.</span></h2>\n<h3><span id=\"1-更换内存条\">1. 更换内存条.</span></h3>\n<ul>\n<li>\n<p>理想中的剧本: 内存条插入到空余的主板内存插槽上,开机,读取到内存,over.</p>\n</li>\n<li>\n<p>而现实是, 插入了内存,没反应.取下之前安装上的内存下来看,结果再插回去也不行了.</p>\n<blockquote>\n<p>各种翻车.</p>\n</blockquote>\n</li>\n<li>\n<p>结果是: 内存插槽进灰了.  或者内存条金手指部分氧化了,接触不良.</p>\n</li>\n<li>\n<p>解决办法.</p>\n<ul>\n<li>内存槽:\n<ol>\n<li>用牙刷来刷一下(不要有水)</li>\n<li>用A4纸,叠成内存条的厚度,然后,模拟插入几次,充分接触插槽.</li>\n</ol>\n</li>\n<li>内存条:\n<ol>\n<li>用铅笔来涂一下金手指</li>\n<li>再用橡皮擦把铅笔的痕迹擦去.</li>\n<li>用牙刷把铅笔泥刷干净.</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>然后,你就会发现,内存和插槽,正常了 ! 开机! 完事儿!</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2>关于装机和硬件方面遇到的坑.</h2>\n<h3>1. 更换内存条.</h3>\n<ul>\n<li>\n<p>理想中的剧本: 内存条插入到空余的主板内存插槽上,开机,读取到内存,over.</p>\n</li>\n<li>\n<p>而现实是, 插入了内存,没反应.取下之前安装上的内存下来看,结果再插回去也不行了.</p>\n<blockquote>\n<p>各种翻车.</p>\n</blockquote>\n</li>\n<li>\n<p>结果是: 内存插槽进灰了.  或者内存条金手指部分氧化了,接触不良.</p>\n</li>\n<li>\n<p>解决办法.</p>\n<ul>\n<li>内存槽:\n<ol>\n<li>用牙刷来刷一下(不要有水)</li>\n<li>用A4纸,叠成内存条的厚度,然后,模拟插入几次,充分接触插槽.</li>\n</ol>\n</li>\n<li>内存条:\n<ol>\n<li>用铅笔来涂一下金手指</li>\n<li>再用橡皮擦把铅笔的痕迹擦去.</li>\n<li>用牙刷把铅笔泥刷干净.</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>然后,你就会发现,内存和插槽,正常了 ! 开机! 完事儿!</p>\n</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","slug":"Ubuntu.png","post":"ckc8utg5k001hynmpcppct00r","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ckc8utg4i0001ynmpiht0eaam","tag_id":"ckc8utg4n0003ynmpdmvzetco","_id":"ckc8utg4r0008ynmp1gxs1klu"},{"post_id":"ckc8utg4l0002ynmp5z4lumur","tag_id":"ckc8utg4r0007ynmpqqvskeoz","_id":"ckc8utg51000gynmpqa18ydjf"},{"post_id":"ckc8utg4l0002ynmp5z4lumur","tag_id":"ckc8utg4u000bynmp1346mc4e","_id":"ckc8utg52000iynmpeui53azl"},{"post_id":"ckc8utg4o0004ynmpj02zudfr","tag_id":"ckc8utg4r0007ynmpqqvskeoz","_id":"ckc8utg54000lynmpb45dgxlo"},{"post_id":"ckc8utg4p0005ynmptvqs5d6s","tag_id":"ckc8utg53000jynmpt0qvross","_id":"ckc8utg55000oynmprrr5vpn5"},{"post_id":"ckc8utg4q0006ynmpmbuu6rka","tag_id":"ckc8utg55000nynmpohztusl1","_id":"ckc8utg56000qynmpsb506ddo"},{"post_id":"ckc8utg4t000aynmpb27xmlf2","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg57000tynmpxmadkttk"},{"post_id":"ckc8utg4t000aynmpb27xmlf2","tag_id":"ckc8utg56000rynmp9gda3j7e","_id":"ckc8utg58000uynmp42wd6xn2"},{"post_id":"ckc8utg4u000cynmp74h1jgh2","tag_id":"ckc8utg57000synmpqrr9wc5b","_id":"ckc8utg58000wynmpfucdp6b8"},{"post_id":"ckc8utg4v000dynmpi2kipnfa","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg59000zynmpqkhj65x7"},{"post_id":"ckc8utg4v000dynmpi2kipnfa","tag_id":"ckc8utg58000xynmpjh7fm3h4","_id":"ckc8utg590010ynmp8c7wy8r7"},{"post_id":"ckc8utg50000fynmp02ng8a1k","tag_id":"ckc8utg58000yynmp5dkmnlxo","_id":"ckc8utg5a0013ynmphq458goy"},{"post_id":"ckc8utg50000fynmp02ng8a1k","tag_id":"ckc8utg590011ynmp1gvqvrbt","_id":"ckc8utg5a0014ynmp5bb8hbva"},{"post_id":"ckc8utg51000hynmph0s3gdy5","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5a0016ynmpovslaqp9"},{"post_id":"ckc8utg53000kynmp2m3zqmab","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5b0019ynmpxotzyj38"},{"post_id":"ckc8utg53000kynmp2m3zqmab","tag_id":"ckc8utg5a0017ynmpj8e9vx6k","_id":"ckc8utg5b001aynmpfh6tc73g"},{"post_id":"ckc8utg54000mynmpmtxdh4qx","tag_id":"ckc8utg5b0018ynmp84jwd53i","_id":"ckc8utg5b001bynmpxnttubed"},{"post_id":"ckc8utg5k001hynmpcppct00r","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5m001jynmp62sdki7p"},{"post_id":"ckc8utg5k001hynmpcppct00r","tag_id":"ckc8utg5a0017ynmpj8e9vx6k","_id":"ckc8utg5o001mynmpd2vbfxyx"},{"post_id":"ckc8utg5l001iynmpzct3k2fj","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5o001nynmpmyxgu949"},{"post_id":"ckc8utg5l001iynmpzct3k2fj","tag_id":"ckc8utg57000synmpqrr9wc5b","_id":"ckc8utg5p001pynmpp6gqstcw"},{"post_id":"ckc8utg5g001cynmprils3wkt","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5p001qynmpq6bivur5"},{"post_id":"ckc8utg5g001cynmprils3wkt","tag_id":"ckc8utg5j001gynmptv9oi182","_id":"ckc8utg5p001rynmpvde857ag"},{"post_id":"ckc8utg5i001eynmpg2vkhubd","tag_id":"ckc8utg56000pynmpqmx8o1bw","_id":"ckc8utg5p001synmp0pt63nim"},{"post_id":"ckc8utg5i001eynmpg2vkhubd","tag_id":"ckc8utg5n001lynmp7x2mcp02","_id":"ckc8utg5p001tynmp6v0w4f8b"},{"post_id":"ckc8utg5n001kynmpn394npz7","tag_id":"ckc8utg5o001oynmp6at4l3u9","_id":"ckc8utg5p001uynmpdmigwmws"}],"Tag":[{"name":"Angular","_id":"ckc8utg4n0003ynmpdmvzetco"},{"name":"ArcGIS","_id":"ckc8utg4r0007ynmpqqvskeoz"},{"name":"JS","_id":"ckc8utg4u000bynmp1346mc4e"},{"name":"Network,Linux","_id":"ckc8utg53000jynmpt0qvross"},{"name":"Mac","_id":"ckc8utg55000nynmpohztusl1"},{"name":"Linux","_id":"ckc8utg56000pynmpqmx8o1bw"},{"name":"Shell","_id":"ckc8utg56000rynmp9gda3j7e"},{"name":"Network","_id":"ckc8utg57000synmpqrr9wc5b"},{"name":"Task","_id":"ckc8utg58000xynmpjh7fm3h4"},{"name":"Database","_id":"ckc8utg58000yynmp5dkmnlxo"},{"name":"PostgreSQL","_id":"ckc8utg590011ynmp1gvqvrbt"},{"name":"Ubuntu","_id":"ckc8utg5a0017ynmpj8e9vx6k"},{"name":"Usually","_id":"ckc8utg5b0018ynmp84jwd53i"},{"name":"Vi","_id":"ckc8utg5j001gynmptv9oi182"},{"name":"Font","_id":"ckc8utg5n001lynmp7x2mcp02"},{"name":"装机","_id":"ckc8utg5o001oynmp6at4l3u9"}]}}