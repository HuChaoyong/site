{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/download/autoproxy.zip","path":"download/autoproxy.zip","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/sorata.jpeg","path":"img/sorata.jpeg","modified":0,"renderable":0},{"_id":"source/download/autoproxy.pac","path":"download/autoproxy.pac","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/img/E-R.png","path":"img/E-R.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1531321392528},{"_id":"source/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1531321392529},{"_id":"themes/beantech/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1531321392774},{"_id":"themes/beantech/_config.yml","hash":"6afd65c055d9b1c70ae67323cc869f1b4aa60348","modified":1531321392774},{"_id":"source/_posts/ArcGIS-JS-API.md","hash":"81778c6810933268ebab616a69894282d7a60a88","modified":1551459594526},{"_id":"source/_posts/Init-this-site.md","hash":"30e4086a11d9ffc9fff1ecef06be28634d58aa9b","modified":1531321392529},{"_id":"source/_posts/PostgreSQL.md","hash":"b56296fccfa988ea25346e9fe543b7fd31c03c7a","modified":1553272124885},{"_id":"source/_posts/Server-operation-有关服务器操作.md","hash":"57bcdebba1eeff777d31c662692bc84d09913bf8","modified":1540660311584},{"_id":"source/_posts/Ubuntu常用软件安装.md","hash":"c7a30c30aa9a2b5146431672d525890c9e304780","modified":1540662845896},{"_id":"source/_posts/常用Linux命令-小松鼠.md","hash":"79a72f8c657b30bc799e64988d926d1585d8ffa1","modified":1531321392627},{"_id":"source/_posts/网络工具.md","hash":"d8f9faa7c01017075a860586e9ff1309868ba434","modified":1540659721113},{"_id":"source/about/index.md","hash":"4fba4a7904f27b807eab6ad1e115735e415c6096","modified":1531321392631},{"_id":"source/archive/index.md","hash":"b9d28f7401765d1199a54b165f826f19a7ffb5c9","modified":1531321392632},{"_id":"source/download/autoproxy.zip","hash":"87562a6b13be62ed65b6d43d48c73d4a306afcd3","modified":1531324694751},{"_id":"source/img/favicon.ico","hash":"4bb0032df79a44c758f780cab8f29e777e7b6d97","modified":1531321392658},{"_id":"source/tags/index.md","hash":"02d54619f5744b2a02de19c50323c5bd7c77884b","modified":1531321392773},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1531321392774},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1531321392775},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1531321392775},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1531321392775},{"_id":"themes/beantech/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1531321392775},{"_id":"themes/beantech/layout/archive.ejs","hash":"72a150c8dff0031a9107d12eaa7c2e6c6ce950d2","modified":1531321392777},{"_id":"themes/beantech/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1531321392777},{"_id":"themes/beantech/layout/index.ejs","hash":"eb67c1ff788ab1cb8c5eee91f1b1ac28f6f1dbbc","modified":1531321392778},{"_id":"themes/beantech/layout/keynote.ejs","hash":"b081cf08733c08bb083480485236b7aca001b5e8","modified":1531321392778},{"_id":"themes/beantech/layout/layout.ejs","hash":"6efee96baaeb079b0abb2642c8d64edf01946a2e","modified":1531321392778},{"_id":"themes/beantech/layout/page.ejs","hash":"973f3a648cca0df62f4b50901371837cddc40537","modified":1531321392778},{"_id":"themes/beantech/layout/post.ejs","hash":"2914071987eae521b9d6184f117e1acb419f042d","modified":1531321392779},{"_id":"themes/beantech/layout/tags.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1531321392779},{"_id":"source/img/sorata.jpeg","hash":"efbb829c62acadd0eacc06557b20386e1b97997d","modified":1531321392773},{"_id":"source/download/autoproxy.pac","hash":"11078cd445d0d6ef007ede3b4ee16b6ca007ee95","modified":1531144018150},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"924e68de4a75c56afa5ada4897f851e7f2f8b1bc","modified":1551459791792},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"f1eddcb2ae4a63b6a93e1d3305f62d73eeaebce3","modified":1551459791807},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"5a1b86ee6816f6cfd8f6a42b4573f9fb5b21c42e","modified":1531321392775},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"b61fbcb1f255712d33ea93395d377cda07bc9da3","modified":1531321392776},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1531321392776},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1531321392776},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"837f01e8a20e5023b4b292d1b3141a399567da65","modified":1531321392776},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1531321392776},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1531321392776},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"5195d87769cb995a69d3386dc116138a9568ccad","modified":1531321392776},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"880268b7b622f576e463f0330c3240ff2ec0d0b6","modified":1531321392777},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"e2d50e54e75f80b6de65f27a83f5548bb15c43b4","modified":1531321392777},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"e1417bc7be94df4e8b558d958295d131eded849f","modified":1531321392777},{"_id":"themes/beantech/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1531321392779},{"_id":"themes/beantech/source/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1531321392779},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1531321392780},{"_id":"themes/beantech/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1531321392783},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1531321392784},{"_id":"themes/beantech/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1531321392785},{"_id":"themes/beantech/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1531321392785},{"_id":"themes/beantech/source/css/toc.styl","hash":"6c9a2d5f6f981624e0c4b64323493e8614efea29","modified":1531321392786},{"_id":"themes/beantech/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1531321392786},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1531321392793},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1531321392793},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1531321392793},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1531321392800},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1531321392800},{"_id":"themes/beantech/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1531321392800},{"_id":"themes/beantech/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1531321392800},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1531321392786},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1531321392790},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1531321392790},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1531321392791},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1531321392783},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1531401994552},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1531321392800},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1531321392788},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1531321392781},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1531321392784},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1531321392785},{"_id":"themes/beantech/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1531321392798},{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","hash":"08d1ac12b530acf02a0b6f77c5312b7fd5670b30","modified":1531321392631},{"_id":"public/post-sitemap.xml","hash":"0cd2cb4779a82294993b9c12df96bef0e756ad0b","modified":1553274159403},{"_id":"public/page-sitemap.xml","hash":"a7e38a23e1de1f4c06e2f9a8559f3f3248502459","modified":1551363023026},{"_id":"public/tag-sitemap.xml","hash":"8920ced4dbb425271a4836c9d0058ff22882419d","modified":1553274159403},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1551363023027},{"_id":"public/sitemap.xml","hash":"268e5d0e6a4ef4a02e0fa5612b4480a8707e78f2","modified":1553274159440},{"_id":"public/404.html","hash":"2008d7e650bc5781afe17284373628d9043af827","modified":1551459916115},{"_id":"public/2018/04/06/Init-this-site/index.html","hash":"ca152c56327ade7ec70d2fe0889ae33eb7c17d2e","modified":1551459916115},{"_id":"public/about/index.html","hash":"6e3a79cdc8ce8df0e7f2985f9667d403d1f7986b","modified":1553274159507},{"_id":"public/tags/index.html","hash":"85f6d26e8e6bacd96e67e7f6d7a0e4e9ceaf715c","modified":1553274159508},{"_id":"public/2018/04/07/Ubuntu常用软件安装/index.html","hash":"257b5ee571b4de56f9f78bbbfd8dc5d268eb39bc","modified":1551459916115},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/index.html","hash":"6bc0e331dcdb825a44c0e4a1e4697941795a1db2","modified":1551459916115},{"_id":"public/2018/10/28/ArcGIS-JS-API/index.html","hash":"f4d15b9fc20902c3d6aec63bdeda0c93d979a4e4","modified":1551459916115},{"_id":"public/2018/10/28/网络工具/index.html","hash":"1476773da2f43620c3bf8c79f7f000a02ce22abd","modified":1551459916115},{"_id":"public/2018/04/07/常用Linux命令-小松鼠/index.html","hash":"dcdb1edfa2eeec28827befe0defb241ee8993f90","modified":1551459916115},{"_id":"public/archive/index.html","hash":"90bea395dfb7827becdd3de2b38ce7fc5e394b50","modified":1553274159610},{"_id":"public/archives/index.html","hash":"610af7e4d921ec6709434deb099ea44abf0651d2","modified":1553274159616},{"_id":"public/archives/2018/index.html","hash":"bafb6edb4042fb3ef1d92c01de94aa1db37a0984","modified":1553274159619},{"_id":"public/archives/2018/04/index.html","hash":"533c5843c5908860855ca581856ddc17c15eaa03","modified":1553274159619},{"_id":"public/archives/2018/10/index.html","hash":"0736ec0dbae0b4ec50f8e338ae09cb5300a0e1c8","modified":1553274159621},{"_id":"public/index.html","hash":"077c23d91683e5615b7d1e932872addc04c9fb11","modified":1553274159621},{"_id":"public/tags/ArcGIS/index.html","hash":"32bf2eebb6e72a0404ef243b235cd6f53861c7ab","modified":1553274159621},{"_id":"public/tags/JS/index.html","hash":"814f5659e3c9591f761919f16f4035d3b65ce458","modified":1553274159621},{"_id":"public/tags/Linux/index.html","hash":"65431a850fd4cc82f90ab64175f7bcdb940a68f2","modified":1553274159622},{"_id":"public/tags/Network/index.html","hash":"a52d7d83bee0f8fbe54fa0c28c23409ce2f3e169","modified":1553274159622},{"_id":"public/tags/Ubuntu/index.html","hash":"71d251e5d01ef53581914ed8fcd4946847403230","modified":1553274159622},{"_id":"public/2018/11/01/PostgreSQL/index.html","hash":"741403173c5e8e3d2b1f6365f10f157575b2b372","modified":1553274159574},{"_id":"public/archives/2018/11/index.html","hash":"fc84d0309fc4f89bc5774ea6469539567ef90954","modified":1553274159621},{"_id":"public/tags/Database/index.html","hash":"ce28b75689198a2810a16f525846ad8842cffe66","modified":1553274159622},{"_id":"public/tags/PostgreSQL/index.html","hash":"140bddc964b99095c7b23e92c3a8eee199dcf6e7","modified":1553274159622},{"_id":"public/live2dw/assets/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1551363023346},{"_id":"public/live2dw/assets/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1551363023346},{"_id":"public/live2dw/assets/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1551363023346},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"6e013af9c502b2e63ac5e42944e3244f8f515eb7","modified":1551363023535},{"_id":"public/live2dw/assets/package.json","hash":"6d359ba64ae6d80ab123d29d2cb40549d12d8e9d","modified":1551363023536},{"_id":"public/live2dw/assets/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1551363023346},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"7d3a9c937317b9c15f2c3a872f0e26607a729458","modified":1551363023573},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"5e7669733ecd0b1bc3881d2cf7fcc01e2990a07d","modified":1551363023576},{"_id":"public/live2dw/assets/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1551363023576},{"_id":"public/live2dw/assets/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1551363023577},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"09521263ecc625a246b3406c385300e99e966a2e","modified":1551363023590},{"_id":"source/_posts/Linux-下创建自定义命令.md","hash":"55819e90d7fac9d5e04d59d6ca6d5050b2350294","modified":1551361596040},{"_id":"source/_posts/Linux下创建自定义命令.md","hash":"2e157148cefd9c2cb03c0c1893a45ed9b29d1db5","modified":1551362171821},{"_id":"source/_posts/Linux下自定义命令.md","hash":"187c13502e617dcec8269976001aee9741ac3dfa","modified":1551361895921},{"_id":"public/2019/02/28/Linux下创建自定义命令/index.html","hash":"b7042a9664df5f962acf76e739081f591a2ea1db","modified":1553274159573},{"_id":"public/archives/2019/index.html","hash":"1cf1ea1ec5af89d80ca1fd6b5996b78682eb078b","modified":1553274159621},{"_id":"public/archives/2019/02/index.html","hash":"2a2fa1e05b5c3c7e21c2f69969e5c1db05edaf1a","modified":1553274159621},{"_id":"public/tags/Shell/index.html","hash":"0a52e5ef568a7f02ed1bea310e8889020e8ce342","modified":1553274159622},{"_id":"public/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1551363023345},{"_id":"public/download/autoproxy.zip","hash":"87562a6b13be62ed65b6d43d48c73d4a306afcd3","modified":1551363023345},{"_id":"public/img/favicon.ico","hash":"4bb0032df79a44c758f780cab8f29e777e7b6d97","modified":1551363023345},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1551363023345},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1551363023345},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1551363023345},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1551363023345},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1551363023345},{"_id":"public/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1551363023346},{"_id":"public/img/sorata.jpeg","hash":"efbb829c62acadd0eacc06557b20386e1b97997d","modified":1551363023533},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1551363023534},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1551363023571},{"_id":"public/css/rocket.css","hash":"9456fd92f729e09d6de8cda70f95d78e0d789c70","modified":1551363023571},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1551363023571},{"_id":"public/css/highlight.css","hash":"03d1f0a648e9bdf7b1f57d217313cbac5d0c7eb1","modified":1551363023571},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1551363023571},{"_id":"public/css/toc.css","hash":"2062bf4e5b219654e0d4bf470f5eef1be213da95","modified":1551363023571},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1551363023571},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1551363023572},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1551363023572},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1551363023572},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1551363023572},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1551363023572},{"_id":"public/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1551363023572},{"_id":"public/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1551363023572},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1551363023572},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1551363023572},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1551363023572},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1551363023572},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1551363023573},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1551363023573},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1551363023573},{"_id":"public/download/autoproxy.pac","hash":"11078cd445d0d6ef007ede3b4ee16b6ca007ee95","modified":1551363023573},{"_id":"public/2018/04/07/常用Linux命令-小松鼠/Ubuntu.png","hash":"08d1ac12b530acf02a0b6f77c5312b7fd5670b30","modified":1551363023590},{"_id":"source/_posts/PostgreSQL/E-R.png","hash":"668ae6b212cbe8e1b4f3bc3f9d9fc6b090a31eec","modified":1553271915081},{"_id":"source/img/E-R.png","hash":"668ae6b212cbe8e1b4f3bc3f9d9fc6b090a31eec","modified":1553272068145},{"_id":"source/_posts/Home-PC-Server-Build.md","hash":"e21ebdacdc3f6ea6b6df128cf9f7517ac052ec19","modified":1553274105761},{"_id":"public/2019/03/23/Home-PC-Server-Build/index.html","hash":"b28b4ed54694958c2a2d4824c289f9e5e92489bb","modified":1553274159616},{"_id":"public/archives/2019/03/index.html","hash":"af4955fde23badc71bd0372ba85bda7ea1abd629","modified":1553274159622},{"_id":"public/img/E-R.png","hash":"668ae6b212cbe8e1b4f3bc3f9d9fc6b090a31eec","modified":1553274160107}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2018-07-11T15:03:12.528Z","updated":"2018-07-11T15:03:12.528Z","path":"404.html","title":"","comments":1,"_id":"cjnxe1f7y0000egkbm18yadb1","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"关于","date":"2016-04-20T20:48:33.000Z","description":"","header-img":"img/header_img/Iron-Man-3.png","comments":1,"_content":"\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"关于\"\ndate: 2016-04-21 04:48:33\ndescription: \"\"\nheader-img: \"img/header_img/Iron-Man-3.png\"\ncomments: true\n---\n\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.","updated":"2018-07-11T15:03:12.631Z","path":"about/index.html","_id":"cjnxe1f990007egkbu3zril76","content":"<blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n"},{"layout":"archive","title":"博文","header-img":"img/header_img/archive-bg.jpg","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"谁没点经历,写下了吧","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"博文\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"谁没点经历,写下了吧\"\n---\n","updated":"2018-07-11T15:03:12.632Z","path":"archive/index.html","_id":"cjnxe1f9b0009egkb0yllaq35","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"标签","description":"","header-img":"img/header_img/tag-bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"标签\"\ndescription: \"\"\nheader-img: \"img/header_img/tag-bg.png\"\n---\n","date":"2018-07-11T15:03:12.773Z","updated":"2018-07-11T15:03:12.773Z","path":"tags/index.html","comments":1,"_id":"cjnxe1f9v000pegkbwjv6ujcm","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ArcGIS_JS_API","catalog":true,"date":"2018-10-27T17:15:00.000Z","subtitle":null,"header-img":null,"_content":"All of this is based on ArcGIS JS API 4.x\n# Custom Layer\n## Custom WMTS request\n> like just request level 17 map tile\n    ```javascript\n    /* \n        Test by API 4.6\n       when request level lower than 17, it will request urlTemplate resource\n       if level is more than 17 it will request \n       'http://localhost/#'[bad request]\n       this situation make you have a high level tile image, then your\n       high level request don't have any tile image\n    */\n   ```\n   ```javascript\n    // \"esri/request\" => esriRequest\n    // \"esri/layers/BaseTileLayer\" => BaseTileLayer\n    const TDTLayer = BaseTileLayer.createSubclass({\n        properties: {\n            urlTemplate: null\n        },\n        getTileUrl: function(level, row, col) {\n            // you can define any request rule here\n            if (level < 17) {\n                return this.urlTemplate;\n            } else {\n                return 'http://localhost/#';\n            }\n        },\n        fetchTile: function(level, row, col) {\n            const url = this.getTileUrl(level, row, col);\n            return esriRequest(url, {\n                responseType: 'image',\n                allowImageDataAccess: true\n            }).then(\n                function(response) {\n                    const image = response.data;\n                    const width = this.tileInfo.size[0];\n                    const height = this.tileInfo.size[1];\n                    const canvas = document.createElement('canvas');\n                    const context = canvas.getContext('2d');\n                    canvas.width = width;\n                    canvas.height = height;\n                    context.drawImage(image, 0, 0, width, height);\n                    return canvas;\n                }.bind(this)\n            );\n        }\n    });\n    // Use like simple layer\n    const tdt_img = new TDTLayer({\n        urlTemplate: \"http://t0.tianditu.com/DataServer?T=vec_w&x={col}&y={row}&l={level}\",\n        id: \"img_layer\"\n    });\n    map.add(tdt_img);\n```\n\n\n# Query Task By Per Page\n\n> Usually query feature, just return 1000 features, if you want to get more,<br>\nyou should change server publish config. but it's not Geek!<br>\nso query it by per page is a good idea !<br>\nbecause arcgis js api query not support ,but server rest full api support!\n```javascript\nrequire([\n  \"esri/request\",\n  \"esri/Graphic\",\n  \"esri/geometry/SpatialReference\",\n  \"esri/tasks/support/Query\",\n  \"esri/tasks/QueryTask\",\n  \"esri/tasks/support/StatisticDefinition\"\n], function (esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition) {\n\n  const queryPageTool = {\n    /**\n     * 分页分批请求数据\n     * @param {*} query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields\n     * @param {*} queryTask \n     * @param {*} pageSize 每页请求的数量（一般不大于1000）\n     * @param {*} anyField 任意一个字段名\n     * @param {*} theadCount 每批请求的个数 \n     */\n    queryByPage: function (query, queryTask, pageSize, anyField, theadCount) {\n      const countStatistic = {\n        onStatisticField: anyField,\n        outStatisticFieldName: 'count',\n        statisticType: 'count'\n      };\n      const saveArr = [];\n      this.queryFeatures(query, queryTask, [countStatistic]).then((countRes) => {\n        if (!isNullOrUndefined(countRes.features) && Array.isArray(countRes.features) && countRes.features.length > 0) {\n          const recordCount = countRes.features[0].attributes.count;\n          console.log('count: ', recordCount);\n          this.queryRecycle(query, queryTask, pageSize, 0, recordCount, [], theadCount);\n        }\n      });\n    },\n    /**\n     * Convert query param to url property\n     * @param {*} query \n     * @param  pageSize 单页数量大小\n     * @param number firstRecordRid 该页第一条记录的序号\n     */\n    covertQueryToQueryObj: function (query, pageSize, firstRecordRid) {\n      const baseObj = {\n        f: 'json',\n        spatialRel: 'esriSpatialRelIntersects',\n        resultRecordCount: pageSize,\n        resultOffset: firstRecordRid\n      };\n      // 把where转过去\n      if (!isNullOrUndefined(query.where)) {\n        baseObj['where'] = query.where;\n      }\n\n      if (!isNullOrUndefined(query.returnGeometry)) {\n        baseObj['returnGeometry'] = query.returnGeometry;\n      }\n\n      // 输出坐标系\n      if (!isNullOrUndefined(query.outSpatialReference)) {\n        baseObj['outSR'] = query.outSpatialReference.wkid;\n      }\n\n      // Geometry 转换\n      if (!isNullOrUndefined(query.geometry)) {\n        baseObj['inSR'] = query.geometry.spatialReference.wkid;\n        if (query.geometry.type === 'extent') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryEnvelope';\n        }\n        if (query.geometry.type === 'polygon') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolygon';\n        }\n        if (query.geometry.type === 'polyline') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolyline';\n        }\n        if (query.geometry.type === 'point') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPoint';\n        }\n      }\n\n      // 返回字段处理\n      if (!isNullOrUndefined(query.outFields) && Array.isArray(query.outFields) && query.outFields.length > 0) {\n        baseObj['outFields'] = query.outFields.toString();\n      }\n\n      // 排序处理\n      if (!isNullOrUndefined(query.orderByFields) && Array.isArray(query.orderByFields)) {\n        // baseObj['orderByFields']\n        let t = '';\n        query.orderByFields.forEach((orderField) => {\n          const deal = orderField.trim().replace(/\\s+/g, ' '); // 前后去空格并去掉中间重复的空格\n          const splitArr = deal.split(' ');\n          if (splitArr.length === 1) {\n            if (t === '') {\n              t += splitArr[0];\n            } else {\n              t += '%2C' + splitArr[0];\n            }\n          } else if (splitArr.length === 2 && (splitArr[1] === 'DESC' || splitArr[1] === 'ASC')) {\n            if (t === '') {\n              t += deal;\n            } else {\n              t += `%2C${deal}`;\n            }\n          }\n        });\n        if (t !== '') {\n          baseObj['orderByFields'] = t;\n        }\n      }\n      return baseObj;\n    },\n    /**\n     * 将传入的feature信息转换成 Graphic\n     * @param object : feature 请求回来的Feature \n     * @param string: geometryType 图形类型\n     * @param spatialReference: sr 返回的空间参考对象\n     * @param Graphic: Graphic \n     * @param SpatialReference: SpatialReference class\n     */\n    convertFeatureToGraphic: function (feature, geometryType, sr, Graphic, SpatialReference) {\n      if (isNullOrUndefined(feature.geometry)) {\n        return feature;\n      }\n      const spatialReference = new SpatialReference(sr);\n      if (geometryType.toLowerCase().includes('polygon')) {\n        feature.geometry.type = 'polygon';\n      } else if (geometryType.toLowerCase().includes('polyline')) {\n        feature.geometry.type = 'polyline';\n      } else if (geometryType.toLowerCase().includes('point')) {\n        feature.geometry.type = 'point';\n      }\n      feature['spatialReference'] = spatialReference;\n      const g = new Graphic(feature);\n      return g;\n    },\n    /**\n     * 将查询对象转成字符串\n     * @param object: newQuery 查询对象\n     */\n    convertQueryToRequestString: function (newQuery) {\n      let body = '';\n      for (const prop in newQuery) {\n        if (!isNullOrUndefined(newQuery[prop])) {\n          body += (encodeURIComponent(prop) + '=' + encodeURIComponent(newQuery[prop])) + '&';\n        }\n      }\n      body = body.replace(/\\&$/g, '');\n      return body;\n    },\n    queryRecycle: function (query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount) {\n      if (features.length < recordCount) {\n        const promiseArr = [];\n        const max = firstRecordRid + theadCount * pageSize;\n        for (; firstRecordRid < max && firstRecordRid < recordCount; firstRecordRid += pageSize) {\n          promiseArr.push(this.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));\n        }\n        Promise.all(promiseArr).then((resArr) => {\n          resArr.forEach((subRes) => {\n            if (!isNullOrUndefined(subRes) && !isNullOrUndefined(subRes.features)) {\n              features = features.concat(subRes.features);\n            }\n          });\n          this.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);\n        }).catch((e) => {\n          console.error(e);\n          observer.error(e);\n        });\n      } else {\n          // output all record\n        console.log('all records： ', features);\n      }\n    },\n    queryFeatures: function (query, queryTask, constraints) {\n      const q = new Query(query);\n      const qt = new QueryTask(queryTask);\n      if (!isNullOrUndefined(constraints) && Array.isArray(constraints)) {\n        q.outStatistics = [];\n        constraints.forEach(item => {\n          const tempStatisticDefinition = new StatisticDefinition();\n          tempStatisticDefinition.statisticType = item.statisticType;\n          tempStatisticDefinition.onStatisticField = item.onStatisticField;\n          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;\n          q.outStatistics.push(tempStatisticDefinition);\n        });\n      }\n      return qt.execute(q);\n    },\n    queryFeaturesByPage: function (query, queryTask, pageSize, firstRecordRid) {\n      const newQuery = this.covertQueryToQueryObj(query, pageSize, firstRecordRid);\n      const body = this.convertQueryToRequestString(newQuery);\n      return esriRequest(`${queryTask.url}/query?${body}`).then((res) => {\n        if (!isNullOrUndefined(res.data) && !isNullOrUndefined(res.data.features) && Array.isArray(res.data.features)) {\n          res.data.features.forEach((feature, idx) => {\n            res.data.features[idx] = this.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);\n          });\n          return res.data;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n\n\n  // test\n  const query = {\n    where: \"1=1\",\n    outFields: ['*'],\n    returnGeometry: true\n  };\n  const queryTask = { url: 'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0' };\n  // every cycle will request 5 times, every time request 1000 features.\n  queryPageTool.queryByPage(query, queryTask, 1000, 'objectid', 5);\n});\nfunction isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n}\n```\n\n\n\n","source":"_posts/ArcGIS-JS-API.md","raw":"---\ntitle: ArcGIS_JS_API\ncatalog: true\ndate: 2018-10-28 01:15:00\nsubtitle:\nheader-img:\ntags:\n- ArcGIS\n- JS\n---\nAll of this is based on ArcGIS JS API 4.x\n# Custom Layer\n## Custom WMTS request\n> like just request level 17 map tile\n    ```javascript\n    /* \n        Test by API 4.6\n       when request level lower than 17, it will request urlTemplate resource\n       if level is more than 17 it will request \n       'http://localhost/#'[bad request]\n       this situation make you have a high level tile image, then your\n       high level request don't have any tile image\n    */\n   ```\n   ```javascript\n    // \"esri/request\" => esriRequest\n    // \"esri/layers/BaseTileLayer\" => BaseTileLayer\n    const TDTLayer = BaseTileLayer.createSubclass({\n        properties: {\n            urlTemplate: null\n        },\n        getTileUrl: function(level, row, col) {\n            // you can define any request rule here\n            if (level < 17) {\n                return this.urlTemplate;\n            } else {\n                return 'http://localhost/#';\n            }\n        },\n        fetchTile: function(level, row, col) {\n            const url = this.getTileUrl(level, row, col);\n            return esriRequest(url, {\n                responseType: 'image',\n                allowImageDataAccess: true\n            }).then(\n                function(response) {\n                    const image = response.data;\n                    const width = this.tileInfo.size[0];\n                    const height = this.tileInfo.size[1];\n                    const canvas = document.createElement('canvas');\n                    const context = canvas.getContext('2d');\n                    canvas.width = width;\n                    canvas.height = height;\n                    context.drawImage(image, 0, 0, width, height);\n                    return canvas;\n                }.bind(this)\n            );\n        }\n    });\n    // Use like simple layer\n    const tdt_img = new TDTLayer({\n        urlTemplate: \"http://t0.tianditu.com/DataServer?T=vec_w&x={col}&y={row}&l={level}\",\n        id: \"img_layer\"\n    });\n    map.add(tdt_img);\n```\n\n\n# Query Task By Per Page\n\n> Usually query feature, just return 1000 features, if you want to get more,<br>\nyou should change server publish config. but it's not Geek!<br>\nso query it by per page is a good idea !<br>\nbecause arcgis js api query not support ,but server rest full api support!\n```javascript\nrequire([\n  \"esri/request\",\n  \"esri/Graphic\",\n  \"esri/geometry/SpatialReference\",\n  \"esri/tasks/support/Query\",\n  \"esri/tasks/QueryTask\",\n  \"esri/tasks/support/StatisticDefinition\"\n], function (esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition) {\n\n  const queryPageTool = {\n    /**\n     * 分页分批请求数据\n     * @param {*} query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields\n     * @param {*} queryTask \n     * @param {*} pageSize 每页请求的数量（一般不大于1000）\n     * @param {*} anyField 任意一个字段名\n     * @param {*} theadCount 每批请求的个数 \n     */\n    queryByPage: function (query, queryTask, pageSize, anyField, theadCount) {\n      const countStatistic = {\n        onStatisticField: anyField,\n        outStatisticFieldName: 'count',\n        statisticType: 'count'\n      };\n      const saveArr = [];\n      this.queryFeatures(query, queryTask, [countStatistic]).then((countRes) => {\n        if (!isNullOrUndefined(countRes.features) && Array.isArray(countRes.features) && countRes.features.length > 0) {\n          const recordCount = countRes.features[0].attributes.count;\n          console.log('count: ', recordCount);\n          this.queryRecycle(query, queryTask, pageSize, 0, recordCount, [], theadCount);\n        }\n      });\n    },\n    /**\n     * Convert query param to url property\n     * @param {*} query \n     * @param  pageSize 单页数量大小\n     * @param number firstRecordRid 该页第一条记录的序号\n     */\n    covertQueryToQueryObj: function (query, pageSize, firstRecordRid) {\n      const baseObj = {\n        f: 'json',\n        spatialRel: 'esriSpatialRelIntersects',\n        resultRecordCount: pageSize,\n        resultOffset: firstRecordRid\n      };\n      // 把where转过去\n      if (!isNullOrUndefined(query.where)) {\n        baseObj['where'] = query.where;\n      }\n\n      if (!isNullOrUndefined(query.returnGeometry)) {\n        baseObj['returnGeometry'] = query.returnGeometry;\n      }\n\n      // 输出坐标系\n      if (!isNullOrUndefined(query.outSpatialReference)) {\n        baseObj['outSR'] = query.outSpatialReference.wkid;\n      }\n\n      // Geometry 转换\n      if (!isNullOrUndefined(query.geometry)) {\n        baseObj['inSR'] = query.geometry.spatialReference.wkid;\n        if (query.geometry.type === 'extent') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryEnvelope';\n        }\n        if (query.geometry.type === 'polygon') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolygon';\n        }\n        if (query.geometry.type === 'polyline') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPolyline';\n        }\n        if (query.geometry.type === 'point') {\n          baseObj['geometry'] = JSON.stringify(query.geometry.toJSON());\n          baseObj['geometryType'] = 'esriGeometryPoint';\n        }\n      }\n\n      // 返回字段处理\n      if (!isNullOrUndefined(query.outFields) && Array.isArray(query.outFields) && query.outFields.length > 0) {\n        baseObj['outFields'] = query.outFields.toString();\n      }\n\n      // 排序处理\n      if (!isNullOrUndefined(query.orderByFields) && Array.isArray(query.orderByFields)) {\n        // baseObj['orderByFields']\n        let t = '';\n        query.orderByFields.forEach((orderField) => {\n          const deal = orderField.trim().replace(/\\s+/g, ' '); // 前后去空格并去掉中间重复的空格\n          const splitArr = deal.split(' ');\n          if (splitArr.length === 1) {\n            if (t === '') {\n              t += splitArr[0];\n            } else {\n              t += '%2C' + splitArr[0];\n            }\n          } else if (splitArr.length === 2 && (splitArr[1] === 'DESC' || splitArr[1] === 'ASC')) {\n            if (t === '') {\n              t += deal;\n            } else {\n              t += `%2C${deal}`;\n            }\n          }\n        });\n        if (t !== '') {\n          baseObj['orderByFields'] = t;\n        }\n      }\n      return baseObj;\n    },\n    /**\n     * 将传入的feature信息转换成 Graphic\n     * @param object : feature 请求回来的Feature \n     * @param string: geometryType 图形类型\n     * @param spatialReference: sr 返回的空间参考对象\n     * @param Graphic: Graphic \n     * @param SpatialReference: SpatialReference class\n     */\n    convertFeatureToGraphic: function (feature, geometryType, sr, Graphic, SpatialReference) {\n      if (isNullOrUndefined(feature.geometry)) {\n        return feature;\n      }\n      const spatialReference = new SpatialReference(sr);\n      if (geometryType.toLowerCase().includes('polygon')) {\n        feature.geometry.type = 'polygon';\n      } else if (geometryType.toLowerCase().includes('polyline')) {\n        feature.geometry.type = 'polyline';\n      } else if (geometryType.toLowerCase().includes('point')) {\n        feature.geometry.type = 'point';\n      }\n      feature['spatialReference'] = spatialReference;\n      const g = new Graphic(feature);\n      return g;\n    },\n    /**\n     * 将查询对象转成字符串\n     * @param object: newQuery 查询对象\n     */\n    convertQueryToRequestString: function (newQuery) {\n      let body = '';\n      for (const prop in newQuery) {\n        if (!isNullOrUndefined(newQuery[prop])) {\n          body += (encodeURIComponent(prop) + '=' + encodeURIComponent(newQuery[prop])) + '&';\n        }\n      }\n      body = body.replace(/\\&$/g, '');\n      return body;\n    },\n    queryRecycle: function (query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount) {\n      if (features.length < recordCount) {\n        const promiseArr = [];\n        const max = firstRecordRid + theadCount * pageSize;\n        for (; firstRecordRid < max && firstRecordRid < recordCount; firstRecordRid += pageSize) {\n          promiseArr.push(this.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));\n        }\n        Promise.all(promiseArr).then((resArr) => {\n          resArr.forEach((subRes) => {\n            if (!isNullOrUndefined(subRes) && !isNullOrUndefined(subRes.features)) {\n              features = features.concat(subRes.features);\n            }\n          });\n          this.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);\n        }).catch((e) => {\n          console.error(e);\n          observer.error(e);\n        });\n      } else {\n          // output all record\n        console.log('all records： ', features);\n      }\n    },\n    queryFeatures: function (query, queryTask, constraints) {\n      const q = new Query(query);\n      const qt = new QueryTask(queryTask);\n      if (!isNullOrUndefined(constraints) && Array.isArray(constraints)) {\n        q.outStatistics = [];\n        constraints.forEach(item => {\n          const tempStatisticDefinition = new StatisticDefinition();\n          tempStatisticDefinition.statisticType = item.statisticType;\n          tempStatisticDefinition.onStatisticField = item.onStatisticField;\n          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;\n          q.outStatistics.push(tempStatisticDefinition);\n        });\n      }\n      return qt.execute(q);\n    },\n    queryFeaturesByPage: function (query, queryTask, pageSize, firstRecordRid) {\n      const newQuery = this.covertQueryToQueryObj(query, pageSize, firstRecordRid);\n      const body = this.convertQueryToRequestString(newQuery);\n      return esriRequest(`${queryTask.url}/query?${body}`).then((res) => {\n        if (!isNullOrUndefined(res.data) && !isNullOrUndefined(res.data.features) && Array.isArray(res.data.features)) {\n          res.data.features.forEach((feature, idx) => {\n            res.data.features[idx] = this.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);\n          });\n          return res.data;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n\n\n  // test\n  const query = {\n    where: \"1=1\",\n    outFields: ['*'],\n    returnGeometry: true\n  };\n  const queryTask = { url: 'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0' };\n  // every cycle will request 5 times, every time request 1000 features.\n  queryPageTool.queryByPage(query, queryTask, 1000, 'objectid', 5);\n});\nfunction isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n}\n```\n\n\n\n","slug":"ArcGIS-JS-API","published":1,"updated":"2019-03-01T16:59:54.526Z","_id":"cjnxe1f8v0001egkbujb98ykv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>All of this is based on ArcGIS JS API 4.x</p>\n<h1><span id=\"custom-layer\">Custom Layer</span></h1>\n<h2><span id=\"custom-wmts-request\">Custom WMTS request</span></h2>\n<blockquote>\n<p>like just request level 17 map tile<br>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    Test by API 4.6</span></span><br><span class=\"line\"><span class=\"comment\">   when request level lower than 17, it will request urlTemplate resource</span></span><br><span class=\"line\"><span class=\"comment\">   if level is more than 17 it will request </span></span><br><span class=\"line\"><span class=\"comment\">   'http://localhost/#'[bad request]</span></span><br><span class=\"line\"><span class=\"comment\">   this situation make you have a high level tile image, then your</span></span><br><span class=\"line\"><span class=\"comment\">   high level request don't have any tile image</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \"esri/request\" =&gt; esriRequest</span></span><br><span class=\"line\"><span class=\"comment\">// \"esri/layers/BaseTileLayer\" =&gt; BaseTileLayer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TDTLayer = BaseTileLayer.createSubclass(&#123;</span><br><span class=\"line\">    properties: &#123;</span><br><span class=\"line\">        urlTemplate: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getTileUrl: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// you can define any request rule here</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (level &lt; <span class=\"number\">17</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.urlTemplate;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'http://localhost/#'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchTile: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.getTileUrl(level, row, col);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> esriRequest(url, &#123;</span><br><span class=\"line\">            responseType: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">            allowImageDataAccess: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> image = response.data;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> width = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> height = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> context = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">                canvas.width = width;</span><br><span class=\"line\">                canvas.height = height;</span><br><span class=\"line\">                context.drawImage(image, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> canvas;</span><br><span class=\"line\">            &#125;.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Use like simple layer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tdt_img = <span class=\"keyword\">new</span> TDTLayer(&#123;</span><br><span class=\"line\">    urlTemplate: <span class=\"string\">\"http://t0.tianditu.com/DataServer?T=vec_w&amp;x=&#123;col&#125;&amp;y=&#123;row&#125;&amp;l=&#123;level&#125;\"</span>,</span><br><span class=\"line\">    id: <span class=\"string\">\"img_layer\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">map.add(tdt_img);</span><br></pre></td></tr></table></figure>\n<h1><span id=\"query-task-by-per-page\">Query Task By Per Page</span></h1>\n<blockquote>\n<p>Usually query feature, just return 1000 features, if you want to get more,<br><br>\nyou should change server publish config. but it’s not Geek!<br><br>\nso query it by per page is a good idea !<br><br>\nbecause arcgis js api query not support ,but server rest full api support!</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>([</span><br><span class=\"line\">  <span class=\"string\">\"esri/request\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/Graphic\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/geometry/SpatialReference\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/Query\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/QueryTask\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/StatisticDefinition\"</span></span><br><span class=\"line\">], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryPageTool = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页分批请求数据</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; queryTask </span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; pageSize 每页请求的数量（一般不大于1000）</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; anyField 任意一个字段名</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; theadCount 每批请求的个数 </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    queryByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, anyField, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> countStatistic = &#123;</span><br><span class=\"line\">        onStatisticField: anyField,</span><br><span class=\"line\">        outStatisticFieldName: <span class=\"string\">'count'</span>,</span><br><span class=\"line\">        statisticType: <span class=\"string\">'count'</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> saveArr = [];</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.queryFeatures(query, queryTask, [countStatistic]).then(<span class=\"function\">(<span class=\"params\">countRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(countRes.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(countRes.features) &amp;&amp; countRes.features.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> recordCount = countRes.features[<span class=\"number\">0</span>].attributes.count;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">'count: '</span>, recordCount);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, <span class=\"number\">0</span>, recordCount, [], theadCount);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Convert query param to url property</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; query </span></span><br><span class=\"line\"><span class=\"comment\">     * @param  pageSize 单页数量大小</span></span><br><span class=\"line\"><span class=\"comment\">     * @param number firstRecordRid 该页第一条记录的序号</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    covertQueryToQueryObj: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> baseObj = &#123;</span><br><span class=\"line\">        f: <span class=\"string\">'json'</span>,</span><br><span class=\"line\">        spatialRel: <span class=\"string\">'esriSpatialRelIntersects'</span>,</span><br><span class=\"line\">        resultRecordCount: pageSize,</span><br><span class=\"line\">        resultOffset: firstRecordRid</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// 把where转过去</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.where)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'where'</span>] = query.where;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.returnGeometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'returnGeometry'</span>] = query.returnGeometry;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出坐标系</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outSpatialReference)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outSR'</span>] = query.outSpatialReference.wkid;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Geometry 转换</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.geometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'inSR'</span>] = query.geometry.spatialReference.wkid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'extent'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryEnvelope'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polygon'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolygon'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polyline'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolyline'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'point'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPoint'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 返回字段处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.outFields) &amp;&amp; query.outFields.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outFields'</span>] = query.outFields.toString();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 排序处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.orderByFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.orderByFields)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// baseObj['orderByFields']</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> t = <span class=\"string\">''</span>;</span><br><span class=\"line\">        query.orderByFields.forEach(<span class=\"function\">(<span class=\"params\">orderField</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> deal = orderField.trim().replace(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">' '</span>); <span class=\"comment\">// 前后去空格并去掉中间重复的空格</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> splitArr = deal.split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">'%2C'</span> + splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">2</span> &amp;&amp; (splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'DESC'</span> || splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'ASC'</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += deal;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">`%2C<span class=\"subst\">$&#123;deal&#125;</span>`</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'orderByFields'</span>] = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> baseObj;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将传入的feature信息转换成 Graphic</span></span><br><span class=\"line\"><span class=\"comment\">     * @param object : feature 请求回来的Feature </span></span><br><span class=\"line\"><span class=\"comment\">     * @param string: geometryType 图形类型</span></span><br><span class=\"line\"><span class=\"comment\">     * @param spatialReference: sr 返回的空间参考对象</span></span><br><span class=\"line\"><span class=\"comment\">     * @param Graphic: Graphic </span></span><br><span class=\"line\"><span class=\"comment\">     * @param SpatialReference: SpatialReference class</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertFeatureToGraphic: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">feature, geometryType, sr, Graphic, SpatialReference</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isNullOrUndefined(feature.geometry)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> feature;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> spatialReference = <span class=\"keyword\">new</span> SpatialReference(sr);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polygon'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polygon'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polyline'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polyline'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'point'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'point'</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      feature[<span class=\"string\">'spatialReference'</span>] = spatialReference;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> g = <span class=\"keyword\">new</span> Graphic(feature);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将查询对象转成字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * @param object: newQuery 查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertQueryToRequestString: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newQuery</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> body = <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> prop <span class=\"keyword\">in</span> newQuery) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(newQuery[prop])) &#123;</span><br><span class=\"line\">          body += (<span class=\"built_in\">encodeURIComponent</span>(prop) + <span class=\"string\">'='</span> + <span class=\"built_in\">encodeURIComponent</span>(newQuery[prop])) + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      body = body.replace(<span class=\"regexp\">/\\&amp;$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> body;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryRecycle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (features.length &lt; recordCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> promiseArr = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = firstRecordRid + theadCount * pageSize;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; firstRecordRid &lt; max &amp;&amp; firstRecordRid &lt; recordCount; firstRecordRid += pageSize) &#123;</span><br><span class=\"line\">          promiseArr.push(<span class=\"keyword\">this</span>.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Promise</span>.all(promiseArr).then(<span class=\"function\">(<span class=\"params\">resArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resArr.forEach(<span class=\"function\">(<span class=\"params\">subRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!isNullOrUndefined(subRes) &amp;&amp; !isNullOrUndefined(subRes.features)) &#123;</span><br><span class=\"line\">              features = features.concat(subRes.features);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(e);</span><br><span class=\"line\">          observer.error(e);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// output all record</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'all records： '</span>, features);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeatures: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, constraints</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = <span class=\"keyword\">new</span> Query(query);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> qt = <span class=\"keyword\">new</span> QueryTask(queryTask);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(constraints) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(constraints)) &#123;</span><br><span class=\"line\">        q.outStatistics = [];</span><br><span class=\"line\">        constraints.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> tempStatisticDefinition = <span class=\"keyword\">new</span> StatisticDefinition();</span><br><span class=\"line\">          tempStatisticDefinition.statisticType = item.statisticType;</span><br><span class=\"line\">          tempStatisticDefinition.onStatisticField = item.onStatisticField;</span><br><span class=\"line\">          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;</span><br><span class=\"line\">          q.outStatistics.push(tempStatisticDefinition);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> qt.execute(q);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeaturesByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> newQuery = <span class=\"keyword\">this</span>.covertQueryToQueryObj(query, pageSize, firstRecordRid);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> body = <span class=\"keyword\">this</span>.convertQueryToRequestString(newQuery);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> esriRequest(<span class=\"string\">`<span class=\"subst\">$&#123;queryTask.url&#125;</span>/query?<span class=\"subst\">$&#123;body&#125;</span>`</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(res.data) &amp;&amp; !isNullOrUndefined(res.data.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(res.data.features)) &#123;</span><br><span class=\"line\">          res.data.features.forEach(<span class=\"function\">(<span class=\"params\">feature, idx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            res.data.features[idx] = <span class=\"keyword\">this</span>.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res.data;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// test</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = &#123;</span><br><span class=\"line\">    where: <span class=\"string\">\"1=1\"</span>,</span><br><span class=\"line\">    outFields: [<span class=\"string\">'*'</span>],</span><br><span class=\"line\">    returnGeometry: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryTask = &#123; <span class=\"attr\">url</span>: <span class=\"string\">'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0'</span> &#125;;</span><br><span class=\"line\">  <span class=\"comment\">// every cycle will request 5 times, every time request 1000 features.</span></span><br><span class=\"line\">  queryPageTool.queryByPage(query, queryTask, <span class=\"number\">1000</span>, <span class=\"string\">'objectid'</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNullOrUndefined</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj === <span class=\"literal\">undefined</span> || obj === <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>All of this is based on ArcGIS JS API 4.x</p>\n<h1>Custom Layer</h1>\n<h2>Custom WMTS request</h2>\n<blockquote>\n<p>like just request level 17 map tile<br>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    Test by API 4.6</span></span><br><span class=\"line\"><span class=\"comment\">   when request level lower than 17, it will request urlTemplate resource</span></span><br><span class=\"line\"><span class=\"comment\">   if level is more than 17 it will request </span></span><br><span class=\"line\"><span class=\"comment\">   'http://localhost/#'[bad request]</span></span><br><span class=\"line\"><span class=\"comment\">   this situation make you have a high level tile image, then your</span></span><br><span class=\"line\"><span class=\"comment\">   high level request don't have any tile image</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \"esri/request\" =&gt; esriRequest</span></span><br><span class=\"line\"><span class=\"comment\">// \"esri/layers/BaseTileLayer\" =&gt; BaseTileLayer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TDTLayer = BaseTileLayer.createSubclass(&#123;</span><br><span class=\"line\">    properties: &#123;</span><br><span class=\"line\">        urlTemplate: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getTileUrl: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// you can define any request rule here</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (level &lt; <span class=\"number\">17</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.urlTemplate;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'http://localhost/#'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchTile: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">level, row, col</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> url = <span class=\"keyword\">this</span>.getTileUrl(level, row, col);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> esriRequest(url, &#123;</span><br><span class=\"line\">            responseType: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">            allowImageDataAccess: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> image = response.data;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> width = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> height = <span class=\"keyword\">this</span>.tileInfo.size[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> context = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">                canvas.width = width;</span><br><span class=\"line\">                canvas.height = height;</span><br><span class=\"line\">                context.drawImage(image, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> canvas;</span><br><span class=\"line\">            &#125;.bind(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Use like simple layer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tdt_img = <span class=\"keyword\">new</span> TDTLayer(&#123;</span><br><span class=\"line\">    urlTemplate: <span class=\"string\">\"http://t0.tianditu.com/DataServer?T=vec_w&amp;x=&#123;col&#125;&amp;y=&#123;row&#125;&amp;l=&#123;level&#125;\"</span>,</span><br><span class=\"line\">    id: <span class=\"string\">\"img_layer\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">map.add(tdt_img);</span><br></pre></td></tr></table></figure>\n<h1>Query Task By Per Page</h1>\n<blockquote>\n<p>Usually query feature, just return 1000 features, if you want to get more,<br><br>\nyou should change server publish config. but it’s not Geek!<br><br>\nso query it by per page is a good idea !<br><br>\nbecause arcgis js api query not support ,but server rest full api support!</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>([</span><br><span class=\"line\">  <span class=\"string\">\"esri/request\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/Graphic\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/geometry/SpatialReference\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/Query\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/QueryTask\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"esri/tasks/support/StatisticDefinition\"</span></span><br><span class=\"line\">], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">esriRequest, Graphic, SpatialReference, Query, QueryTask, StatisticDefinition</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryPageTool = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页分批请求数据</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; query 仅支持属性： where, returnGeometry, outSpatialReference, outFields, orderByFields</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; queryTask </span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; pageSize 每页请求的数量（一般不大于1000）</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; anyField 任意一个字段名</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; theadCount 每批请求的个数 </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    queryByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, anyField, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> countStatistic = &#123;</span><br><span class=\"line\">        onStatisticField: anyField,</span><br><span class=\"line\">        outStatisticFieldName: <span class=\"string\">'count'</span>,</span><br><span class=\"line\">        statisticType: <span class=\"string\">'count'</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> saveArr = [];</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.queryFeatures(query, queryTask, [countStatistic]).then(<span class=\"function\">(<span class=\"params\">countRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(countRes.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(countRes.features) &amp;&amp; countRes.features.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> recordCount = countRes.features[<span class=\"number\">0</span>].attributes.count;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">'count: '</span>, recordCount);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, <span class=\"number\">0</span>, recordCount, [], theadCount);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Convert query param to url property</span></span><br><span class=\"line\"><span class=\"comment\">     * @param &#123;*&#125; query </span></span><br><span class=\"line\"><span class=\"comment\">     * @param  pageSize 单页数量大小</span></span><br><span class=\"line\"><span class=\"comment\">     * @param number firstRecordRid 该页第一条记录的序号</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    covertQueryToQueryObj: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> baseObj = &#123;</span><br><span class=\"line\">        f: <span class=\"string\">'json'</span>,</span><br><span class=\"line\">        spatialRel: <span class=\"string\">'esriSpatialRelIntersects'</span>,</span><br><span class=\"line\">        resultRecordCount: pageSize,</span><br><span class=\"line\">        resultOffset: firstRecordRid</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// 把where转过去</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.where)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'where'</span>] = query.where;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.returnGeometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'returnGeometry'</span>] = query.returnGeometry;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出坐标系</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outSpatialReference)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outSR'</span>] = query.outSpatialReference.wkid;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Geometry 转换</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.geometry)) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'inSR'</span>] = query.geometry.spatialReference.wkid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'extent'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryEnvelope'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polygon'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolygon'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'polyline'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPolyline'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (query.geometry.type === <span class=\"string\">'point'</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometry'</span>] = <span class=\"built_in\">JSON</span>.stringify(query.geometry.toJSON());</span><br><span class=\"line\">          baseObj[<span class=\"string\">'geometryType'</span>] = <span class=\"string\">'esriGeometryPoint'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 返回字段处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.outFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.outFields) &amp;&amp; query.outFields.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        baseObj[<span class=\"string\">'outFields'</span>] = query.outFields.toString();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 排序处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(query.orderByFields) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(query.orderByFields)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// baseObj['orderByFields']</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> t = <span class=\"string\">''</span>;</span><br><span class=\"line\">        query.orderByFields.forEach(<span class=\"function\">(<span class=\"params\">orderField</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> deal = orderField.trim().replace(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">' '</span>); <span class=\"comment\">// 前后去空格并去掉中间重复的空格</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> splitArr = deal.split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">'%2C'</span> + splitArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (splitArr.length === <span class=\"number\">2</span> &amp;&amp; (splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'DESC'</span> || splitArr[<span class=\"number\">1</span>] === <span class=\"string\">'ASC'</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">              t += deal;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              t += <span class=\"string\">`%2C<span class=\"subst\">$&#123;deal&#125;</span>`</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          baseObj[<span class=\"string\">'orderByFields'</span>] = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> baseObj;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将传入的feature信息转换成 Graphic</span></span><br><span class=\"line\"><span class=\"comment\">     * @param object : feature 请求回来的Feature </span></span><br><span class=\"line\"><span class=\"comment\">     * @param string: geometryType 图形类型</span></span><br><span class=\"line\"><span class=\"comment\">     * @param spatialReference: sr 返回的空间参考对象</span></span><br><span class=\"line\"><span class=\"comment\">     * @param Graphic: Graphic </span></span><br><span class=\"line\"><span class=\"comment\">     * @param SpatialReference: SpatialReference class</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertFeatureToGraphic: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">feature, geometryType, sr, Graphic, SpatialReference</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isNullOrUndefined(feature.geometry)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> feature;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> spatialReference = <span class=\"keyword\">new</span> SpatialReference(sr);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polygon'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polygon'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'polyline'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'polyline'</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (geometryType.toLowerCase().includes(<span class=\"string\">'point'</span>)) &#123;</span><br><span class=\"line\">        feature.geometry.type = <span class=\"string\">'point'</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      feature[<span class=\"string\">'spatialReference'</span>] = spatialReference;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> g = <span class=\"keyword\">new</span> Graphic(feature);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将查询对象转成字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * @param object: newQuery 查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    convertQueryToRequestString: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newQuery</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> body = <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> prop <span class=\"keyword\">in</span> newQuery) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(newQuery[prop])) &#123;</span><br><span class=\"line\">          body += (<span class=\"built_in\">encodeURIComponent</span>(prop) + <span class=\"string\">'='</span> + <span class=\"built_in\">encodeURIComponent</span>(newQuery[prop])) + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      body = body.replace(<span class=\"regexp\">/\\&amp;$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> body;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryRecycle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (features.length &lt; recordCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> promiseArr = [];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> max = firstRecordRid + theadCount * pageSize;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; firstRecordRid &lt; max &amp;&amp; firstRecordRid &lt; recordCount; firstRecordRid += pageSize) &#123;</span><br><span class=\"line\">          promiseArr.push(<span class=\"keyword\">this</span>.queryFeaturesByPage(query, queryTask, pageSize, firstRecordRid));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Promise</span>.all(promiseArr).then(<span class=\"function\">(<span class=\"params\">resArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resArr.forEach(<span class=\"function\">(<span class=\"params\">subRes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!isNullOrUndefined(subRes) &amp;&amp; !isNullOrUndefined(subRes.features)) &#123;</span><br><span class=\"line\">              features = features.concat(subRes.features);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.queryRecycle(query, queryTask, pageSize, firstRecordRid, recordCount, features, theadCount);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(e);</span><br><span class=\"line\">          observer.error(e);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// output all record</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'all records： '</span>, features);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeatures: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, constraints</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> q = <span class=\"keyword\">new</span> Query(query);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> qt = <span class=\"keyword\">new</span> QueryTask(queryTask);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!isNullOrUndefined(constraints) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(constraints)) &#123;</span><br><span class=\"line\">        q.outStatistics = [];</span><br><span class=\"line\">        constraints.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> tempStatisticDefinition = <span class=\"keyword\">new</span> StatisticDefinition();</span><br><span class=\"line\">          tempStatisticDefinition.statisticType = item.statisticType;</span><br><span class=\"line\">          tempStatisticDefinition.onStatisticField = item.onStatisticField;</span><br><span class=\"line\">          tempStatisticDefinition.outStatisticFieldName = item.outStatisticFieldName;</span><br><span class=\"line\">          q.outStatistics.push(tempStatisticDefinition);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> qt.execute(q);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    queryFeaturesByPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">query, queryTask, pageSize, firstRecordRid</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> newQuery = <span class=\"keyword\">this</span>.covertQueryToQueryObj(query, pageSize, firstRecordRid);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> body = <span class=\"keyword\">this</span>.convertQueryToRequestString(newQuery);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> esriRequest(<span class=\"string\">`<span class=\"subst\">$&#123;queryTask.url&#125;</span>/query?<span class=\"subst\">$&#123;body&#125;</span>`</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isNullOrUndefined(res.data) &amp;&amp; !isNullOrUndefined(res.data.features) &amp;&amp; <span class=\"built_in\">Array</span>.isArray(res.data.features)) &#123;</span><br><span class=\"line\">          res.data.features.forEach(<span class=\"function\">(<span class=\"params\">feature, idx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            res.data.features[idx] = <span class=\"keyword\">this</span>.convertFeatureToGraphic(feature, res.data.geometryType, res.data.spatialReference, Graphic, SpatialReference);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res.data;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// test</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = &#123;</span><br><span class=\"line\">    where: <span class=\"string\">\"1=1\"</span>,</span><br><span class=\"line\">    outFields: [<span class=\"string\">'*'</span>],</span><br><span class=\"line\">    returnGeometry: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryTask = &#123; <span class=\"attr\">url</span>: <span class=\"string\">'http://localhost:6080/arcgis/rest/services/test/temp/MapServer/0'</span> &#125;;</span><br><span class=\"line\">  <span class=\"comment\">// every cycle will request 5 times, every time request 1000 features.</span></span><br><span class=\"line\">  queryPageTool.queryByPage(query, queryTask, <span class=\"number\">1000</span>, <span class=\"string\">'objectid'</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNullOrUndefined</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj === <span class=\"literal\">undefined</span> || obj === <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Server operation(有关服务器操作)","catalog":true,"date":"2018-04-27T16:03:40.000Z","subtitle":null,"header-img":"mnt.jpg","catagories":["Linux"],"_content":"> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.106.122.111\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means\n# unzip in current directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nunzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n> wget is a tool for download\n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# rdesktop\n**rdesktop is a tool, which use for connect windows server.\n\n## connect default (full screen),\n> alt + ctrl + enter   quit full screen\n```bash\nrdesktop -f 192.168.1.3\n```\n\n## connect and set resolution\n```bash\n>rdesktop -g 1366*768 192.168.1.3\n```\n\n## connect By user and psw.\n```bash\nrdesktop -f 111.111.222.222 -u Administrator -p 'password'\n```\n\n## connect with enable directory\n>mount local directory [/home/guest/file] to server\n```bash\nrdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file\n```","source":"_posts/Server-operation-有关服务器操作.md","raw":"---\ntitle: Server operation(有关服务器操作)\ncatalog: true\ndate: 2018-04-28 00:03:40\nsubtitle:\nheader-img: \"mnt.jpg\"\ntags:\n- Linux\ncatagories:\n- Linux\n---\n> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.106.122.111\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means\n# unzip in current directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nunzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n> wget is a tool for download\n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# rdesktop\n**rdesktop is a tool, which use for connect windows server.\n\n## connect default (full screen),\n> alt + ctrl + enter   quit full screen\n```bash\nrdesktop -f 192.168.1.3\n```\n\n## connect and set resolution\n```bash\n>rdesktop -g 1366*768 192.168.1.3\n```\n\n## connect By user and psw.\n```bash\nrdesktop -f 111.111.222.222 -u Administrator -p 'password'\n```\n\n## connect with enable directory\n>mount local directory [/home/guest/file] to server\n```bash\nrdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file\n```","slug":"Server-operation-有关服务器操作","published":1,"updated":"2018-10-27T17:11:51.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnxe1f980006egkb89j43ssg","content":"<blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1><span id=\"ssh-连接服务器\">ssh 连接服务器</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.106.122.111</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"scp-uplaod-or-download-file\">scp (uplaod or download file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tar-and-zip-zip-or-unzip-file\">tar and zip (zip or unzip file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means</span></span><br><span class=\"line\"><span class=\"comment\"># unzip in current directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">unzip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1><span id=\"wget\">wget</span></h1>\n<blockquote>\n<p>wget is a tool for download</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"rdesktop\">rdesktop</span></h1>\n<p>**rdesktop is a tool, which use for connect windows server.</p>\n<h2><span id=\"connect-default-full-screen\">connect default (full screen),</span></h2>\n<blockquote>\n<p>alt + ctrl + enter   quit full screen</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-and-set-resolution\">connect and set resolution</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;rdesktop -g 1366*768 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-by-user-and-psw\">connect By user and psw.</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -u Administrator -p <span class=\"string\">'password'</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"connect-with-enable-directory\">connect with enable directory</span></h2>\n<blockquote>\n<p>mount local directory [/home/guest/file] to server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1>ssh 连接服务器</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.106.122.111</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1>scp (uplaod or download file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1>tar and zip (zip or unzip file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory,if not set '-C' or '-d' means</span></span><br><span class=\"line\"><span class=\"comment\"># unzip in current directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">unzip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1>wget</h1>\n<blockquote>\n<p>wget is a tool for download</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1>rdesktop</h1>\n<p>**rdesktop is a tool, which use for connect windows server.</p>\n<h2>connect default (full screen),</h2>\n<blockquote>\n<p>alt + ctrl + enter   quit full screen</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2>connect and set resolution</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;rdesktop -g 1366*768 192.168.1.3</span><br></pre></td></tr></table></figure>\n<h2>connect By user and psw.</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -u Administrator -p <span class=\"string\">'password'</span></span><br></pre></td></tr></table></figure>\n<h2>connect with enable directory</h2>\n<blockquote>\n<p>mount local directory [/home/guest/file] to server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rdesktop -f 111.111.222.222 -r disk:myDir=/home/guest/file</span><br></pre></td></tr></table></figure>"},{"title":"Init this site","catalog":true,"date":"2018-04-05T17:34:00.000Z","subtitle":"初始化！","header-img":"site-init.png","_content":"> 建站日，标记下...\n","source":"_posts/Init-this-site.md","raw":"---\ntitle: Init this site\ncatalog: true\ndate: 2018-04-06 01:34:00\nsubtitle: \"初始化！\"\nheader-img: \"site-init.png\"\ntags:\n---\n> 建站日，标记下...\n","slug":"Init-this-site","published":1,"updated":"2018-07-11T15:03:12.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnxe1f9b0008egkbdztrctww","content":"<blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n"},{"title":"网络工具","catalog":true,"date":"2018-10-27T16:45:29.000Z","subtitle":"nc,curl","header-img":null,"catagories":["Linux","Network"],"_content":"## nc(netcat) 强大的网络工具\n### 检测端口开放:\n> 扫描 192.168.2.3的8857-8890端口\n```bash\nnc -vz 192.168.2.3 8857-8890\n```\n\n### 建立TCP监听\n>监听本机 2389端口(tcp)\n```bash\nnc -l 2389\n```\n\n### 连接端口(tcp)\n>连接192.168.2.3的2389\n```bash\nnc 192.168.2.3 2389\n```\n* 如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中\n* windows中使用 telnet建立连接\n### 未完待续...\n\n\n## curl (文件传输工具,支持http,https,ftp)\n### 请求内容\n>请求某网站的主页\n```bash\ncurl www.demo-site.com\n```\n### 未完待续...","source":"_posts/网络工具.md","raw":"---\ntitle: 网络工具\ncatalog: true\ndate: 2018-10-28 00:45:29\nsubtitle: nc,curl\nheader-img:\ntags:\n- Linux\n- Network\ncatagories:\n- Linux\n- Network\n---\n## nc(netcat) 强大的网络工具\n### 检测端口开放:\n> 扫描 192.168.2.3的8857-8890端口\n```bash\nnc -vz 192.168.2.3 8857-8890\n```\n\n### 建立TCP监听\n>监听本机 2389端口(tcp)\n```bash\nnc -l 2389\n```\n\n### 连接端口(tcp)\n>连接192.168.2.3的2389\n```bash\nnc 192.168.2.3 2389\n```\n* 如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中\n* windows中使用 telnet建立连接\n### 未完待续...\n\n\n## curl (文件传输工具,支持http,https,ftp)\n### 请求内容\n>请求某网站的主页\n```bash\ncurl www.demo-site.com\n```\n### 未完待续...","slug":"网络工具","published":1,"updated":"2018-10-27T17:02:01.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnxe1f9c000begkbdm5jd02o","content":"<h2><span id=\"ncnetcat-强大的网络工具\">nc(netcat) 强大的网络工具</span></h2>\n<h3><span id=\"检测端口开放\">检测端口开放:</span></h3>\n<blockquote>\n<p>扫描 192.168.2.3的8857-8890端口</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.2.3 8857-8890</span><br></pre></td></tr></table></figure>\n<h3><span id=\"建立tcp监听\">建立TCP监听</span></h3>\n<blockquote>\n<p>监听本机 2389端口(tcp)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l 2389</span><br></pre></td></tr></table></figure>\n<h3><span id=\"连接端口tcp\">连接端口(tcp)</span></h3>\n<blockquote>\n<p>连接192.168.2.3的2389</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 192.168.2.3 2389</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中</li>\n<li>windows中使用 telnet建立连接</li>\n</ul>\n<h3><span id=\"未完待续\">未完待续…</span></h3>\n<h2><span id=\"curl-文件传输工具支持httphttpsftp\">curl (文件传输工具,支持http,https,ftp)</span></h2>\n<h3><span id=\"请求内容\">请求内容</span></h3>\n<blockquote>\n<p>请求某网站的主页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl www.demo-site.com</span><br></pre></td></tr></table></figure>\n<h3><span id=\"未完待续\">未完待续…</span></h3>\n","site":{"data":{}},"excerpt":"","more":"<h2>nc(netcat) 强大的网络工具</h2>\n<h3>检测端口开放:</h3>\n<blockquote>\n<p>扫描 192.168.2.3的8857-8890端口</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.2.3 8857-8890</span><br></pre></td></tr></table></figure>\n<h3>建立TCP监听</h3>\n<blockquote>\n<p>监听本机 2389端口(tcp)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l 2389</span><br></pre></td></tr></table></figure>\n<h3>连接端口(tcp)</h3>\n<blockquote>\n<p>连接192.168.2.3的2389</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 192.168.2.3 2389</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果A主机在监听,B主机在连接的话,一旦连接成功,在B主机的命令行输入的内容将显示在B主机的命令行中</li>\n<li>windows中使用 telnet建立连接</li>\n</ul>\n<h3>未完待续…</h3>\n<h2>curl (文件传输工具,支持http,https,ftp)</h2>\n<h3>请求内容</h3>\n<blockquote>\n<p>请求某网站的主页</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl www.demo-site.com</span><br></pre></td></tr></table></figure>\n<h3>未完待续…</h3>\n"},{"title":"常用Linux命令(小松鼠)","catalog":true,"date":"2018-04-07T02:03:06.000Z","subtitle":"日常折腾Ubuntu","header-img":"Ubuntu.png","catagories":["Linux"],"_content":"> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","source":"_posts/常用Linux命令-小松鼠.md","raw":"---\ntitle: 常用Linux命令(小松鼠)\ncatalog: true\ndate: 2018-04-07 10:03:06\nsubtitle: \"日常折腾Ubuntu\"\nheader-img: \"Ubuntu.png\"\ntags:\n- Linux\n- Ubuntu\ncatagories:\n- Linux\n---\n> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","slug":"常用Linux命令-小松鼠","published":1,"updated":"2018-07-11T15:03:12.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnxe1f9e000cegkbn47ve8a2","content":"<blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1><span id=\"rm\">rm</span></h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1><span id=\"cp\">cp</span></h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1><span id=\"mv\">mv</span></h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"md5\">md5</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1><span id=\"install-deb\">install .deb</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1><span id=\"boot-u-disk-make\">boot u-disk make</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1>rm</h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1>cp</h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1>mv</h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1>md5</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1>install .deb</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1>boot u-disk make</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu常用软件安装","catalog":true,"date":"2018-04-07T04:39:46.000Z","subtitle":"记录软件安装过程","header-img":"back1.jpg","_content":"> 常用软件安装\n-------------------------\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n# tomcat\n\n> downlaod from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- select source code\n```\ntar xzvf node-v8.11.1.tar.gz -C/usr/program\n```\n> \n> set environment\n```\nvi /etc/profile\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/usr/program/node-v8.11.1\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource /etc/profile\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n>\n> if there are some permission like\n> \"checkPermissions Missing write access to /home/hcy/node/lib/node_module\"\n```\nsudo chown -R $(whoami) /home/hcy/node/\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/autoproxy.zip), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n# nginx\n```bash\n# install \nsudo apt-get update\nsudo apt-get install nginx\n# show and check config file\nnginx -t\n# start\nnginx -c /etc/nginx/nginx.conf\n# stop\npkill -9 nginx\n```\n> the config file is on 'nginx.conf'\n> config the 80 proxy to 8080(tomcat)\n```\nserver {\n\tlisten 80 default_server;\n\tlisten [::]:80 default_server;\n\troot /var/www/html;\n\tindex index.html index.htm\n\tserver_name 127.0.0.1:8080;\n\tlocation / {\n\t\tproxy_pass http://127.0.0.1:8080;\n\t}\n}\n```\n\n> config the static file to some subdomain,\n> like in the director  /www/api\n```\nserver {\n    listen 80;\n    server_name api.domains.com;\n    root /www/api;\n    index index.html;\n    location / {\n\troot /www/api;\n\tindex index.html;\n    }\n}\n```\n\n> config the proxy some request , like google map\n\n```\nserver {\n\tlisten\t80;\n\tserver_name gmap.domain.com;\n\tclient_max_body_size 20M;\n\tfastcgi_buffers 4 4K;\n\tsendfile on;\n\tsend_timeout 600s;\n\t\n\tlocation /kh {\n\t\tproxy_redirect off;\n\t\tproxy_set_header Host khm2.google.com;\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\tproxy_pass http://khm2.google.com;\n\t}\n        location /vt {\n                proxy_redirect off;\n                proxy_set_header Host mt0.google.cn;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://mt0.google.cn;\n        }\n\n}\n\n```\n# mount (disk)\n\n> look disk info, find disk sign like '/dev/sda1'\n```\nsudo fdisk -l\n```\n>find file system type\n```\nsudo blkid\n```\n> edit config\n```\nsudo vi /etc/fstab\n```\n> in the last line ,add flow\n```\n/dev/sda1\t\t/media/disk\t\tntfs\tdefaults\t0 \t0\n> /dev/sda1  is disk sign\n> /media/disk\t\twhere the disk mount\n> ntfs\t\tfile system\n>0 (first)\tdisk backup\n>0 (second)\tdisk check (0 means don't backup  don't check\n```\n# idea\n\n## 1. download idea ultimate\n## 2. install\n## 3. use docker,create a license machine\n```bash\nsudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb\n```\n\n## 4. type license server from docker ip address and port\n>like 'http://localhost:1212'","source":"_posts/Ubuntu常用软件安装.md","raw":"---\ntitle: Ubuntu常用软件安装\ncatalog: true\ndate: 2018-04-07 12:39:46\nsubtitle: \"记录软件安装过程\"\nheader-img: \"back1.jpg\"\ntags:\n- Linux\n- Ubuntu\n---\n> 常用软件安装\n-------------------------\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n# tomcat\n\n> downlaod from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- select source code\n```\ntar xzvf node-v8.11.1.tar.gz -C/usr/program\n```\n> \n> set environment\n```\nvi /etc/profile\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/usr/program/node-v8.11.1\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource /etc/profile\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n>\n> if there are some permission like\n> \"checkPermissions Missing write access to /home/hcy/node/lib/node_module\"\n```\nsudo chown -R $(whoami) /home/hcy/node/\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/autoproxy.zip), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n# nginx\n```bash\n# install \nsudo apt-get update\nsudo apt-get install nginx\n# show and check config file\nnginx -t\n# start\nnginx -c /etc/nginx/nginx.conf\n# stop\npkill -9 nginx\n```\n> the config file is on 'nginx.conf'\n> config the 80 proxy to 8080(tomcat)\n```\nserver {\n\tlisten 80 default_server;\n\tlisten [::]:80 default_server;\n\troot /var/www/html;\n\tindex index.html index.htm\n\tserver_name 127.0.0.1:8080;\n\tlocation / {\n\t\tproxy_pass http://127.0.0.1:8080;\n\t}\n}\n```\n\n> config the static file to some subdomain,\n> like in the director  /www/api\n```\nserver {\n    listen 80;\n    server_name api.domains.com;\n    root /www/api;\n    index index.html;\n    location / {\n\troot /www/api;\n\tindex index.html;\n    }\n}\n```\n\n> config the proxy some request , like google map\n\n```\nserver {\n\tlisten\t80;\n\tserver_name gmap.domain.com;\n\tclient_max_body_size 20M;\n\tfastcgi_buffers 4 4K;\n\tsendfile on;\n\tsend_timeout 600s;\n\t\n\tlocation /kh {\n\t\tproxy_redirect off;\n\t\tproxy_set_header Host khm2.google.com;\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\tproxy_pass http://khm2.google.com;\n\t}\n        location /vt {\n                proxy_redirect off;\n                proxy_set_header Host mt0.google.cn;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://mt0.google.cn;\n        }\n\n}\n\n```\n# mount (disk)\n\n> look disk info, find disk sign like '/dev/sda1'\n```\nsudo fdisk -l\n```\n>find file system type\n```\nsudo blkid\n```\n> edit config\n```\nsudo vi /etc/fstab\n```\n> in the last line ,add flow\n```\n/dev/sda1\t\t/media/disk\t\tntfs\tdefaults\t0 \t0\n> /dev/sda1  is disk sign\n> /media/disk\t\twhere the disk mount\n> ntfs\t\tfile system\n>0 (first)\tdisk backup\n>0 (second)\tdisk check (0 means don't backup  don't check\n```\n# idea\n\n## 1. download idea ultimate\n## 2. install\n## 3. use docker,create a license machine\n```bash\nsudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb\n```\n\n## 4. type license server from docker ip address and port\n>like 'http://localhost:1212'","slug":"Ubuntu常用软件安装","published":1,"updated":"2018-10-27T17:54:05.896Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnxe1f9f000degkbl78qu37o","content":"<blockquote>\n<p>常用软件安装</p>\n</blockquote>\n<hr>\n<h1><span id=\"java\">java</span></h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tomcat\">tomcat</span></h1>\n<blockquote>\n<p>downlaod from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1><span id=\"nodejs\">nodejs</span></h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>– select source code</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzvf <span class=\"keyword\">node</span><span class=\"title\">-v8</span>.<span class=\"number\">11.1</span>.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vi</span> /etc/<span class=\"keyword\">profile</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/usr/program/node-v8.11.1</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">source</span> <span class=\"regexp\">/etc/</span>profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>if there are some permission like<br>\n&quot;checkPermissions Missing write access to /home/hcy/node/lib/node_module&quot;</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R $(whoami) /home/hcy/<span class=\"keyword\">node</span><span class=\"title\">/</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"shadowsocks-ss\">shadowsocks (ss)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/autoproxy.zip\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n<h1><span id=\"nginx\">nginx</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install </span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"comment\"># show and check config file</span></span><br><span class=\"line\">nginx -t</span><br><span class=\"line\"><span class=\"comment\"># start</span></span><br><span class=\"line\">nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># stop</span></span><br><span class=\"line\">pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>the config file is on 'nginx.conf’<br>\nconfig the 80 proxy to 8080(tomcat)</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> [::]:<span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html index.htm</span><br><span class=\"line\">\tserver_name <span class=\"number\">127.0.0.1:8080</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the static file to some subdomain,<br>\nlike in the director  /www/api</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> api.domains.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the proxy some request , like google map</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span>\t<span class=\"number\">80</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> gmap.domain.com;</span><br><span class=\"line\">\t<span class=\"attribute\">client_max_body_size</span> <span class=\"number\">20M</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">4</span> <span class=\"number\">4K</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">send_timeout</span> <span class=\"number\">600s</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> /kh &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> Host khm2.google.com;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://khm2.google.com;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> /vt &#123;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> Host mt0.google.cn;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_pass</span> http://mt0.google.cn;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1><span id=\"mount-disk\">mount (disk)</span></h1>\n<blockquote>\n<p>look disk info, find disk sign like ‘/dev/sda1’</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo fdisk -l</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>find file system type</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo blkid</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>edit config</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"regexp\">/etc/</span>fstab</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>in the last line ,add flow</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sda1\t\t/media/disk\t\tntfs\tdefaults\t0 \t0</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/sda1  is disk sign</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /media/disk\t\t<span class=\"built_in\">where</span> the disk mount</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> ntfs\t\tfile system</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">0 (first)\tdisk backup</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">0 (second)\tdisk check (0 means don<span class=\"string\">'t backup  don'</span>t check</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"idea\">idea</span></h1>\n<h2><span id=\"1-download-idea-ultimate\">1. download idea ultimate</span></h2>\n<h2><span id=\"2-install\">2. install</span></h2>\n<h2><span id=\"3-use-dockercreate-a-license-machine\">3. use docker,create a license machine</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb</span><br></pre></td></tr></table></figure>\n<h2><span id=\"4-type-license-server-from-docker-ip-address-and-port\">4. type license server from docker ip address and port</span></h2>\n<blockquote>\n<p>like ‘<a href=\"http://localhost:1212\" target=\"_blank\" rel=\"noopener\">http://localhost:1212</a>’</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>常用软件安装</p>\n</blockquote>\n<hr>\n<h1>java</h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1>tomcat</h1>\n<blockquote>\n<p>downlaod from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1>nodejs</h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>– select source code</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzvf <span class=\"keyword\">node</span><span class=\"title\">-v8</span>.<span class=\"number\">11.1</span>.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vi</span> /etc/<span class=\"keyword\">profile</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/usr/program/node-v8.11.1</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">source</span> <span class=\"regexp\">/etc/</span>profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>if there are some permission like<br>\n&quot;checkPermissions Missing write access to /home/hcy/node/lib/node_module&quot;</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R $(whoami) /home/hcy/<span class=\"keyword\">node</span><span class=\"title\">/</span></span><br></pre></td></tr></table></figure>\n<h1>shadowsocks (ss)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/autoproxy.zip\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n<h1>nginx</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install </span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"comment\"># show and check config file</span></span><br><span class=\"line\">nginx -t</span><br><span class=\"line\"><span class=\"comment\"># start</span></span><br><span class=\"line\">nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># stop</span></span><br><span class=\"line\">pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>the config file is on 'nginx.conf’<br>\nconfig the 80 proxy to 8080(tomcat)</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> [::]:<span class=\"number\">80</span> default_server;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /var/www/html;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html index.htm</span><br><span class=\"line\">\tserver_name <span class=\"number\">127.0.0.1:8080</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the static file to some subdomain,<br>\nlike in the director  /www/api</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> api.domains.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /www/api;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span> index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>config the proxy some request , like google map</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span>\t<span class=\"number\">80</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> gmap.domain.com;</span><br><span class=\"line\">\t<span class=\"attribute\">client_max_body_size</span> <span class=\"number\">20M</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">4</span> <span class=\"number\">4K</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">send_timeout</span> <span class=\"number\">600s</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"attribute\">location</span> /kh &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> Host khm2.google.com;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://khm2.google.com;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> /vt &#123;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> Host mt0.google.cn;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                <span class=\"attribute\">proxy_pass</span> http://mt0.google.cn;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1>mount (disk)</h1>\n<blockquote>\n<p>look disk info, find disk sign like ‘/dev/sda1’</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo fdisk -l</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>find file system type</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo blkid</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>edit config</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"regexp\">/etc/</span>fstab</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>in the last line ,add flow</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sda1\t\t/media/disk\t\tntfs\tdefaults\t0 \t0</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /dev/sda1  is disk sign</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> /media/disk\t\t<span class=\"built_in\">where</span> the disk mount</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> ntfs\t\tfile system</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">0 (first)\tdisk backup</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">0 (second)\tdisk check (0 means don<span class=\"string\">'t backup  don'</span>t check</span></span><br></pre></td></tr></table></figure>\n<h1>idea</h1>\n<h2>1. download idea ultimate</h2>\n<h2>2. install</h2>\n<h2>3. use docker,create a license machine</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --net=host --restart=always --name jetbrains -p 1212:1212 jbtools/jb</span><br></pre></td></tr></table></figure>\n<h2>4. type license server from docker ip address and port</h2>\n<blockquote>\n<p>like ‘<a href=\"http://localhost:1212\" target=\"_blank\" rel=\"noopener\">http://localhost:1212</a>’</p>\n</blockquote>\n"},{"title":"PostgreSQL","catalog":true,"date":"2018-10-31T16:08:31.000Z","subtitle":null,"header-img":null,"_content":"<center>PostgreSQL</center>\n\n# Insert Geometry into Table[PostGIS]\n```sql\n-- insert a wkid 4326 point. langitude 103.24, latitude 30.28\ninsert ST_GeomFromText('POINT(103.24 30.28)',4326)\n\n-- insert a line\ninsert ST_GeomFromText('LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)',4326)\n\n-- insert a polygon\ninsert ST_GeomFromText('POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))',4326)\n```\n\n# update from a exist table\n> update one table from another table, relationship like images\n\n![avator](/img/E-R.png)\n```sql\nupdate table1 set f_23 = A.f_23, f_24 = A.f_24\nfrom (select uid, f_23, f_24from temp1) as A\nwhere table1.year = 2018 and table1.uid = A.uid\n```\n\n# Concat All column value and split column\n## Concat\n```sql\nselect name from students\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n```sql\nselect string_agg(name, ',') as nameConcat from students\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n---------------------------------------------------\n## Split\n```sql\nselect nameConcat from ConcatTB\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n\n```sql\nselect regexp_split_to_table(name, ',') as name from ConcatTB\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n# Get all column info of table\n``` sql\nselect * from information_schema.columns\nwhere table_schema='public' and table_name='student'\n```","source":"_posts/PostgreSQL.md","raw":"---\ntitle: PostgreSQL\ncatalog: true\ndate: 2018-11-01 00:08:31\nsubtitle:\nheader-img:\ntags:\n- Database\n- PostgreSQL\n---\n<center>PostgreSQL</center>\n\n# Insert Geometry into Table[PostGIS]\n```sql\n-- insert a wkid 4326 point. langitude 103.24, latitude 30.28\ninsert ST_GeomFromText('POINT(103.24 30.28)',4326)\n\n-- insert a line\ninsert ST_GeomFromText('LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)',4326)\n\n-- insert a polygon\ninsert ST_GeomFromText('POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))',4326)\n```\n\n# update from a exist table\n> update one table from another table, relationship like images\n\n![avator](/img/E-R.png)\n```sql\nupdate table1 set f_23 = A.f_23, f_24 = A.f_24\nfrom (select uid, f_23, f_24from temp1) as A\nwhere table1.year = 2018 and table1.uid = A.uid\n```\n\n# Concat All column value and split column\n## Concat\n```sql\nselect name from students\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n```sql\nselect string_agg(name, ',') as nameConcat from students\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n---------------------------------------------------\n## Split\n```sql\nselect nameConcat from ConcatTB\n```\n| nameConcat          |\n| --------------------|\n| 张三,李四,王五        |\n\n```sql\nselect regexp_split_to_table(name, ',') as name from ConcatTB\n```\n| name        |\n| -----------|\n| 张三        |\n| 李四        |\n| 王五        |\n# Get all column info of table\n``` sql\nselect * from information_schema.columns\nwhere table_schema='public' and table_name='student'\n```","slug":"PostgreSQL","published":1,"updated":"2019-03-22T16:28:44.885Z","_id":"cjnxe265e000qegkbu3tzhnpp","comments":1,"layout":"post","photos":[],"link":"","content":"<center>PostgreSQL</center>\n<h1><span id=\"insert-geometry-into-tablepostgis\">Insert Geometry into Table[PostGIS]</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- insert a wkid 4326 point. langitude 103.24, latitude 30.28</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POINT(103.24 30.28)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a line</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a polygon</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))'</span>,<span class=\"number\">4326</span>)</span><br></pre></td></tr></table></figure>\n<h1><span id=\"update-from-a-exist-table\">update from a exist table</span></h1>\n<blockquote>\n<p>update one table from another table, relationship like images</p>\n</blockquote>\n<p><img src=\"/img/E-R.png\" alt=\"avator\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> table1 <span class=\"keyword\">set</span> f_23 = A.f_23, f_24 = A.f_24</span><br><span class=\"line\"><span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> uid, f_23, f_24from temp1) <span class=\"keyword\">as</span> A</span><br><span class=\"line\"><span class=\"keyword\">where</span> table1.year = <span class=\"number\">2018</span> <span class=\"keyword\">and</span> table1.uid = A.uid</span><br></pre></td></tr></table></figure>\n<h1><span id=\"concat-all-column-value-and-split-column\">Concat All column value and split column</span></h1>\n<h2><span id=\"concat\">Concat</span></h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> string_agg(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> nameConcat <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2><span id=\"split\">Split</span></h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> nameConcat <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> regexp_split_to_table(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<h1><span id=\"get-all-column-info-of-table\">Get all column info of table</span></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.columns</span><br><span class=\"line\"><span class=\"keyword\">where</span> table_schema=<span class=\"string\">'public'</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">'student'</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<center>PostgreSQL</center>\n<h1>Insert Geometry into Table[PostGIS]</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- insert a wkid 4326 point. langitude 103.24, latitude 30.28</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POINT(103.24 30.28)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a line</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'LINESTRING(103.24 30.28, 103.29 30.33, 103.51 30.15)'</span>,<span class=\"number\">4326</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- insert a polygon</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> ST_GeomFromText(<span class=\"string\">'POLYGON((103.24 30.28, 103.29 30.33, 103.51 30.15))'</span>,<span class=\"number\">4326</span>)</span><br></pre></td></tr></table></figure>\n<h1>update from a exist table</h1>\n<blockquote>\n<p>update one table from another table, relationship like images</p>\n</blockquote>\n<p><img src=\"/img/E-R.png\" alt=\"avator\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> table1 <span class=\"keyword\">set</span> f_23 = A.f_23, f_24 = A.f_24</span><br><span class=\"line\"><span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> uid, f_23, f_24from temp1) <span class=\"keyword\">as</span> A</span><br><span class=\"line\"><span class=\"keyword\">where</span> table1.year = <span class=\"number\">2018</span> <span class=\"keyword\">and</span> table1.uid = A.uid</span><br></pre></td></tr></table></figure>\n<h1>Concat All column value and split column</h1>\n<h2>Concat</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> string_agg(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> nameConcat <span class=\"keyword\">from</span> students</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>Split</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> nameConcat <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>nameConcat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三,李四,王五</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> regexp_split_to_table(<span class=\"keyword\">name</span>, <span class=\"string\">','</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">name</span> <span class=\"keyword\">from</span> ConcatTB</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n</tr>\n<tr>\n<td>李四</td>\n</tr>\n<tr>\n<td>王五</td>\n</tr>\n</tbody>\n</table>\n<h1>Get all column info of table</h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.columns</span><br><span class=\"line\"><span class=\"keyword\">where</span> table_schema=<span class=\"string\">'public'</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">'student'</span></span><br></pre></td></tr></table></figure>"},{"title":"Linux(Mac)下创建自定义命令","catalog":true,"date":"2019-02-28T13:24:34.000Z","subtitle":"create a custom command","header-img":null,"catagories":["Linux","Shell"],"_content":"\n# Ubuntu\n\n* 基于 shell 创建一个自定义指令，在全局调用\n\n1. 先创建 shell 脚本( 名为 ngc )\n> 此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件\n```bash\n#!/bin/bash\nif [ ! -d \"$1\" ];\nthen\n\tmkdir \"$1\"\nfi\n\ntouch \"./\"$1\"/\"$1\".component.ts\"\ntouch \"./\"$1\"/\"$1\".component.css\"\ntouch \"./\"$1\"/\"$1\".component.html\"\necho \"create file success!\"\n```\n> 创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权\n```bash\nchmod +x ngc\n```\n\n2. 编辑 ~/.bashr 文件， 将shell所在文件夹导出为 全局PATH\n> 我的 shell 所在目录为  /home/root/.shell\n```bash\n# custom command dir\nexport PATH=$PATH:/home/root/.shell\n```\n\n3. 执行source 命令，\n```bash\nsource ~/.bashrc\n```\n\n4. 测试，在任意目录下运行命令\n```bash\nngc animal\n```\n> 在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！\n\n# Mac\n1. 创建shell 脚本(同上)\n\n2. Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)\n\n3. 测试 (mac中不用执行 source)\n\n> Success!\n\n\n\n","source":"_posts/Linux下创建自定义命令.md","raw":"---\ntitle: Linux(Mac)下创建自定义命令\ncatalog: true\ndate: 2019-02-28 21:24:34\nsubtitle: create a custom command\nheader-img:\ntags:\n- Linux\n- Shell\ncatagories:\n- Linux\n- Shell\n---\n\n# Ubuntu\n\n* 基于 shell 创建一个自定义指令，在全局调用\n\n1. 先创建 shell 脚本( 名为 ngc )\n> 此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件\n```bash\n#!/bin/bash\nif [ ! -d \"$1\" ];\nthen\n\tmkdir \"$1\"\nfi\n\ntouch \"./\"$1\"/\"$1\".component.ts\"\ntouch \"./\"$1\"/\"$1\".component.css\"\ntouch \"./\"$1\"/\"$1\".component.html\"\necho \"create file success!\"\n```\n> 创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权\n```bash\nchmod +x ngc\n```\n\n2. 编辑 ~/.bashr 文件， 将shell所在文件夹导出为 全局PATH\n> 我的 shell 所在目录为  /home/root/.shell\n```bash\n# custom command dir\nexport PATH=$PATH:/home/root/.shell\n```\n\n3. 执行source 命令，\n```bash\nsource ~/.bashrc\n```\n\n4. 测试，在任意目录下运行命令\n```bash\nngc animal\n```\n> 在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！\n\n# Mac\n1. 创建shell 脚本(同上)\n\n2. Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)\n\n3. 测试 (mac中不用执行 source)\n\n> Success!\n\n\n\n","slug":"Linux下创建自定义命令","published":1,"updated":"2019-02-28T13:56:11.821Z","_id":"cjsooo0b20000kxkbrwptkw4j","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span id=\"ubuntu\">Ubuntu</span></h1>\n<ul>\n<li>基于 shell 创建一个自定义指令，在全局调用</li>\n</ul>\n<ol>\n<li>先创建 shell 脚本( 名为 ngc )</li>\n</ol>\n<blockquote>\n<p>此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\tmkdir <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.ts\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.css\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.html\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"create file success!\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ngc</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编辑 ~/.bashr 文件， 将shell所在文件夹导出为 全局PATH</li>\n</ol>\n<blockquote>\n<p>我的 shell 所在目录为  /home/root/.shell</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># custom command dir</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/root/.shell</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行source 命令，</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>测试，在任意目录下运行命令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngc animal</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！</p>\n</blockquote>\n<h1><span id=\"mac\">Mac</span></h1>\n<ol>\n<li>\n<p>创建shell 脚本(同上)</p>\n</li>\n<li>\n<p>Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)</p>\n</li>\n<li>\n<p>测试 (mac中不用执行 source)</p>\n</li>\n</ol>\n<blockquote>\n<p>Success!</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1>Ubuntu</h1>\n<ul>\n<li>基于 shell 创建一个自定义指令，在全局调用</li>\n</ul>\n<ol>\n<li>先创建 shell 脚本( 名为 ngc )</li>\n</ol>\n<blockquote>\n<p>此处shell目的为，输入参数，创建一个名为参数的目录，并在目录下建立3个文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ];</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\tmkdir <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.ts\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.css\"</span></span><br><span class=\"line\">touch <span class=\"string\">\"./\"</span><span class=\"variable\">$1</span><span class=\"string\">\"/\"</span><span class=\"variable\">$1</span><span class=\"string\">\".component.html\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"create file success!\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>创建shell以后，如果没有执行权限，或者不能执行，使用 chmod 为其添加执行权</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ngc</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编辑 ~/.bashr 文件， 将shell所在文件夹导出为 全局PATH</li>\n</ol>\n<blockquote>\n<p>我的 shell 所在目录为  /home/root/.shell</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># custom command dir</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/root/.shell</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行source 命令，</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>测试，在任意目录下运行命令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngc animal</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在目录下创建了 animal目录，并在其下创建了3个文件， OK ！ Success！</p>\n</blockquote>\n<h1>Mac</h1>\n<ol>\n<li>\n<p>创建shell 脚本(同上)</p>\n</li>\n<li>\n<p>Ubuntu中导出路径是在 ~/.bashrc文件， mac中是 ~/.bash_profile (同上)</p>\n</li>\n<li>\n<p>测试 (mac中不用执行 source)</p>\n</li>\n</ol>\n<blockquote>\n<p>Success!</p>\n</blockquote>\n"},{"title":"Home PC Server Build","catalog":true,"date":"2019-03-22T16:31:00.000Z","subtitle":"Use your Home PC to create a server","header-img":null,"catagories":["Network"],"_content":"# By En-us\n* what we need ?\n1. A home PC\n2. A router\n3. A method can cross The Wall (墙)\n\n## 1. Get a domain\n* open the site [no-ip](https://www.noip.com), and then, registry a count.\n* create a host for free (every 30 days, it will confirm once)\n> what every port is ok, when you set your no-ip hosts.\n\n## 2. Set the ip\n* check your router, use the PPPoe way to link the internet.\n> if you don't know the username and password for the PPPoe acount,<br>\nyou can call your ISP a tell to resolve.\n\n## 3. Set the Forward on router\n* login in your router manage page (usually the url is [192.168.1.1](http://192.168.1.1))\n* find the <b>Forward<b> setting, and forward the outer port to you inner port.\n## 4. check \n* use any server on your pc, and set outer port forward to your pc.\n* open the url\n\n## Congratulation ！！！ that'all!\n> now you can use the domain to visit your home PC.\n\n\n-----------------------------------\n\n# By Ch-zn\n* 需要些什么？\n1. 一台个人电脑\n2. 一台路由器\n3. 能够翻♂墙的渠道\n\n## 1.获取一个域名\n* 打开[no-ip](https://www.noip.com)网站，注册一个账户\n> 打开这个是要翻♂墙的\n* 注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.\n>(每30天会发信息给你，提示确认,毕竟免费)<br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑\n\n## 2.设置ip\n* 检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.\n>如果没有拨号上网的账号，请电话联系你的网络提供商\n\n## 3.设置端口转发\n* 登陆路由器的管理界面\n* 设置端口转发，比如设置外网的8890转发到你电脑的8080端口\n\n## 4.检查\n* 任意部署一个服务在你的电脑上，并设置外网端口转发到该服务\n* 通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！\n\n## 恭喜你，\n> 如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.\n\n","source":"_posts/Home-PC-Server-Build.md","raw":"---\ntitle: Home PC Server Build\ncatalog: true\ndate: 2019-03-23 00:31:00\nsubtitle: Use your Home PC to create a server\nheader-img:\ntags:\n- Network\ncatagories:\n- Network\n---\n# By En-us\n* what we need ?\n1. A home PC\n2. A router\n3. A method can cross The Wall (墙)\n\n## 1. Get a domain\n* open the site [no-ip](https://www.noip.com), and then, registry a count.\n* create a host for free (every 30 days, it will confirm once)\n> what every port is ok, when you set your no-ip hosts.\n\n## 2. Set the ip\n* check your router, use the PPPoe way to link the internet.\n> if you don't know the username and password for the PPPoe acount,<br>\nyou can call your ISP a tell to resolve.\n\n## 3. Set the Forward on router\n* login in your router manage page (usually the url is [192.168.1.1](http://192.168.1.1))\n* find the <b>Forward<b> setting, and forward the outer port to you inner port.\n## 4. check \n* use any server on your pc, and set outer port forward to your pc.\n* open the url\n\n## Congratulation ！！！ that'all!\n> now you can use the domain to visit your home PC.\n\n\n-----------------------------------\n\n# By Ch-zn\n* 需要些什么？\n1. 一台个人电脑\n2. 一台路由器\n3. 能够翻♂墙的渠道\n\n## 1.获取一个域名\n* 打开[no-ip](https://www.noip.com)网站，注册一个账户\n> 打开这个是要翻♂墙的\n* 注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.\n>(每30天会发信息给你，提示确认,毕竟免费)<br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑\n\n## 2.设置ip\n* 检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.\n>如果没有拨号上网的账号，请电话联系你的网络提供商\n\n## 3.设置端口转发\n* 登陆路由器的管理界面\n* 设置端口转发，比如设置外网的8890转发到你电脑的8080端口\n\n## 4.检查\n* 任意部署一个服务在你的电脑上，并设置外网端口转发到该服务\n* 通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！\n\n## 恭喜你，\n> 如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.\n\n","slug":"Home-PC-Server-Build","published":1,"updated":"2019-03-22T17:01:45.761Z","_id":"cjtka76yl00009qkbh3fcmw09","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span id=\"by-en-us\">By En-us</span></h1>\n<ul>\n<li>what we need ?</li>\n</ul>\n<ol>\n<li>A home PC</li>\n<li>A router</li>\n<li>A method can cross The Wall (墙)</li>\n</ol>\n<h2><span id=\"1-get-a-domain\">1. Get a domain</span></h2>\n<ul>\n<li>open the site <a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>, and then, registry a count.</li>\n<li>create a host for free (every 30 days, it will confirm once)</li>\n</ul>\n<blockquote>\n<p>what every port is ok, when you set your no-ip hosts.</p>\n</blockquote>\n<h2><span id=\"2-set-the-ip\">2. Set the ip</span></h2>\n<ul>\n<li>check your router, use the PPPoe way to link the internet.</li>\n</ul>\n<blockquote>\n<p>if you don’t know the username and password for the PPPoe acount,<br><br>\nyou can call your ISP a tell to resolve.</p>\n</blockquote>\n<h2><span id=\"3-set-the-forward-on-router\">3. Set the Forward on router</span></h2>\n<ul>\n<li>login in your router manage page (usually the url is <a href=\"http://192.168.1.1\" target=\"_blank\" rel=\"noopener\">192.168.1.1</a>)</li>\n<li>find the <b>Forward<b> setting, and forward the outer port to you inner port.</b></b></li>\n</ul>\n<h2><span id=\"4-check\">4. check</span></h2>\n<ul>\n<li>use any server on your pc, and set outer port forward to your pc.</li>\n<li>open the url</li>\n</ul>\n<h2><span id=\"congratulation-thatall\">Congratulation ！！！ that’all!</span></h2>\n<blockquote>\n<p>now you can use the domain to visit your home PC.</p>\n</blockquote>\n<hr>\n<h1><span id=\"by-ch-zn\">By Ch-zn</span></h1>\n<ul>\n<li>需要些什么？</li>\n</ul>\n<ol>\n<li>一台个人电脑</li>\n<li>一台路由器</li>\n<li>能够翻♂墙的渠道</li>\n</ol>\n<h2><span id=\"1获取一个域名\">1.获取一个域名</span></h2>\n<ul>\n<li>打开<a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>网站，注册一个账户</li>\n</ul>\n<blockquote>\n<p>打开这个是要翻♂墙的</p>\n</blockquote>\n<ul>\n<li>注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.</li>\n</ul>\n<blockquote>\n<p>(每30天会发信息给你，提示确认,毕竟免费)<br><br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑</p>\n</blockquote>\n<h2><span id=\"2设置ip\">2.设置ip</span></h2>\n<ul>\n<li>检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.</li>\n</ul>\n<blockquote>\n<p>如果没有拨号上网的账号，请电话联系你的网络提供商</p>\n</blockquote>\n<h2><span id=\"3设置端口转发\">3.设置端口转发</span></h2>\n<ul>\n<li>登陆路由器的管理界面</li>\n<li>设置端口转发，比如设置外网的8890转发到你电脑的8080端口</li>\n</ul>\n<h2><span id=\"4检查\">4.检查</span></h2>\n<ul>\n<li>任意部署一个服务在你的电脑上，并设置外网端口转发到该服务</li>\n<li>通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！</li>\n</ul>\n<h2><span id=\"恭喜你\">恭喜你，</span></h2>\n<blockquote>\n<p>如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1>By En-us</h1>\n<ul>\n<li>what we need ?</li>\n</ul>\n<ol>\n<li>A home PC</li>\n<li>A router</li>\n<li>A method can cross The Wall (墙)</li>\n</ol>\n<h2>1. Get a domain</h2>\n<ul>\n<li>open the site <a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>, and then, registry a count.</li>\n<li>create a host for free (every 30 days, it will confirm once)</li>\n</ul>\n<blockquote>\n<p>what every port is ok, when you set your no-ip hosts.</p>\n</blockquote>\n<h2>2. Set the ip</h2>\n<ul>\n<li>check your router, use the PPPoe way to link the internet.</li>\n</ul>\n<blockquote>\n<p>if you don’t know the username and password for the PPPoe acount,<br><br>\nyou can call your ISP a tell to resolve.</p>\n</blockquote>\n<h2>3. Set the Forward on router</h2>\n<ul>\n<li>login in your router manage page (usually the url is <a href=\"http://192.168.1.1\" target=\"_blank\" rel=\"noopener\">192.168.1.1</a>)</li>\n<li>find the <b>Forward<b> setting, and forward the outer port to you inner port.</b></b></li>\n</ul>\n<h2>4. check</h2>\n<ul>\n<li>use any server on your pc, and set outer port forward to your pc.</li>\n<li>open the url</li>\n</ul>\n<h2>Congratulation ！！！ that’all!</h2>\n<blockquote>\n<p>now you can use the domain to visit your home PC.</p>\n</blockquote>\n<hr>\n<h1>By Ch-zn</h1>\n<ul>\n<li>需要些什么？</li>\n</ul>\n<ol>\n<li>一台个人电脑</li>\n<li>一台路由器</li>\n<li>能够翻♂墙的渠道</li>\n</ol>\n<h2>1.获取一个域名</h2>\n<ul>\n<li>打开<a href=\"https://www.noip.com\" target=\"_blank\" rel=\"noopener\">no-ip</a>网站，注册一个账户</li>\n</ul>\n<blockquote>\n<p>打开这个是要翻♂墙的</p>\n</blockquote>\n<ul>\n<li>注册完后，创建一个免费的域名，目前是只能以  *.ddns.net 结尾.</li>\n</ul>\n<blockquote>\n<p>(每30天会发信息给你，提示确认,毕竟免费)<br><br>\n一定要安装no-ip的那个客户端.安装了才能保证你再变了外网ip后能够通过域名找到你的电脑</p>\n</blockquote>\n<h2>2.设置ip</h2>\n<ul>\n<li>检查路由器，使用 PPPoe(拨号上网)的方式来连接外网.</li>\n</ul>\n<blockquote>\n<p>如果没有拨号上网的账号，请电话联系你的网络提供商</p>\n</blockquote>\n<h2>3.设置端口转发</h2>\n<ul>\n<li>登陆路由器的管理界面</li>\n<li>设置端口转发，比如设置外网的8890转发到你电脑的8080端口</li>\n</ul>\n<h2>4.检查</h2>\n<ul>\n<li>任意部署一个服务在你的电脑上，并设置外网端口转发到该服务</li>\n<li>通过no-ip的地址+端口，打开你的服务, 能打开就说明成功了！</li>\n</ul>\n<h2>恭喜你，</h2>\n<blockquote>\n<p>如上步骤仅仅是大致流程，细节请参考搜索具体博客.论坛.</p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","slug":"Ubuntu.png","post":"cjnxe1f9e000cegkbn47ve8a2","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjnxe1f8v0001egkbujb98ykv","tag_id":"cjnxe1f900002egkburc3nt41","_id":"cjnxe1f930004egkbeiqzi38m"},{"post_id":"cjnxe1f8v0001egkbujb98ykv","tag_id":"cjnxe1f920003egkbo3rac24h","_id":"cjnxe1f930005egkba96wv1ds"},{"post_id":"cjnxe1f980006egkb89j43ssg","tag_id":"cjnxe1f9c000aegkbvyg8p60r","_id":"cjnxe1f9h000fegkb4n8f9icb"},{"post_id":"cjnxe1f9c000begkbdm5jd02o","tag_id":"cjnxe1f9c000aegkbvyg8p60r","_id":"cjnxe1f9i000iegkby6dn0b7t"},{"post_id":"cjnxe1f9c000begkbdm5jd02o","tag_id":"cjnxe1f9h000gegkbtuv5u9p6","_id":"cjnxe1f9i000jegkb6a45xvy6"},{"post_id":"cjnxe1f9e000cegkbn47ve8a2","tag_id":"cjnxe1f9c000aegkbvyg8p60r","_id":"cjnxe1f9j000legkbml75xypo"},{"post_id":"cjnxe1f9e000cegkbn47ve8a2","tag_id":"cjnxe1f9i000hegkbpstx5yyu","_id":"cjnxe1f9j000megkb4hq1v6ka"},{"post_id":"cjnxe1f9f000degkbl78qu37o","tag_id":"cjnxe1f9c000aegkbvyg8p60r","_id":"cjnxe1f9j000negkbomzdvemz"},{"post_id":"cjnxe1f9f000degkbl78qu37o","tag_id":"cjnxe1f9i000hegkbpstx5yyu","_id":"cjnxe1f9j000oegkbvzje0t9d"},{"post_id":"cjnxe265e000qegkbu3tzhnpp","tag_id":"cjnxe265i000regkbm49wts81","_id":"cjnxe265k000tegkb4xzu6fan"},{"post_id":"cjnxe265e000qegkbu3tzhnpp","tag_id":"cjnxe265j000segkb5f104lpm","_id":"cjnxe265k000uegkbqs6gw6o0"},{"post_id":"cjsooo0b20000kxkbrwptkw4j","tag_id":"cjnxe1f9c000aegkbvyg8p60r","_id":"cjsoozfzf0000y2kb94k5f1p0"},{"post_id":"cjsooo0b20000kxkbrwptkw4j","tag_id":"cjsootgee0000aikb3fh1aozr","_id":"cjsoozfzf0001y2kb7hi95car"},{"post_id":"cjtka76yl00009qkbh3fcmw09","tag_id":"cjnxe1f9h000gegkbtuv5u9p6","_id":"cjtkbaqzv00019qkba5qu3sze"}],"Tag":[{"name":"ArcGIS","_id":"cjnxe1f900002egkburc3nt41"},{"name":"JS","_id":"cjnxe1f920003egkbo3rac24h"},{"name":"Linux","_id":"cjnxe1f9c000aegkbvyg8p60r"},{"name":"Network","_id":"cjnxe1f9h000gegkbtuv5u9p6"},{"name":"Ubuntu","_id":"cjnxe1f9i000hegkbpstx5yyu"},{"name":"Database","_id":"cjnxe265i000regkbm49wts81"},{"name":"PostgreSQL","_id":"cjnxe265j000segkb5f104lpm"},{"name":"Shell","_id":"cjsootgee0000aikb3fh1aozr"}]}}