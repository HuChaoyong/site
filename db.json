{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":0,"renderable":0},{"_id":"source/img/sorata.jpeg","path":"img/sorata.jpeg","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"source/img/header_img/tf-logo-dark.png","path":"img/header_img/tf-logo-dark.png","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/img/header_img/home-bg-2-dark.jpg","path":"img/header_img/home-bg-2-dark.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.jpg","path":"img/header_img/archive-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/Iron-Man-3.png","path":"img/header_img/Iron-Man-3.png","modified":0,"renderable":0},{"_id":"source/img/beantech-desktop.png","path":"img/beantech-desktop.png","modified":0,"renderable":0},{"_id":"source/img/header_img/tag-bg.png","path":"img/header_img/tag-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":0,"renderable":0},{"_id":"source/download/pac.rar","path":"download/pac.rar","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1506228020000},{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1506228020000},{"_id":"themes/beantech/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1523639123500},{"_id":"themes/beantech/_config.yml","hash":"6afd65c055d9b1c70ae67323cc869f1b4aa60348","modified":1523639123501},{"_id":"source/_posts/Init-this-site.md","hash":"30e4086a11d9ffc9fff1ecef06be28634d58aa9b","modified":1522950970295},{"_id":"source/_posts/Server-operation-有关服务器操作.md","hash":"07789bc0eea7ce8c13abfb9b6e62b0b5a1544789","modified":1524965032316},{"_id":"source/_posts/Ubuntu常用软件安装.md","hash":"d45b64f288f3e22b8192df13b4b589e9af787b5f","modified":1524967860264},{"_id":"source/_posts/常用Linux命令-小松鼠.md","hash":"79a72f8c657b30bc799e64988d926d1585d8ffa1","modified":1524967026000},{"_id":"source/about/index.md","hash":"4fba4a7904f27b807eab6ad1e115735e415c6096","modified":1524844821030},{"_id":"source/archive/index.md","hash":"b9d28f7401765d1199a54b165f826f19a7ffb5c9","modified":1523641912423},{"_id":"source/img/favicon.ico","hash":"4bb0032df79a44c758f780cab8f29e777e7b6d97","modified":1522774103364},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1506228020000},{"_id":"source/tags/index.md","hash":"02d54619f5744b2a02de19c50323c5bd7c77884b","modified":1522948580497},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1523639123502},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1523639123503},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1523639123503},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1523639123504},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1523639123504},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1523639123505},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1523639123506},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1523639123506},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1523639123507},{"_id":"themes/beantech/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1523639123508},{"_id":"themes/beantech/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1523639123596},{"_id":"themes/beantech/layout/archive.ejs","hash":"72a150c8dff0031a9107d12eaa7c2e6c6ce950d2","modified":1523639123612},{"_id":"themes/beantech/layout/index.ejs","hash":"eb67c1ff788ab1cb8c5eee91f1b1ac28f6f1dbbc","modified":1523639123628},{"_id":"themes/beantech/layout/keynote.ejs","hash":"b081cf08733c08bb083480485236b7aca001b5e8","modified":1523639123651},{"_id":"themes/beantech/layout/page.ejs","hash":"973f3a648cca0df62f4b50901371837cddc40537","modified":1523639123668},{"_id":"themes/beantech/layout/layout.ejs","hash":"6efee96baaeb079b0abb2642c8d64edf01946a2e","modified":1523639123652},{"_id":"themes/beantech/layout/post.ejs","hash":"2914071987eae521b9d6184f117e1acb419f042d","modified":1523639123687},{"_id":"themes/beantech/layout/tags.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1523639123705},{"_id":"source/img/sorata.jpeg","hash":"efbb829c62acadd0eacc06557b20386e1b97997d","modified":1523641003201},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1506228020000},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"b6997406294e6b0c0cb1a3b7dd288e990763ca8f","modified":1523640509714},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"6ecf6d4be04ac761fc65722e1c8483e16ed4c37e","modified":1523639123548},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"5a1b86ee6816f6cfd8f6a42b4573f9fb5b21c42e","modified":1523639123561},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"b61fbcb1f255712d33ea93395d377cda07bc9da3","modified":1523639123573},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1523639123573},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1523639123575},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"837f01e8a20e5023b4b292d1b3141a399567da65","modified":1523639123576},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1523639123576},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1523639123577},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"5195d87769cb995a69d3386dc116138a9568ccad","modified":1523639123577},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"880268b7b622f576e463f0330c3240ff2ec0d0b6","modified":1523639123578},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"e1417bc7be94df4e8b558d958295d131eded849f","modified":1523639123578},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"e2d50e54e75f80b6de65f27a83f5548bb15c43b4","modified":1523639123586},{"_id":"themes/beantech/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1523639123720},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1523639123758},{"_id":"themes/beantech/source/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1523639123728},{"_id":"themes/beantech/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1523639123797},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1523639123807},{"_id":"themes/beantech/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1523639123838},{"_id":"themes/beantech/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1523639123839},{"_id":"themes/beantech/source/css/toc.styl","hash":"6c9a2d5f6f981624e0c4b64323493e8614efea29","modified":1523639123850},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1523639123980},{"_id":"themes/beantech/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1523639123850},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1523639123994},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1523639124047},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1523639124053},{"_id":"themes/beantech/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1523639124053},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1523639123995},{"_id":"themes/beantech/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1523639124054},{"_id":"source/_posts/Server-operation-有关服务器操作/bk.jpg","hash":"38b4f6213a6094359e9ee5158fe6cb23b5b95109","modified":1524846731492},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1523639123910},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1523639123893},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1523639123918},{"_id":"source/_posts/Ubuntu常用软件安装/back1.jpg","hash":"2f3cb30ca9a2960d9c31803ea2f867c7eb865b7a","modified":1520344338309},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1523639123862},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1523639123784},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1523639123968},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523639124031},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1523639123877},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1506228020000},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1506228020000},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1523639123769},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1523639123824},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1523639123814},{"_id":"source/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1506228020000},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1506228020000},{"_id":"themes/beantech/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1523639124017},{"_id":"source/img/header_img/home-bg-2-dark.jpg","hash":"0529e7fee1754ff9c76936ac2da4fe438549a57d","modified":1523641572131},{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","hash":"08d1ac12b530acf02a0b6f77c5312b7fd5670b30","modified":1512879752138},{"_id":"source/_posts/Ubuntu常用软件安装/back.png","hash":"798afcd192549968d3412bed1aa29aa3707adf67","modified":1515590863426},{"_id":"source/_posts/Server-operation-有关服务器操作/dh.jpg","hash":"7e9b8089d18d97a84bf24efac0ab43e6e8af13a0","modified":1441512279841},{"_id":"source/img/header_img/archive-bg.jpg","hash":"72f3d4ca574cdcb80bc9c941f39f9150ead7422b","modified":1523641814851},{"_id":"source/img/header_img/Iron-Man-3.png","hash":"1bf00cf51475f992e829ed2c8ef32cabcded2af3","modified":1523642621685},{"_id":"source/img/beantech-desktop.png","hash":"4a8f8b209c9db8fd5209f15b8e4590525e258b0f","modified":1506228020000},{"_id":"source/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1506228020000},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1506228020000},{"_id":"source/_posts/Server-operation-有关服务器操作/mnt.jpg","hash":"eddc055c05b5437ccefdb65c07051c3a72343aa0","modified":1524847255793},{"_id":"public/post-sitemap.xml","hash":"b3101f9593f413e0f19eac6698c399d589d10837","modified":1524967922153},{"_id":"public/tag-sitemap.xml","hash":"30c6e382c0fa30e0b7de5d6ef234f5467c297472","modified":1524967922154},{"_id":"public/page-sitemap.xml","hash":"934f26a919c510d131155bcf40229718a07f875c","modified":1524847853184},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1524847853184},{"_id":"public/sitemap.xml","hash":"48e1d3b57706aff75a818ee3869b642a758e9795","modified":1524967922263},{"_id":"public/404.html","hash":"2db52c809cad293ac649ac55e6b487dbd416be98","modified":1524847853224},{"_id":"public/2018/04/06/Init-this-site/index.html","hash":"aa26206f4f586652c316b1a5846b8b2e027baa6c","modified":1524847932303},{"_id":"public/2018/04/07/Ubuntu常用软件安装/index.html","hash":"8507375f4cdbbba15bb652f021936e7b07c5419f","modified":1524967922312},{"_id":"public/2018/04/07/常用Linux命令-小松鼠/index.html","hash":"73b15af6cdfc3641e0b0b688bea43e2b27cfed55","modified":1524967922312},{"_id":"public/tags/index.html","hash":"aa4fdeffdb38add922e0bb5452e46d6e94eab0c4","modified":1524847853254},{"_id":"public/archive/index.html","hash":"bfac568189eda24a535c1f0565a7dbab3d12e51a","modified":1524847932304},{"_id":"public/about/index.html","hash":"d57ac017090a77220245b701d34ba9c991541e17","modified":1524847932304},{"_id":"public/archives/index.html","hash":"19f385a3c374a95338ed0c0bd11e18096d6f8eff","modified":1524847932305},{"_id":"public/index.html","hash":"330ed315c7f919ade659889b02dfcbd13ef63167","modified":1524967922312},{"_id":"public/archives/2018/index.html","hash":"5efb60ace8c14150c16e91ac770fa41a82707ec3","modified":1524847932305},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/index.html","hash":"1fa6e2e611b9a89bd954c19ab5b47cd6f497e42f","modified":1524967922312},{"_id":"public/tags/Linux/index.html","hash":"4a8926bc14d42446d5f4b50e5987ba5d673f8786","modified":1524847932305},{"_id":"public/archives/2018/04/index.html","hash":"670b815e46a2e2f1285be32e05bac2f0ae4ae892","modified":1524847932305},{"_id":"public/tags/Ubuntu/index.html","hash":"abedc31ea55f58668be9ad12f81686f1f45d12d1","modified":1524847932305},{"_id":"public/live2dw/assets/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1524847853282},{"_id":"public/live2dw/assets/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1524847853283},{"_id":"public/live2dw/assets/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1524847853284},{"_id":"public/live2dw/assets/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1524847853284},{"_id":"public/live2dw/assets/package.json","hash":"6d359ba64ae6d80ab123d29d2cb40549d12d8e9d","modified":1524847853284},{"_id":"public/live2dw/assets/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1524847853284},{"_id":"public/live2dw/assets/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1524847853285},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"6e013af9c502b2e63ac5e42944e3244f8f515eb7","modified":1524847853286},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/bk.jpg","hash":"38b4f6213a6094359e9ee5158fe6cb23b5b95109","modified":1524847853306},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"7d3a9c937317b9c15f2c3a872f0e26607a729458","modified":1524847853312},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"5e7669733ecd0b1bc3881d2cf7fcc01e2990a07d","modified":1524847853313},{"_id":"public/live2dw/assets/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1524847853318},{"_id":"public/live2dw/assets/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1524847853323},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"09521263ecc625a246b3406c385300e99e966a2e","modified":1524847853356},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/dh.jpg","hash":"7e9b8089d18d97a84bf24efac0ab43e6e8af13a0","modified":1524847853365},{"_id":"public/2018/04/28/Server-operation-有关服务器操作/mnt.jpg","hash":"eddc055c05b5437ccefdb65c07051c3a72343aa0","modified":1524847853374},{"_id":"source/download/pac.rar","hash":"529d4d39c9cf4776ddcdc76b5238e049bc5b1117","modified":1524939413970},{"_id":"public/download/pac.rar","hash":"529d4d39c9cf4776ddcdc76b5238e049bc5b1117","modified":1524967922429}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2018-04-05T16:47:15.669Z","updated":"2017-09-24T04:40:20.000Z","path":"404.html","title":"","comments":1,"_id":"cjgi6geau0000b3mild4z1hd5","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"archive","title":"博文","header-img":"img/header_img/archive-bg.jpg","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"谁没点经历,写下了吧","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"博文\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"谁没点经历,写下了吧\"\n---\n","updated":"2018-04-13T17:51:52.423Z","path":"archive/index.html","_id":"cjgi6gedh0002b3mi5xp6oo77","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"关于","date":"2016-04-20T20:48:33.000Z","description":"","header-img":"img/header_img/Iron-Man-3.png","comments":1,"_content":"\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"关于\"\ndate: 2016-04-21 04:48:33\ndescription: \"\"\nheader-img: \"img/header_img/Iron-Man-3.png\"\ncomments: true\n---\n\n> 爱生活、爱折腾、\n> ～\n> su be te wo a i shi te ru.","updated":"2018-04-27T16:00:21.030Z","path":"about/index.html","_id":"cjgi6gedp0004b3miz08s3nyh","content":"<blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>爱生活、爱折腾、<br>\n～<br>\nsu be te wo a i shi te ru.</p>\n</blockquote>\n"},{"layout":"tags","title":"标签","description":"","header-img":"img/header_img/tag-bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"标签\"\ndescription: \"\"\nheader-img: \"img/header_img/tag-bg.png\"\n---\n","date":"2018-04-05T17:16:20.497Z","updated":"2018-04-05T17:16:20.497Z","path":"tags/index.html","comments":1,"_id":"cjgi6gedz0007b3mif7r7nye9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Server operation(有关服务器操作)","catalog":true,"date":"2018-04-27T16:03:40.000Z","subtitle":null,"header-img":"mnt.jpg","catagories":["Linux"],"_content":"> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.111.222.333\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# [Live Demo]()\n---\n![pic](./dh.jpg)","source":"_posts/Server-operation-有关服务器操作.md","raw":"---\ntitle: Server operation(有关服务器操作)\ncatalog: true\ndate: 2018-04-28 00:03:40\nsubtitle:\nheader-img: \"mnt.jpg\"\ntags:\n- Linux\ncatagories:\n- Linux\n---\n> 平时玩服务器，这些个东西得记下来(我懒)\n\n# ssh 连接服务器\n```bash\n# login the remote server by port 32627, ssh default port is 22\n> ssh -p 32627 root@23.111.222.333\n# then input the password\n```\n\n# scp (uplaod or download file)\n```bash\n# upload local file to server, by port 32627\nscp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads\n# download file from server\nscp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./\n```\n\n# tar and zip (zip or unzip file)\n\n```bash\n# unzip jdk file to the '/usr/program'  directory\n# if you don't special the directory, it will unzip in current directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program\nzip jdk-8u151.zip -d /usr/program\n\n# zip the directory 'bootstrap' to 'btsp.tar.gz'\ntar czvf btsp.tar.gz bootstrap\nzip -r btsp.zip bootstrap\n# zip the all '*.jpg' file to 'picture.tar.gz'\ntar czvf picture.tar.gz *.jpg\n```\n# wget \n\n```bash\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n```\n\n# [Live Demo]()\n---\n![pic](./dh.jpg)","slug":"Server-operation-有关服务器操作","published":1,"updated":"2018-04-29T01:23:52.316Z","_id":"cjgi6ged90001b3miyuf3cd7n","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1><span id=\"ssh-连接服务器\">ssh 连接服务器</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.111.222.333</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"scp-uplaod-or-download-file\">scp (uplaod or download file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tar-and-zip-zip-or-unzip-file\">tar and zip (zip or unzip file)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">zip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1><span id=\"wget\">wget</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"live-demo\"></span></h1>\n<hr>\n<p><img src=\"./dh.jpg\" alt=\"pic\"></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>平时玩服务器，这些个东西得记下来(我懒)</p>\n</blockquote>\n<h1>ssh 连接服务器</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># login the remote server by port 32627, ssh default port is 22</span></span><br><span class=\"line\">&gt; ssh -p 32627 root@23.111.222.333</span><br><span class=\"line\"><span class=\"comment\"># then input the password</span></span><br></pre></td></tr></table></figure>\n<h1>scp (uplaod or download file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upload local file to server, by port 32627</span></span><br><span class=\"line\">scp -P 32627 ./jdk-8u151-linux-x64.tar.gz root@23.111.222.333:~/Downloads</span><br><span class=\"line\"><span class=\"comment\"># download file from server</span></span><br><span class=\"line\">scp -P 32627 root@23.111.222.333:~/Downloads/1.jpeg ./</span><br></pre></td></tr></table></figure>\n<h1>tar and zip (zip or unzip file)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip jdk file to the '/usr/program'  directory</span></span><br><span class=\"line\"><span class=\"comment\"># if you don't special the directory, it will unzip in current directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C /usr/program</span><br><span class=\"line\">zip jdk-8u151.zip -d /usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># zip the directory 'bootstrap' to 'btsp.tar.gz'</span></span><br><span class=\"line\">tar czvf btsp.tar.gz bootstrap</span><br><span class=\"line\">zip -r btsp.zip bootstrap</span><br><span class=\"line\"><span class=\"comment\"># zip the all '*.jpg' file to 'picture.tar.gz'</span></span><br><span class=\"line\">tar czvf picture.tar.gz *.jpg</span><br></pre></td></tr></table></figure>\n<h1>wget</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>\n<h1><a href=\"\">Live Demo</a></h1>\n<hr>\n<p><img src=\"./dh.jpg\" alt=\"pic\"></p>\n"},{"title":"Init this site","catalog":true,"date":"2018-04-05T17:34:00.000Z","subtitle":"初始化！","header-img":"site-init.png","_content":"> 建站日，标记下...\n","source":"_posts/Init-this-site.md","raw":"---\ntitle: Init this site\ncatalog: true\ndate: 2018-04-06 01:34:00\nsubtitle: \"初始化！\"\nheader-img: \"site-init.png\"\ntags:\n---\n> 建站日，标记下...\n","slug":"Init-this-site","published":1,"updated":"2018-04-05T17:56:10.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgi6gedk0003b3mi3j1p1dpb","content":"<blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>建站日，标记下…</p>\n</blockquote>\n"},{"title":"Ubuntu常用软件安装","catalog":true,"date":"2018-04-07T04:39:46.000Z","subtitle":"记录软件安装过程","header-img":"back1.jpg","_content":"> 编程常用软件安装\n-------------------------\n# [Live Demo]()\n---\n![pic](./back.png)\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n\n# tomcat\n\n> downlaod from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- select source code\n```\ntar xzvf node-v8.11.1.tar.gz -C/usr/program\n```\n> \n> set environment\n```\nvi /etc/profile\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/usr/program/node-v8.11.1\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource /etc/profile\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/pac.rar), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n","source":"_posts/Ubuntu常用软件安装.md","raw":"---\ntitle: Ubuntu常用软件安装\ncatalog: true\ndate: 2018-04-07 12:39:46\nsubtitle: \"记录软件安装过程\"\nheader-img: \"back1.jpg\"\ntags:\n- Linux\n- Ubuntu\n---\n> 编程常用软件安装\n-------------------------\n# [Live Demo]()\n---\n![pic](./back.png)\n\n# java\n\n> download from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/index.html), I use java8\n```bash\n# before you install java, you should uninstall 'openjdk'\nsudo apt-get remove openjdk*\nsudo apt-get autoremove\n# unzip file on '/usr/progrm' directory\ntar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program\n\n# set environment\nsudo vi ~/.bashrc \n```\n> add flow on the last (将下面添加到.bashrc文件的末尾)\n```bash\n#set oracle jdk environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre  \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  \nexport PATH=${JAVA_HOME}/bin:$PATH \n```\n> active the setting (激活配置)\n```bash\nsource ~/.bashrc\n# check\njava -version\n```\n\n# tomcat\n\n> downlaod from [Apache tomcat](https://tomcat.apache.org/download-80.cgi), I use tomcat8\n```bash\n# upzip file on directory '/usr/program'\ntar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program\n```\n> set 'startup.sh' and 'shutdown.sh' on 'apache-tomcat-8.5.29/bin' directory\n>\n>insert flow before last line of 'startup.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n>insert flow before last line of 'shutdown.sh'\n```\n#set java environment\nexport JAVA_HOME=/usr/program/jdk-8u151-linux-x64\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:%{JAVA_HOME}/lib:%{JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n#tomcat\nexport TOMCAT_HOME=/usr/tomcat/apache-tomcat-8.5.29\n```\n>\n> run tomcat\n```\n# if you has changed the port ,like '80', please use 'sudo' run this command\n/usr/tomcat/apache-tomcat-8.5.29/bin startup.sh\n```\n>\n> stop tomcat\n```\n/usr/tomcat/apache-tomcat-8.5.29/bin shutdown.sh\n```\n\n# nodejs\n> download from [NodeJs.org](https://nodejs.org/en/download/)-- select source code\n```\ntar xzvf node-v8.11.1.tar.gz -C/usr/program\n```\n> \n> set environment\n```\nvi /etc/profile\n```\n>\n> add flow on the last\n```\nexport NODE_HOME=/usr/program/node-v8.11.1\nexport PATH=$PATH:$NODE_HOME/bin\nexport NODE_PATH=$NODE_HOME/lib/node_modules\n```\n>\n> active file\n```\nsource /etc/profile\n```\n>\n> check\n```\nnode -v\nnpm -v\n```\n\n# shadowsocks (ss)\n```bash\n# install shadowsocks\nsudo apt-get update \nsudo apt-get install python-gevent python-pip\npip install shadowsocks\n\n# set config\nsudo vi /usr/program/ss.json\n# copy flow lines\n{\n    \"server\":\"23.106.129.100\",\n    \"server_port\":1994,\n    \"local_port\":1080,\n    \"password\":\"your service psd\",\n    \"timeout\":600,\n    \"method\":\"rc4-md5\"\n}\n# save ss.json ,then run ss\nsslocal -c /etc/ss.json\n```\nthere are two method,  1. PAC  2. global\nopen system setting => Network => Network proxy\n 1. PAC , download pac file from [here](/download/pac.rar), unzip you will get a 'autoproxy.pac' file\n on the 'Network proxy' setting page, select 'Automatic'\n type the  'autoproxy.pac' path. like\n ```bash\n file:///usr/program/autoproxy.pac\n ```\n then Apply system wide\n\n 2. global\n on the 'Network proxy' setting page, select 'Manual'\n on the 'Socks Host' line, type like flow, '1080' is your 'local_port' in ss.json file\nhost: 127.0.0.1\nport: 1080\n then Apply system wide\n\n","slug":"Ubuntu常用软件安装","published":1,"updated":"2018-04-29T02:11:00.264Z","_id":"cjgi6gedx0006b3mioavek0k8","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>编程常用软件安装</p>\n</blockquote>\n<hr>\n<h1><span id=\"live-demo\"></span></h1>\n<hr>\n<p><img src=\"./back.png\" alt=\"pic\"></p>\n<h1><span id=\"java\">java</span></h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1><span id=\"tomcat\">tomcat</span></h1>\n<blockquote>\n<p>downlaod from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1><span id=\"nodejs\">nodejs</span></h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>– select source code</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzvf <span class=\"keyword\">node</span><span class=\"title\">-v8</span>.<span class=\"number\">11.1</span>.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vi</span> /etc/<span class=\"keyword\">profile</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/usr/program/node-v8.11.1</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">source</span> <span class=\"regexp\">/etc/</span>profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h1><span id=\"shadowsocks-ss\">shadowsocks (ss)</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/pac.rar\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>编程常用软件安装</p>\n</blockquote>\n<hr>\n<h1><a href=\"\">Live Demo</a></h1>\n<hr>\n<p><img src=\"./back.png\" alt=\"pic\"></p>\n<h1>java</h1>\n<blockquote>\n<p>download from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle</a>, I use java8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># before you install java, you should uninstall 'openjdk'</span></span><br><span class=\"line\">sudo apt-get remove openjdk*</span><br><span class=\"line\">sudo apt-get autoremove</span><br><span class=\"line\"><span class=\"comment\"># unzip file on '/usr/progrm' directory</span></span><br><span class=\"line\">tar xzvf jdk-8u151-linux-x64.tar.gz -C/usr/program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment</span></span><br><span class=\"line\">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last (将下面添加到.bashrc文件的末尾)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active the setting (激活配置)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># check</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<h1>tomcat</h1>\n<blockquote>\n<p>downlaod from <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener\">Apache tomcat</a>, I use tomcat8</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># upzip file on directory '/usr/program'</span></span><br><span class=\"line\">tar xzvf apache-tomcat-8.5.29.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’ and ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’ on ‘apache-tomcat-8.5.29/bin’ directory</p>\n<p>insert flow before last line of ‘<a href=\"http://startup.sh\" target=\"_blank\" rel=\"noopener\">startup.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>insert flow before last line of ‘<a href=\"http://shutdown.sh\" target=\"_blank\" rel=\"noopener\">shutdown.sh</a>’</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#set java environment</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JAVA_HOME</span>=/usr/program/jdk-8u151-linux-x64</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">JRE_HOME</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">CLASSPATH</span>=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class=\"line\"><span class=\"comment\">#tomcat</span></span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">TOMCAT_HOME</span>=/usr/tomcat/apache-tomcat-8.5.29</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>run tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you has changed the port ,like '80', please use 'sudo' run this command</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin startup.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stop tomcat</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/usr/</span>tomcat<span class=\"regexp\">/apache-tomcat-8.5.29/</span>bin shutdown.sh</span><br></pre></td></tr></table></figure>\n<h1>nodejs</h1>\n<blockquote>\n<p>download from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">NodeJs.org</a>– select source code</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzvf <span class=\"keyword\">node</span><span class=\"title\">-v8</span>.<span class=\"number\">11.1</span>.tar.gz -C/usr/program</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>set environment</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vi</span> /etc/<span class=\"keyword\">profile</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>add flow on the last</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_HOME</span>=/usr/program/node-v8.11.1</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PATH</span>=<span class=\"variable\">$PATH</span>:$NODE_HOME/bin</span><br><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">NODE_PATH</span>=<span class=\"variable\">$NODE_HOME</span>/lib/node_modules</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>active file</p>\n</blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">source</span> <span class=\"regexp\">/etc/</span>profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>check</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h1>shadowsocks (ss)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install shadowsocks</span></span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get install python-gevent python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set config</span></span><br><span class=\"line\">sudo vi /usr/program/ss.json</span><br><span class=\"line\"><span class=\"comment\"># copy flow lines</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"23.106.129.100\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:1994,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"your service psd\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"rc4-md5\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># save ss.json ,then run ss</span></span><br><span class=\"line\">sslocal -c /etc/ss.json</span><br></pre></td></tr></table></figure>\n<p>there are two method,  1. PAC  2. global<br>\nopen system setting =&gt; Network =&gt; Network proxy</p>\n<ol>\n<li>PAC , download pac file from <a href=\"/download/pac.rar\">here</a>, unzip you will get a ‘autoproxy.pac’ file<br>\non the ‘Network proxy’ setting page, select 'Automatic’<br>\ntype the  ‘autoproxy.pac’ path. like</li>\n</ol>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///usr/program/autoproxy.pac</span><br></pre></td></tr></table></figure>\n<p>then Apply system wide</p>\n<ol start=\"2\">\n<li>global<br>\non the ‘Network proxy’ setting page, select 'Manual’<br>\non the ‘Socks Host’ line, type like flow, ‘1080’ is your ‘local_port’ in ss.json file<br>\nhost: 127.0.0.1<br>\nport: 1080<br>\nthen Apply system wide</li>\n</ol>\n"},{"title":"常用Linux命令(小松鼠)","catalog":true,"date":"2018-04-07T02:03:06.000Z","subtitle":"日常折腾Ubuntu","header-img":"Ubuntu.png","catagories":["Linux"],"_content":"> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","source":"_posts/常用Linux命令-小松鼠.md","raw":"---\ntitle: 常用Linux命令(小松鼠)\ncatalog: true\ndate: 2018-04-07 10:03:06\nsubtitle: \"日常折腾Ubuntu\"\nheader-img: \"Ubuntu.png\"\ntags:\n- Linux\n- Ubuntu\ncatagories:\n- Linux\n---\n> 日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)\n>\n\n# rm\n---\n> rm => remove , delete \n> -r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)\n> -f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)\n```bash\n # delete file 'abc.txt' on current directory\nrm -rf abc.txt\n # delete directory 'fld'\nrm -rf fld\n# delete all file and directory which match 'mysql-*' by regular express\nrm -rf mysql-*\n```\n\n# cp\n---\n> cp => copy\n> -r => copy with director recursively(复制时，递归子目录)\n> -f => force\n```bash\n# copy 'aaa.txt' on current directory and named 'bbb.txt.backup'\ncp aaa.txt bbb.txt.backup\n# copy 'bbb' director to the './a-aaa' directory\ncp -rf bbb ./a-aaa\n# copy 'bbb' director's all file to the './a-aaa' directory\ncp -rf bbb/* ./a-aaa \n```\n\n# mv\n> mv => move / rename\n> -i => if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)\n> -f => force\n\n```bash\n# rename 'aaa.txt' to 'bbb.txt'\nmv aaa.txt bbb.txt \n# move 'aaa.txt' to 'bbb' directory\nmv aaa.txt bbb\n\n# if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename\n# (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)\nmv aaa bbb\n```\n\n# md5\n\n```bash\nmd5sum netease-cloud-music.deb\n```\nit will show md5 code\n\n# install .deb\n\n```bash\nsudo dpkg -i netease-cloud-music.deb\n```\n\n```bash\n# if there are some dependencies problem, repaired\nsudo apt-get install -f\n```\n```bash\n# uninstall\nsudo apt-get purege netease-cloud-music\n```\n\n# boot u-disk make\n```bash\n# get u-disk path, like '/dev/sdc1'\nsudo fdisk -l\n\n# clean u-disk\nsudo umount /dev/sdc1\nsudo mkfs.vfat /dev/sdc1 -I\n\n# use dd make it, if there is a 'ubuntu18.04.iso' file on current directory \nsudo dd if=ubuntu18.04.iso of=/dev/sdc1\n# maybe waite for 10 minutes, it done\n```","slug":"常用Linux命令-小松鼠","published":1,"updated":"2018-04-29T01:57:06.000Z","_id":"cjgi6gee20008b3mirz5tmpg0","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1><span id=\"rm\">rm</span></h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1><span id=\"cp\">cp</span></h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1><span id=\"mv\">mv</span></h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1><span id=\"md5\">md5</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1><span id=\"install-deb\">install .deb</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1><span id=\"boot-u-disk-make\">boot u-disk make</span></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>日常使用Ubuntu中，使用频率较高的命令(基础得不能再基础了)</p>\n</blockquote>\n<h1>rm</h1>\n<hr>\n<blockquote>\n<p>rm =&gt; remove , delete<br>\n-r Remove directories and their contents recursively(删除本目录及其递归的子目录文件)<br>\n-f Ignore nonexistent files, never prompt, means force (忽略不存在文件，不产生任何提示)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># delete file 'abc.txt' on current directory</span></span><br><span class=\"line\">rm -rf abc.txt</span><br><span class=\"line\"> <span class=\"comment\"># delete directory 'fld'</span></span><br><span class=\"line\">rm -rf fld</span><br><span class=\"line\"><span class=\"comment\"># delete all file and directory which match 'mysql-*' by regular express</span></span><br><span class=\"line\">rm -rf mysql-*</span><br></pre></td></tr></table></figure>\n<h1>cp</h1>\n<hr>\n<blockquote>\n<p>cp =&gt; copy<br>\n-r =&gt; copy with director recursively(复制时，递归子目录)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 'aaa.txt' on current directory and named 'bbb.txt.backup'</span></span><br><span class=\"line\">cp aaa.txt bbb.txt.backup</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb ./a-aaa</span><br><span class=\"line\"><span class=\"comment\"># copy 'bbb' director's all file to the './a-aaa' directory</span></span><br><span class=\"line\">cp -rf bbb/* ./a-aaa</span><br></pre></td></tr></table></figure>\n<h1>mv</h1>\n<blockquote>\n<p>mv =&gt; move / rename<br>\n-i =&gt; if there are some same file, prompt (若指定目录已有同名文件，则先询问是否覆盖旧文件)<br>\n-f =&gt; force</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rename 'aaa.txt' to 'bbb.txt'</span></span><br><span class=\"line\">mv aaa.txt bbb.txt </span><br><span class=\"line\"><span class=\"comment\"># move 'aaa.txt' to 'bbb' directory</span></span><br><span class=\"line\">mv aaa.txt bbb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if 'bbb' directory is exit, move 'aaa' directory to 'bbb' directory, else rename</span></span><br><span class=\"line\"><span class=\"comment\"># (若bbb目录存在，则将aaa目录放在bbb目录下，否则，重新命名aaa 为bbb)</span></span><br><span class=\"line\">mv aaa bbb</span><br></pre></td></tr></table></figure>\n<h1>md5</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<p>it will show md5 code</p>\n<h1>install .deb</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music.deb</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if there are some dependencies problem, repaired</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uninstall</span></span><br><span class=\"line\">sudo apt-get purege netease-cloud-music</span><br></pre></td></tr></table></figure>\n<h1>boot u-disk make</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get u-disk path, like '/dev/sdc1'</span></span><br><span class=\"line\">sudo fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clean u-disk</span></span><br><span class=\"line\">sudo umount /dev/sdc1</span><br><span class=\"line\">sudo mkfs.vfat /dev/sdc1 -I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use dd make it, if there is a 'ubuntu18.04.iso' file on current directory </span></span><br><span class=\"line\">sudo dd <span class=\"keyword\">if</span>=ubuntu18.04.iso of=/dev/sdc1</span><br><span class=\"line\"><span class=\"comment\"># maybe waite for 10 minutes, it done</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/常用Linux命令-小松鼠/Ubuntu.png","slug":"Ubuntu.png","post":"cjgi6gee20008b3mirz5tmpg0","modified":0,"renderable":0},{"_id":"source/_posts/Server-operation-有关服务器操作/bk.jpg","slug":"bk.jpg","post":"cjgi6ged90001b3miyuf3cd7n","modified":0,"renderable":0},{"_id":"source/_posts/Server-operation-有关服务器操作/dh.jpg","slug":"dh.jpg","post":"cjgi6ged90001b3miyuf3cd7n","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu常用软件安装/back.png","slug":"back.png","post":"cjgi6gedx0006b3mioavek0k8","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu常用软件安装/back1.jpg","slug":"back1.jpg","post":"cjgi6gedx0006b3mioavek0k8","modified":0,"renderable":0},{"_id":"source/_posts/Server-operation-有关服务器操作/mnt.jpg","slug":"mnt.jpg","post":"cjgi6ged90001b3miyuf3cd7n","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjgi6ged90001b3miyuf3cd7n","tag_id":"cjgi6geds0005b3miai510567","_id":"cjgi6geeb000ab3mi2gaus8va"},{"post_id":"cjgi6gee20008b3mirz5tmpg0","tag_id":"cjgi6geds0005b3miai510567","_id":"cjgk5v1wz0000numixzo54ysa"},{"post_id":"cjgi6gee20008b3mirz5tmpg0","tag_id":"cjgi6geee000bb3minse7kgx8","_id":"cjgk5v1wz0001numiq4yhejxv"},{"post_id":"cjgi6gedx0006b3mioavek0k8","tag_id":"cjgi6geds0005b3miai510567","_id":"cjgk6fe8q00001fmiytrpd8ki"},{"post_id":"cjgi6gedx0006b3mioavek0k8","tag_id":"cjgi6geee000bb3minse7kgx8","_id":"cjgk6fe8r00011fmib9hr7ms5"}],"Tag":[{"name":"Linux","_id":"cjgi6geds0005b3miai510567"},{"name":"Ubuntu","_id":"cjgi6geee000bb3minse7kgx8"}]}}